{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///js/tmpl.min.js","webpack:///webpack/bootstrap d66178313b09f6c583a4?47d7","webpack:///./src/tmpl/fn.js?b572","webpack:///./src/tmpl/in_browser.js?f4f9","webpack:///./src/tmpl/tmpl-regexp.js?dc0d","webpack:///./src/tmpl/escapeCode.js?6bec","webpack:///./src/tmpl/fs.js?063c","webpack:///./src/tmpl/set.js?b5db","webpack:///./src/tmpl/tmpl-render.js?e5fb","webpack:///(webpack)/buildin/module.js?c3c2","webpack:///./src/tmpl/compatibility.js?9b57","webpack:///./src/tmpl/tmpl.js?0f12","webpack:///./src/index.js?9552","webpack:///./src/tmpl/block.js?76bd","webpack:///./src/tmpl/config.js?486b","webpack:///./src/tmpl/dom.js?200e","webpack:///./src/tmpl/include.js?1b38","webpack:///./src/tmpl/init.js?a910","webpack:///./src/tmpl/render.js?8efc","webpack:///./src/tmpl/router.js?b89d"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_in_browser","_in_browser2","Fn","array","Array","fn","string","num","isNaN","el","nodeType","cb","len","isArr","options","each","option","context","args","isFn","apply","arr","newArray","item","index","indexOf","push","newArr","isObj","JSON","parse","stringify","_this","xhr","XMLHttpRequest","type","toUpperCase","timeout","async","open","url","serialize","data","setRequestHeader","contentType","addEventListener","responseText","e","readyState","status","success","error","send","result","val","encodeURIComponent","substring","expr","tmItem","replace","RegExp","on","document","attachEvent","off","removeEventListener","detachEvent","inBrowser","window","FILTER_TRANFORM","FILTER_SCRIPT","SCRIPT_TAG","QUEST","INCLUDE_ID","INCLUDE_FILE","INCLUDE_ERROR","BLOCK","BLOCK_APPEND","BLOCK_INSETR","EXTEND","escapeCode","&","<",">","\"","'","`","fs","require","setEvent","constructor","_event","events","eventType","eventEl","setInstance","config","_fn2","_get","setEl","template","getEl","innerHTML","_fn","setRegExp","open_tag","initRegExp","close_tag","SCRIPT_REGEXP","NATIVE_SCRIPT","ECHO_SCRIPT_REGEXP","ECHO_ESCAPE_REGEXP","REPLACE_ECHO_SCRIPT_OPEN_TAG","ECHO_ESCAPE_REGEXP_OPEN_TAG","OPEN_TAG_REGEXP","CLOSE_TAG_REGEXP","setDom","_block2","clearBlock","replaceAlias","_include2","script","match","replaceScript","setSeize","echoString","split","domString","longString","_echoString","filterTransferredMeaning","_string","lastIndex","test","_longString","isStr","_tmplRegexp","dom","join","alias","scriptTags","filterScriptTag","splitScriptTag","_include","_block","_escapeCode","webpackPolyfill","deprecate","paths","children","undefined","getElementsByClassName","className","getElementsByTagName","elements","child","classNames","j","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_init2","_init3","_render","_render2","_dom","_dom2","_config","_config2","_escapeCode2","_set","Tmpl","_Dom","opts","getPrototypeOf","extend","copy","init","tmpl","escapeVal","install","_typeof","Symbol","iterator","_compatibility","_tmpl","_tmpl2","global","demand","version","replaceBlock","_tmplRender","baseFile","unique","baseFileName","toString","blockTmpl","layoutTmpl","_fs2","readFileSync","encoding","layoutTmplFindBlock","layoutTmplFindBlockStr","baseBlockName","block","hasBlock","blocktmpl","_index","_name","$2","blockContent","$3","_fs","methods","bindFn","_className","findIndex","splice","__className","setEntrust","ele","event","ev","srcElement","_eventType","bind","hasClass","Dom","exp","querySelector","getElementById","querySelectorAll","getEls","_this2","arguments","eventIndex","hasClassName","hasLen","attr","_this3","_attr","setAttribute","removeAttribute","attrs","Function","getAttribute","prop","_prop","html","text","textContent","parent","parentNode","hasClassParent","parents","els","childNodes","hasClassChild","childrens","nextEl","nextSibling","next","siblings","prevEl","previousSibling","prev","time","opacity","css","isNum","animate","style","display","opactiy","hide","show","_this4","timer","setInterval","animateStatus","speed","cssVal","Number","Math","ceil","documentElement","scrollTop","body","maxScrollTop","scrollHeight","innerHeight","parseInt","floor","setVal","setScrollTop","clearInterval","curCss","setStyle","isCameCase","camelCases","AZ","_AZ","str","toLowerCase","_css","getComputedStyle","camelCase","currentStyle","cssName","remove","removeChild","console","warn","_this5","fragment","createDocumentFragment","tempEl","createElement","childHtml","tagName","newScript","attributes","appendChild","stopPropagation","cancelBubble","box","getBoundingClientRect","docElem","win","clientTop","clientLeft","pageYOffset","scrollLeft","pageXOffset","top","left","replaceInclude","include","includeTmpl","includeId","trimArr","id","replaceIncludeRegExp","run","created","_router","setRouter","mounted","checkRouterStatus","Render","ex","insertBefore","router","changeRoutereStatus"],"mappings":"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","file":"js/tmpl.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tmpl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tmpl\"] = factory();\n\telse\n\t\troot[\"Tmpl\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * \n * \t\t\ttmpl.js v1.0.5\n * \t\t\t(c) 2016-2017 Blue\n * \t\t\tReleased under the MIT License.\n * \t\t\thttps://github.com/azhanging/tmpl\n * \t\t\ttime:Tue Nov 07 2017 18:04:45 GMT+0800 (中国标准时间)\n * \t\t\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tmpl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tmpl\"] = factory();\n\telse\n\t\troot[\"Tmpl\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //运行环境是否在浏览器\n\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*常用的方法*/\nvar Fn = function () {\n    function Fn() {\n        _classCallCheck(this, Fn);\n    }\n\n    _createClass(Fn, [{\n        key: 'isArr',\n        value: function isArr(array) {\n            return array instanceof Array || !!(array && array.length);\n        }\n    }, {\n        key: 'isObj',\n        value: function isObj(obj) {\n            return obj instanceof Object && !(obj instanceof Array) && obj !== null;\n        }\n    }, {\n        key: 'isFn',\n        value: function isFn(fn) {\n            return typeof fn === 'function';\n        }\n    }, {\n        key: 'isStr',\n        value: function isStr(string) {\n            return typeof string === 'string';\n        }\n    }, {\n        key: 'isNum',\n        value: function isNum(num) {\n            return typeof num === 'number' || !isNaN(num);\n        }\n    }, {\n        key: 'isEl',\n        value: function isEl(el) {\n            return !!(el && el.nodeType);\n        }\n    }, {\n        key: 'each',\n        value: function each(obj, cb) {\n            //遍历\n            var i = 0,\n                len = obj.length;\n            if (this.isArr(obj)) {\n                for (; i < len; i++) {\n                    cb(obj[i], i);\n                }\n            } else {\n                for (i in obj) {\n                    if (obj.hasOwnProperty(i)) cb(obj[i], i);\n                }\n            }\n        }\n    }, {\n        key: 'extend',\n        value: function extend(obj, options) {\n            //合并\n            this.each(options, function (option, key) {\n                obj[key] = option;\n            });\n            return obj;\n        }\n    }, {\n        key: 'cb',\n        value: function cb(_cb, context, args) {\n            //回调\n            args = args ? args : [];\n            this.isFn(_cb) ? _cb.apply(context, args) : null;\n        }\n    }, {\n        key: 'run',\n        value: function run(cb, context, args) {\n            //执行函数\n            this.cb(cb, context, args);\n        }\n    }, {\n        key: 'unique',\n        value: function unique(arr) {\n            /*去重*/\n            if (!this.isArr(arr)) return [];\n            var newArray = [];\n            this.each(arr, function (item, index) {\n                if (newArray.indexOf(item) === -1) {\n                    newArray.push(item);\n                }\n            });\n            return newArray;\n        }\n    }, {\n        key: 'trimArr',\n        value: function trimArr(arr) {\n            /*清空数组中空的值*/\n            var newArr = [];\n            this.each(arr, function (item, index) {\n                if (item !== '') {\n                    newArr.push(item);\n                }\n            });\n            return newArr;\n        }\n    }, {\n        key: 'copy',\n        value: function copy(obj) {\n            /*深拷贝*/\n            if (this.isObj(obj) || this.isArr(obj)) return JSON.parse(JSON.stringify(obj));\n            return null;\n        }\n    }, {\n        key: 'ajax',\n        value: function ajax(options) {\n            var _this = this;\n\n            //创建xhr\n            var xhr = new XMLHttpRequest();\n            //连接类型\n            options.type = options.type ? options.type.toUpperCase() : 'GET';\n            //超时\n            xhr.timeout = options.timeout && options.async !== false ? options.timeout : 0;\n\n            if (options.type === \"GET\") {\n\n                xhr.open(options.type, function () {\n\n                    return options.url.indexOf('?') ? options.url + _this.serialize(options.data) : options.url + '?' + _this.serialize(options.data);\n                }(), options.async);\n            } else if (options.type === \"POST\") {\n\n                xhr.open(options.type, options.url, options.async);\n            }\n            xhr.setRequestHeader('Content-Type', options.contentType ? options.contentType : 'application/x-www-form-urlencoded; charset=UTF-8');\n            //响应事件\n            xhr.addEventListener('readystatechange', function () {\n                var data = void 0;\n\n                try {\n                    data = JSON.parse(xhr.responseText);\n                } catch (e) {\n                    data = xhr.responseText;\n                }\n\n                if (xhr.readyState == 4) {\n                    if (xhr.status == 200) {\n                        _this.cb(options.success, _this, [data]);\n                    } else if (xhr.status >= 400) {\n                        _this.cb(options.error, _this, [data]);\n                    }\n                }\n            }, false);\n\n            //send指令\n            if (options.type === \"GET\") {\n\n                xhr.send();\n            } else if (options.type === \"POST\") {\n\n                xhr.send(this.serialize(options.data));\n            }\n        }\n    }, {\n        key: 'serialize',\n        value: function serialize(data) {\n            //初始化form数据\n            var result = '';\n\n            if (!this.isObj(data) || !this.isArr(data)) return '';\n\n            this.each(data, function (val, key) {\n\n                result = result + key + '=' + encodeURIComponent(val) + '&';\n            });\n\n            return result.substring(0, result.length - 1);\n        }\n    }, {\n        key: 'initRegExp',\n        value: function initRegExp(expr) {\n            var tm = '\\\\/*.?+$^[](){}|\\'\\\"';\n            this.each(tm, function (tmItem, index) {\n                expr = expr.replace(new RegExp('\\\\' + tmItem, 'g'), '\\\\' + tmItem);\n            });\n            return expr;\n        }\n    }]);\n\n    return Fn;\n}();\n\n//设置事件\n\n\nFn.prototype.on = function () {\n    if (!_in_browser2.default) return;\n    if (typeof document.addEventListener === 'function') {\n        return function on(el, type, cb) {\n            el.addEventListener(type, cb, false);\n        };\n    } else {\n        return function on(el, type, cb) {\n            el.attachEvent('on' + type, cb);\n        };\n    }\n}();\n\n//移除事件\nFn.prototype.off = function () {\n    if (!_in_browser2.default) return;\n    if (typeof document.removeEventListener === 'function') {\n        return function off(el, type, cb) {\n            el.addEventListener(type, cb, false);\n        };\n    } else {\n        return function off(el, type, cb) {\n            el.detachEvent('on' + type, cb);\n        };\n    }\n}();\n\nexports.default = new Fn();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n *  检测是否在浏览器的环境中 \r\n * */\n\nvar inBrowser = typeof window !== 'undefined';\n\nexports.default = inBrowser;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar FILTER_TRANFORM = /[\\b\\t\\f\\n\\r\\v]/g,\n    //过滤转义字符\n//script输出节点信息\nFILTER_SCRIPT = /[\\b\\f\\r\\v]/g,\n\n//script的表达是\nSCRIPT_TAG = /<script.*?>([\\s\\S]*?)<\\/script>/g,\n\n//转义双引号\nQUEST = /\"/g,\n\n//引入模板\nINCLUDE_ID = /<tmpl-include .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\n\n//引入模板\nINCLUDE_FILE = /<tmpl-include .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\n\n//错误的模板\nINCLUDE_ERROR = /<tmpl-include.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\n\n//嵌入block块\nBLOCK = /<tmpl-block .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-block>/g,\n\n//append_block\nBLOCK_APPEND = /^append:/,\n\n//inser_block\nBLOCK_INSETR = /^insert:/,\n\n//base路径解析\nEXTEND = /<tmpl-extend .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?\\/>/g;\n\nexports.FILTER_TRANFORM = FILTER_TRANFORM;\nexports.FILTER_SCRIPT = FILTER_SCRIPT;\nexports.SCRIPT_TAG = SCRIPT_TAG;\nexports.QUEST = QUEST;\nexports.INCLUDE_ID = INCLUDE_ID;\nexports.INCLUDE_FILE = INCLUDE_FILE;\nexports.INCLUDE_ERROR = INCLUDE_ERROR;\nexports.BLOCK = BLOCK;\nexports.BLOCK_APPEND = BLOCK_APPEND;\nexports.BLOCK_INSETR = BLOCK_INSETR;\nexports.EXTEND = EXTEND;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// html转义\nvar escapeCode = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#x27;\",\n    \"`\": \"&#x60;\"\n};\n\nexports.default = escapeCode;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//在node环境中使用需要用到fs获取文件\nvar fs = void 0; //运行环境是否在浏览器\n\n\nif (!_in_browser2.default) {\n    fs = require('fs');\n}\n\nexports.default = fs;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.setEvent = setEvent;\nexports.setInstance = setInstance;\nexports.setEl = setEl;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//初始化时间中的参数\n//常用的方法\nfunction setEvent() {\n\tif (this.constructor._event) return;\n\tthis.constructor._event = {\n\t\tevents: {},\n\t\teventType: [],\n\t\teventEl: []\n\t};\n}\n\n//设置实例\n\n//运行环境是否在浏览器\nfunction setInstance(type) {\n\tvar _this = this;\n\n\tvar get = this.config[type];\n\n\tif (!_fn2.default.isObj(get)) {\n\t\treturn;\n\t}\n\n\t_fn2.default.each(get, function (_get, key) {\n\t\t_this[key] = _get;\n\t});\n}\n\n//设置this.template\nfunction setEl() {\n\tif (_in_browser2.default) {\n\t\ttry {\n\t\t\treturn this.getEl(this.config.template).innerHTML;\n\t\t} catch (e) {\n\t\t\treturn null;\n\t\t}\n\t} else {\n\t\treturn this.config.template;\n\t}\n}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setRegExp = setRegExp;\nexports.setDom = setDom;\nexports.replaceAlias = replaceAlias;\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _include = __webpack_require__(14);\n\nvar _include2 = _interopRequireDefault(_include);\n\nvar _block = __webpack_require__(11);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _tmplRegexp = __webpack_require__(2);\n\nvar _escapeCode = __webpack_require__(3);\n\nvar _escapeCode2 = _interopRequireDefault(_escapeCode);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//由于模块接口中都是只读的，不能放在配置中；\n\n//模板正则配置\n\n//include\n/*\r\n * 一堆解析模板的方法,tmpl的核心算法\r\n * */\n//运行环境是否在浏览器\nvar SCRIPT_REGEXP = void 0,\n\n/*原生script*/\nNATIVE_SCRIPT = void 0,\n\n/*输出script*/\nECHO_SCRIPT_REGEXP = void 0,\n\n//转义输出\nECHO_ESCAPE_REGEXP = void 0,\n\n/*替换输出script*/\nREPLACE_ECHO_SCRIPT_OPEN_TAG = void 0,\n\n//转义的开头表达式\nECHO_ESCAPE_REGEXP_OPEN_TAG = void 0,\n\n/*起始*/\nOPEN_TAG_REGEXP = void 0,\n\n/*闭合*/\nCLOSE_TAG_REGEXP = void 0;\n\n//设置正则\n\n\n//html中的转义\n\n//extend\n\n//常用的方法\nfunction setRegExp() {\n\n    var open_tag = _fn2.default.initRegExp(this.config.open_tag),\n        close_tag = _fn2.default.initRegExp(this.config.close_tag);\n    //解析所有的表达式\n    SCRIPT_REGEXP = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '=[\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '-[\\\\\\s\\\\\\S]*?' + close_tag, 'g');\n    //原生的script\n    NATIVE_SCRIPT = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag, 'g');\n    //解析输出的表达式\n    ECHO_SCRIPT_REGEXP = new RegExp(open_tag + '=([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\n    //转义输出\n    ECHO_ESCAPE_REGEXP = new RegExp(open_tag + '-([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\n    //替换输出的开头表达式\n    REPLACE_ECHO_SCRIPT_OPEN_TAG = new RegExp(open_tag + '=', 'g');\n    //转义的开头表达式\n    ECHO_ESCAPE_REGEXP_OPEN_TAG = new RegExp(open_tag + '-', 'g');\n    //替换输出的开始表达式\n    OPEN_TAG_REGEXP = new RegExp(open_tag, 'g');\n    //替换输出的结束表达式\n    CLOSE_TAG_REGEXP = new RegExp(close_tag, 'g');\n}\n\n//初始化dom生成\nfunction setDom() {\n    //node中使用block\n    if (!_in_browser2.default) {\n        _block2.default.call(this);\n        /*清除遗留的block块*/\n        clearBlock.call(this);\n    }\n    /*重新检查依赖里面有没有引入的数据*/\n    replaceAlias.call(this);\n    /*替换include中的内容*/\n    _include2.default.call(this);\n    /*解析script*/\n    var script = this.template.match(SCRIPT_REGEXP) || [];\n    //设置占位\n    var replaceScript = setSeize.call(this),\n        echoString = replaceScript.split(/___SCRIPT___|___ECHO_SCRIPT___/),\n        //拆分占位\n    domString = [],\n        longString = echoString.length > script.length ? echoString : script;\n\n    //排除了运算和赋值表达式，处理直接输出的字符串\n    _fn2.default.each(echoString, function (_echoString, index) {\n        echoString[index] = \"___.push(\\\"\" + filterTransferredMeaning(_echoString) + \"\\\");\";\n    });\n\n    //这里是处理所有表达式内容\n    _fn2.default.each(script, function (_string, index) {\n        //恢复正则的索引位置\n        ECHO_SCRIPT_REGEXP.lastIndex = 0;\n        NATIVE_SCRIPT.lastIndex = 0;\n        ECHO_ESCAPE_REGEXP.lastIndex = 0;\n        //处理对应表达式\n        if (ECHO_SCRIPT_REGEXP.test(_string)) {\n            script[index] = _string.replace(REPLACE_ECHO_SCRIPT_OPEN_TAG, \"___.push(\").replace(CLOSE_TAG_REGEXP, \");\");\n        } else if (NATIVE_SCRIPT.test(_string)) {\n            script[index] = _string.replace(OPEN_TAG_REGEXP, '').replace(CLOSE_TAG_REGEXP, '');\n        } else if (ECHO_ESCAPE_REGEXP.test(_string)) {\n            script[index] = _string.replace(ECHO_ESCAPE_REGEXP_OPEN_TAG, \"___.push(_this_.escape(\").replace(CLOSE_TAG_REGEXP, \"));\");\n        }\n    });\n\n    _fn2.default.each(longString, function (_longString, index) {\n        //直接输出的dom结构\n        if (_fn2.default.isStr(echoString[index])) {\n            domString.push(echoString[index]);\n        }\n        //js的源码\n        if (_fn2.default.isStr(script[index])) {\n            domString.push(script[index].replace(_tmplRegexp.FILTER_TRANFORM, \"\"));\n        }\n    });\n\n    this.dom = 'var _this_ = this,___ = [];' + domString.join('') + 'return ___.join(\"\");';\n};\n\n/*替换别名的常量*/\nfunction replaceAlias() {\n    var _this = this;\n\n    var constructor = this.constructor;\n    _fn2.default.each(constructor.alias, function (replaceAlias, alias) {\n        _this.template = _this.template.replace(new RegExp(_fn2.default.initRegExp(alias), 'g'), replaceAlias);\n    });\n}\n\n/*清除多余的block块*/\nfunction clearBlock() {\n    this.template = this.template.replace(_tmplRegexp.EXTEND, '').replace(_tmplRegexp.BLOCK, '');\n}\n\n//设置占位\nfunction setSeize() {\n    var replaceScript = this.template.replace(ECHO_SCRIPT_REGEXP, '___ECHO_SCRIPT___').replace(SCRIPT_REGEXP, '___SCRIPT___');\n    return replaceScript;\n}\n\n//过滤string中的引号\nfunction filterTransferredMeaning(string) {\n    //检查script的标签\n    var scriptTags = string.match(_tmplRegexp.SCRIPT_TAG),\n        _string = string.replace(_tmplRegexp.SCRIPT_TAG, '___SCRIPT_TAG___').replace(_tmplRegexp.FILTER_TRANFORM, \"\").replace(_tmplRegexp.QUEST, '\\\\\\\"');\n\n    return !scriptTags ? _string : filterScriptTag(_string, scriptTags);\n}\n\n//过滤script标签\nfunction filterScriptTag(string, scriptTags) {\n    var splitScriptTag = string.split('___SCRIPT_TAG___'),\n        dom = [];\n    _fn2.default.each(splitScriptTag, function (script, index) {\n        dom.push(script);\n        if (scriptTags[index]) {\n            dom.push(scriptTags[index].replace(_tmplRegexp.QUEST, '\\\\\\\"').replace(_tmplRegexp.FILTER_SCRIPT, '').replace(/\\n/g, '\\\\n'));\n        }\n    });\n    return dom.join(\"\");\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//兼容性IE8\n(function () {\n\t//兼容IE8中 的indexOf\n\tif (!Array.prototype.indexOf) {\n\t\tArray.prototype.indexOf = function (val) {\n\t\t\tfor (var index = 0, len = undefined.length; index < len; index++) {\n\t\t\t\tif (undefined[index] === val) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\t}\n\n\t/*只在浏览器环境使用*/\n\tif (_in_browser2.default && !document.getElementsByClassName) {\n\t\tdocument.getElementsByClassName = function (className, el) {\n\t\t\tvar children = (el || document).getElementsByTagName('*'),\n\t\t\t    elements = new Array();\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\n\t\t\t\tvar child = children[i],\n\t\t\t\t    classNames = child.className.split(' ');\n\n\t\t\t\tfor (var j = 0; j < classNames.length; j++) {\n\t\t\t\t\tif (classNames[j] == className) {\n\t\t\t\t\t\telements.push(child);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn elements;\n\t\t};\n\t}\n})(); //运行环境是否在浏览器\nexports.default = true;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _init2 = __webpack_require__(15);\n\nvar _init3 = _interopRequireDefault(_init2);\n\nvar _render = __webpack_require__(16);\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _dom = __webpack_require__(13);\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nvar _config = __webpack_require__(12);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _escapeCode = __webpack_require__(3);\n\nvar _escapeCode2 = _interopRequireDefault(_escapeCode);\n\nvar _set = __webpack_require__(5);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //tmpl的初始化\n\n//处理模板数据的Render类\n\n//常用的类方法\n\n//Dom的操作\n\n//config配置\n\n//转义html\n\n//set\n\n\nvar Tmpl = function (_Dom) {\n    _inherits(Tmpl, _Dom);\n\n    //Tmpl构造\n    function Tmpl(opts) {\n        _classCallCheck(this, Tmpl);\n\n        var _this = _possibleConstructorReturn(this, (Tmpl.__proto__ || Object.getPrototypeOf(Tmpl)).call(this));\n\n        _this.config = _fn2.default.extend(_fn2.default.copy(_config2.default), opts);\n        _this.init();\n        return _this;\n    }\n\n    //安装插件\n\n\n    _createClass(Tmpl, [{\n        key: 'init',\n\n\n        //初始化对象\n        value: function init() {\n            _init3.default.call(this);\n        }\n\n        //解析模板和数据\n\n    }, {\n        key: 'render',\n        value: function render(data) {\n            var tmpl = this;\n            return new _render2.default({\n                tmpl: tmpl,\n                data: data\n            });\n        }\n\n        //添加数据更新模板\n\n    }, {\n        key: 'update',\n        value: function update() {\n            this.template = _set.setEl.call(this);\n            setDom.call(this);\n        }\n\n        /*回调*/\n\n    }, {\n        key: 'cb',\n        value: function cb(_cb) {\n            _fn2.default.cb(_cb, this);\n            return this;\n        }\n\n        /*转义*/\n\n    }, {\n        key: 'escape',\n        value: function escape(escapeVal) {\n            _fn2.default.each(_escapeCode2.default, function (item, key) {\n                escapeVal = escapeVal.replace(new RegExp(key, 'g'), item);\n            });\n            return escapeVal;\n        }\n    }], [{\n        key: 'install',\n        value: function install(constructor) {\n            constructor.install(this);\n        }\n    }]);\n\n    return Tmpl;\n}(_dom2.default);\n\n//常用的方法给tmpl的fn属性中\n\n\nexports.default = Tmpl;\nTmpl.prototype.fn = _fn2.default;\n\n//设置路径别名常量\nTmpl.alias = {};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; //兼容性处理\n\n//Tmpl 文件入口\n\n\nvar _compatibility = __webpack_require__(8);\n\nvar _compatibility2 = _interopRequireDefault(_compatibility);\n\nvar _tmpl = __webpack_require__(9);\n\nvar _tmpl2 = _interopRequireDefault(_tmpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function (global, factory) {\n    if (typeof demand === 'function' && typeof demand.define === 'function') demand.define('tmpl', factory);else if (( false ? 'undefined' : _typeof(exports)) === 'object' && ( false ? 'undefined' : _typeof(module)) === 'object') module.exports = factory();else global ? global.Tmpl = factory() : {};\n})(typeof window !== 'undefined' ? window : undefined, function () {\n    _tmpl2.default.version = \"v1.0.5\";\n    return _tmpl2.default;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = replaceBlock;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _tmplRender = __webpack_require__(6);\n\nvar _fs = __webpack_require__(4);\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _tmplRegexp = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*替换Block块内容*/\n\n\n//在node环境中使用需要用到fs获取文件\n//常用的方法\nfunction replaceBlock() {\n    //先设置获取include的引入模板\n    _tmplRender.replaceAlias.call(this);\n\n    var baseFile = _fn2.default.unique(this.template.match(_tmplRegexp.EXTEND)),\n\n    /*只获取第一个base的名字*/\n    baseFileName = baseFile.toString().replace(_tmplRegexp.EXTEND, \"$2\").split(',')[0];\n\n    /*如果不存在block的内容，直接跳出*/\n    if (baseFileName === '') return;\n\n    //获取入口模板\n    var blockTmpl = _fn2.default.unique(this.template.match(_tmplRegexp.BLOCK));\n\n    //获取继承的模板\n    var layoutTmpl = _fs2.default.readFileSync(baseFileName, {\n        encoding: 'UTF8'\n    });\n\n    //从继承模板中筛选出block\n    var layoutTmplFindBlock = layoutTmpl.match(_tmplRegexp.BLOCK) || [],\n        layoutTmplFindBlockStr = layoutTmplFindBlock.toString(),\n        baseBlockName = _fn2.default.unique(layoutTmplFindBlockStr !== '' ? layoutTmplFindBlockStr.replace(_tmplRegexp.BLOCK, \"$2\").split(',') : []);\n\n    _fn2.default.each(baseBlockName, function (name, index) {\n\n        var block = layoutTmplFindBlock[index],\n            replaceBlock = new RegExp(_fn2.default.initRegExp(block), 'g');\n\n        var hasBlock = false;\n\n        _fn2.default.each(blockTmpl, function (blocktmpl, _index) {\n\n            _tmplRegexp.BLOCK.test(blocktmpl);\n\n            var _name = RegExp.$2,\n                blockContent = RegExp.$3;\n\n            //匹配到name的\n            if (name === _name) {\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent);\n                hasBlock = true;\n            } else if (_tmplRegexp.BLOCK_APPEND.test(_name) && name === _name.replace(_tmplRegexp.BLOCK_APPEND, '')) {\n                layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(_tmplRegexp.BLOCK, \"$3\") + blockContent);\n                hasBlock = true;\n            } else if (_tmplRegexp.BLOCK_INSETR.test(_name) && name === _name.replace(_tmplRegexp.BLOCK_INSETR, '')) {\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent + block.replace(_tmplRegexp.BLOCK, \"$3\"));\n                hasBlock = true;\n            }\n\n            _tmplRegexp.BLOCK.lastIndex = 0;\n        });\n\n        /*如果当前的block是在extends的模板中不存在，则显示默认里面的*/\n        if (!hasBlock) {\n            layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(_tmplRegexp.BLOCK, '$3'));\n        }\n    });\n\n    this.template = layoutTmpl;\n}\n\n//模板正则配置\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*配置信息*/\nvar config = {\n    open_tag: \"<%\", //OPEN_TAG\n    close_tag: \"%>\", //CLOSE_TAG,\n    template: \"\",\n    data: {},\n    methods: {}\n};\n\nexports.default = config;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //运行环境是否在浏览器\n\n//常用的方法\n\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//绑定相关函数\nfunction bindFn(el, className, type) {\n\n    var _className = el.className.split(' ');\n\n    //替换\n    if (_fn2.default.isObj(className) && (type == 'replaceBind' || type == 'replaceClass')) {\n        _fn2.default.each(className, function (__className, key) {\n            var findIndex = _className.indexOf(key);\n            if (findIndex != -1) _className[findIndex] = __className;\n        });\n    } else {\n        //获得el中的className{type:string}\n        className = className.split(' ');\n\n        for (var index = 0; index < className.length; index++) {\n\n            var findIndex = _className.indexOf(className[index]);\n\n            if (type == 'bind' || type == 'addClass') {\n\n                if (findIndex == -1) _className.push(className[index]);\n            } else if (type == 'unbind' || type == 'removeClass') {\n\n                if (findIndex != -1) _className.splice(findIndex, 1);\n            }\n        }\n    }\n\n    el.className = _className.join(' ');\n\n    return this;\n}\n\n//设置主的委托事件\nfunction setEntrust(ele, type, cb) {\n    var _this = this;\n\n    _fn2.default.on(ele, type, function (event) {\n        var ev = event || window.event,\n            el = ev.target || ev.srcElement,\n            eventType = ele.event.events[type];\n\n        _fn2.default.each(eventType, function (_eventType, bind) {\n\n            if (!_this.hasClass(el, bind)) return;\n\n            _fn2.default.each(_eventType, function (cb, index) {\n\n                cb.apply(_this, [ev, el]);\n            });\n        });\n    });\n}\n\nvar Dom = function () {\n    function Dom() {\n        _classCallCheck(this, Dom);\n    }\n\n    _createClass(Dom, [{\n        key: 'getEl',\n        value: function getEl(exp) {\n\n            //获取节点\n            if (!exp) return null;\n\n            if (!this.fn.isFn(document.querySelector)) {\n                return document.getElementById(exp);\n            }\n\n            var getEl = document.querySelector(exp),\n                el = document.getElementById(exp);\n\n            return getEl !== null ? getEl : el ? el : null;\n        }\n    }, {\n        key: 'getEls',\n        value: function getEls(exp) {\n\n            //获取多个节点\n            if (!exp) return null;\n\n            if (!this.fn.isFn(document.querySelectorAll)) {\n                return document.getElementsByClassName(exp);\n            }\n\n            var getEls = document.querySelectorAll(exp),\n                el = document.getElementsByClassName(exp);\n\n            return getEls.length > 0 ? getEls : el ? el : [];\n        }\n        //绑定事件\n\n    }, {\n        key: 'on',\n        value: function on(ele, exp, type, cb) {\n            var _this2 = this;\n\n            if (arguments.length === 4) {\n\n                //初始化事件\n                if (this.constructor._event.eventEl.indexOf(ele) == -1) {\n\n                    this.constructor._event.eventEl.push(ele);\n\n                    ele.event = {\n                        eventType: [],\n                        events: {}\n                    };\n                }\n\n                if (ele.event.eventType.indexOf(type) == -1) {\n                    setEntrust.apply(this, [ele, type, cb]);\n                    //添加委托事件\n                    ele.event.eventType.push(type);\n                }\n\n                //查找现在的节点是否存在事件\n                if (!ele.event.events[type]) {\n                    ele.event.events[type] = {};\n                }\n\n                //当前的事件是否有设置\n                if (!ele.event.events[type][exp]) {\n                    ele.event.events[type][exp] = [];\n                }\n\n                //添加处理函数到事件列表中\n                ele.event.events[type][exp].push(cb);\n            } else if (arguments.length === 3) {\n                cb = type;\n                type = exp;\n                _fn2.default.on(ele, type, function (event) {\n                    cb.call(_this2, event);\n                });\n            }\n\n            return this;\n        }\n\n        //取消绑定事件\n\n    }, {\n        key: 'off',\n        value: function off(ele, exp, type, cb) {\n            if (arguments.length === 4) {\n                var eventIndex = this.events[type][exp].indexOf(cb);\n                if (eventIndex != -1) ele.events[type][exp].splice(eventIndex, 1);\n            } else if (arguments.length === 3) {\n                /*删除事件*/\n                _fn2.default.off(ele, type, cb);\n            }\n            return this;\n        }\n\n        //设置事件委托的class\n\n    }, {\n        key: 'bind',\n        value: function bind(el, _bind) {\n            bindFn.apply(this, [el, _bind, 'bind']);\n            return this;\n        }\n\n        //取消方法绑定\n\n    }, {\n        key: 'unbind',\n        value: function unbind(el, bind) {\n            bindFn.apply(this, [el, bind, 'unbind']);\n            return this;\n        }\n\n        //替换绑定\n\n    }, {\n        key: 'replaceBind',\n        value: function replaceBind(el, bind) {\n            bindFn.apply(this, [el, bind, 'replaceBind']);\n            return this;\n        }\n\n        //添加class\n\n    }, {\n        key: 'addClass',\n        value: function addClass(el, className) {\n            bindFn.apply(this, [el, className, 'addClass']);\n            return this;\n        }\n\n        //删除class\n\n    }, {\n        key: 'removeClass',\n        value: function removeClass(el, className) {\n            bindFn.apply(this, [el, className, 'removeClass']);\n            return this;\n        }\n\n        //替换className\n\n    }, {\n        key: 'replaceClass',\n        value: function replaceClass(el, className) {\n            bindFn.apply(this, [el, className, 'replaceClass']);\n            return this;\n        }\n\n        //是否存在class\n\n    }, {\n        key: 'hasClass',\n        value: function hasClass(el, className) {\n            try {\n                //节点中存在的className\n                var _className = el.className.split(' '),\n\n                //是否存在的className\n                hasClassName = className.split(' ');\n\n                var hasLen = 0;\n\n                for (var index = 0; index < hasClassName.length; index++) {\n                    if (_className.indexOf(hasClassName[index]) !== -1) ++hasLen;\n                }\n\n                if (hasLen === hasClassName.length) return true;\n\n                return false;\n            } catch (e) {\n\n                return false;\n            }\n        }\n\n        //获取属性\n\n    }, {\n        key: 'attr',\n        value: function attr(el, _attr2) {\n            var _this3 = this;\n\n            if (_fn2.default.isObj(_attr2)) {\n\n                _fn2.default.each(_attr2, function (_attr, key) {\n\n                    if (typeof _attr === 'boolean') {\n\n                        el[key] = _attr;\n\n                        el.setAttribute(key, _attr);\n                    } else if (_attr === '') {\n\n                        el.removeAttribute(key);\n                    } else {\n\n                        el.setAttribute(key, _attr);\n                    }\n                });\n\n                return this;\n            } else {\n\n                if (_attr2 instanceof Array) {\n\n                    var attrs = [];\n\n                    _fn2.default.each(_attr2, function (_attr, index) {\n\n                        attrs.push(_this3.attr(el, _attr));\n                    });\n\n                    return attrs;\n                } else if (/^bind-\\S*/.test(_attr2)) {\n\n                    return new Function('return ' + el.getAttribute(_attr2) + ';').apply(this);\n                } else {\n\n                    return el.getAttribute(_attr2);\n                }\n            }\n        }\n\n        //获取、设置prop属性\n\n    }, {\n        key: 'prop',\n        value: function prop(el, _prop2) {\n            //设置节点属性\n            if (_fn2.default.isObj(_prop2)) {\n                _fn2.default.each(_prop2, function (_prop, key) {\n\n                    el[key] = _prop;\n                });\n\n                return this;\n            } else if (_fn2.default.isStr(_prop2)) {\n                //获得节点属性\n\n                if (/^bind-\\S*/.test(_prop2)) return new Function('return ' + el[_prop2] + ';').apply(this);\n\n                return el[_prop2];\n            }\n        }\n\n        //获取、设置html\n\n    }, {\n        key: 'html',\n        value: function html(el, _html) {\n            if (_html === undefined) return el.innerHTML;\n            el.innerHTML = _html;\n            return this;\n        }\n\n        //获取、设置value\n\n    }, {\n        key: 'val',\n        value: function val(el, _val) {\n            if (_val === undefined) return el.value;\n            el.value = _val;\n            return this;\n        }\n\n        //获取、设置textContent\n\n    }, {\n        key: 'text',\n        value: function text(el, _text) {\n            if (_text === undefined) return el.textContent;\n            el.textContent = _text;\n            return this;\n        }\n\n        //查找符合的一个父级节点\n\n    }, {\n        key: 'parent',\n        value: function parent(el, hasClassName) {\n\n            var parent = el.parentNode;\n\n            if (parent === document || parent === null) return null;\n\n            if (!hasClassName) return parent;\n\n            if (this.hasClass(parent, hasClassName)) return parent;\n\n            return this.parent(parent, hasClassName);\n        }\n\n        //超找所有符合的父元素\n\n    }, {\n        key: 'parents',\n        value: function parents(el, hasClassName, hasClassParent) {\n\n            var parent = el.parentNode;\n\n            hasClassParent = hasClassParent ? hasClassParent : [];\n\n            if (parent === document || parent === null) return null;\n\n            if (this.hasClass(parent, hasClassName)) hasClassParent.push(parent);\n\n            this.parents(parent, hasClassName, hasClassParent);\n\n            return hasClassParent;\n        }\n\n        //获取直接的当个子节点\n\n    }, {\n        key: 'children',\n        value: function children(el) {\n            var els = [];\n            _fn2.default.each(el.childNodes, function (child) {\n                if (child.nodeType === 1) {\n                    els.push(child);\n                }\n            });\n            return els;\n        }\n    }, {\n        key: 'childrens',\n\n\n        //查找对应的class存在的节点\n        value: function childrens(el, className, hasClassChild) {\n            var i = 0;\n            hasClassChild = hasClassChild ? hasClassChild : [];\n            for (; i < el.children.length; i++) {\n                if (this.hasClass(el.children[i], className)) hasClassChild.push(el.children[i]);\n                this.childrens(el.children[i], className, hasClassChild);\n            }\n            return hasClassChild;\n        }\n\n        //下一个节点\n\n    }, {\n        key: 'next',\n        value: function next(el) {\n            var nextEl = el.nextSibling;\n            if (nextEl === null) return null;\n            if (nextEl.nodeType !== 1) return this.next(nextEl);\n            return nextEl;\n        }\n\n        //获取当前元素同级前的节点\n\n    }, {\n        key: 'nextAll',\n        value: function nextAll(el) {\n            return this.siblings(el, 'nextAll');\n        }\n\n        //获取当前元素同级后的节点\n\n    }, {\n        key: 'prevAll',\n        value: function prevAll(el) {\n            return this.siblings(el, 'prevAll');\n        }\n\n        //上一个节点\n\n    }, {\n        key: 'prev',\n        value: function prev(el) {\n            var prevEl = el.previousSibling;\n            if (prevEl === null) return null;\n            if (prevEl.nodeType !== 1) return this.prev(prevEl);\n            return prevEl;\n        }\n\n        //获取同级的兄弟节点\n\n    }, {\n        key: 'siblings',\n        value: function siblings(el, type) {\n            var parent = this.parent(el);\n\n            if (parent === null) return null;\n\n            var child = parent.children;\n\n            var siblings = [];\n\n            var i = 0;\n\n            if (type === 'nextAll') i = Array.prototype.indexOf.call(child, el);\n\n            for (; i < child.length; i++) {\n\n                if (child[i] !== el) siblings.push(child[i]);\n\n                if (type === 'prevAll' && child[i] === el) return siblings;\n            }\n\n            return siblings;\n        }\n\n        //显示\n\n    }, {\n        key: 'hide',\n        value: function hide(el, time) {\n\n            var opacity = this.css(el, 'opacity');\n\n            el.opacity = opacity ? opacity : 1;\n\n            _fn2.default.isNum(time) ? this.animate(el, {\n                opacity: 0\n            }, time, function () {\n                el.style.display = 'none';\n            }) : el.style.display = 'none';\n\n            return this;\n        }\n\n        //隐藏\n\n    }, {\n        key: 'show',\n        value: function show(el, time) {\n\n            var opactiy = el.opactiy ? el.opactiy : 100;\n\n            if (_fn2.default.isNum(time)) {\n\n                this.css(el, {\n                    opacity: 0\n                });\n\n                el.style.display = '';\n\n                this.animate(el, {\n                    opacity: opactiy\n                }, time);\n            } else {\n                el.style.display = '';\n            }\n            return this;\n        }\n\n        /*切换显示状态*/\n\n    }, {\n        key: 'toggle',\n        value: function toggle(el, time) {\n            if (el.style.display === '') this.hide(el, time);else this.show(el, time);\n        }\n\n        /*动画*/\n\n    }, {\n        key: 'animate',\n        value: function animate(el, _animate, time, cb) {\n            var _this4 = this;\n\n            if (!el) return;\n\n            el.timer = setInterval(function () {\n\n                var animateStatus = true;\n\n                _fn2.default.each(_animate, function (val, type) {\n\n                    var speed = 0,\n                        cssVal = 0;\n\n                    if (type === 'opacity') {\n\n                        cssVal = Number(_this4.css(el, 'opacity')) * 100;\n                    } else if (type === 'scrollTop') {\n\n                        cssVal = Math.ceil(document.documentElement.scrollTop || document.body.scrollTop);\n\n                        var maxScrollTop = Math.ceil(document.body.scrollHeight - window.innerHeight);\n\n                        if (val > maxScrollTop) {\n                            val = maxScrollTop;\n                            _animate['scrollTop'] = maxScrollTop;\n                        }\n                    } else {\n                        cssVal = parseInt(_this4.css(el, type));\n                    }\n\n                    speed = (val - cssVal) / 8;\n\n                    speed = speed > 0 ? Math.ceil(speed) : Math.floor(speed);\n\n                    var setVal = {};\n\n                    if (type === 'opacity') {\n                        setVal['opacity'] = (cssVal + speed) / 100;\n                        _this4.css(el, setVal);\n                    } else if (type === 'scrollTop') {\n                        _this4.setScrollTop(cssVal + speed);\n                    } else {\n                        setVal[type] = cssVal + speed + 'px';\n                        _this4.css(el, setVal);\n                    }\n\n                    if (parseInt(val) !== cssVal) {\n                        animateStatus = false;\n                    }\n                });\n\n                if (animateStatus) {\n                    clearInterval(el.timer);\n                    _fn2.default.cb(cb, _this4);\n                }\n            }, time / 60);\n        }\n\n        /*操作css*/\n\n    }, {\n        key: 'css',\n        value: function css(el, _css2) {\n            //获取css\n            if (_fn2.default.isStr(_css2)) {\n                return this.curCss(el, _css2);\n            } else if (_fn2.default.isObj(_css2)) {\n                //设置style\n                this.setStyle(el, _css2);\n                return this;\n            }\n        }\n\n        /*处理驼峰和非驼峰*/\n\n    }, {\n        key: 'camelCase',\n        value: function camelCase(text, isCameCase) {\n            var camelCases = void 0;\n\n            var AZ = /[A-Z]/g,\n                _AZ = /-[a-z]/g;\n\n            if (!_fn2.default.isStr(text)) return text;\n\n            camelCases = isCameCase ? text.match(_AZ) : text.match(AZ);\n\n            camelCases = camelCases ? camelCases : [];\n\n            _fn2.default.each(camelCases, function (str, index) {\n                if (isCameCase) text = text.replace(str, str.replace(/-/g, '').toUpperCase());else text = text.replace(str, '-' + str.toLowerCase());\n            });\n\n            return text;\n        }\n\n        /*获取计算好的值*/\n\n    }, {\n        key: 'curCss',\n        value: function curCss(el, css) {\n\n            var _css = void 0;\n\n            if (window.getComputedStyle) {\n\n                _css = this.camelCase(css, true);\n\n                return window.getComputedStyle(el, null)[_css];\n            } else if (document.documentElement.currentStyle) {\n\n                _css = this.camelCase(css, false);\n\n                return document.documentElement.currentStyle[_css];\n            }\n        }\n\n        /*设置css*/\n\n    }, {\n        key: 'setStyle',\n        value: function setStyle(el, css) {\n\n            _fn2.default.each(css, function (style, cssName) {\n\n                el.style[cssName] = style;\n            });\n        }\n\n        /*删除节点*/\n\n    }, {\n        key: 'remove',\n        value: function remove(el) {\n            try {\n                el.remove();\n            } catch (e) {\n                var parent = this.parent(el);\n                parent !== null ? parent.removeChild(el) : console.warn('element remove error!');\n            }\n            return this;\n        }\n\n        /*创建元素*/\n\n    }, {\n        key: 'create',\n        value: function create(dom) {\n            var _this5 = this;\n\n            var fragment = document.createDocumentFragment();\n\n            var tempEl = document.createElement('div');\n\n            tempEl.innerHTML = dom;\n\n            while (tempEl.childNodes.length !== 0) {\n\n                var child = tempEl.childNodes[0];\n\n                var childHtml = child.innerHTML;\n\n                if (child.tagName === 'SCRIPT') {\n                    (function () {\n\n                        var newScript = document.createElement('script');\n\n                        newScript.innerHTML = childHtml;\n\n                        _fn2.default.each(child.attributes, function (attr) {\n\n                            if (!attr) true;\n\n                            newScript.setAttribute(attr.name, attr.value);\n                        });\n\n                        _this5.remove(child);\n\n                        child = newScript;\n                    })();\n                }\n\n                fragment.appendChild(child);\n            }\n\n            return fragment;\n        }\n\n        /*插入节点*/\n\n    }, {\n        key: 'append',\n        value: function append(el, child) {\n\n            if (el.nodeType === 1) el.appendChild(child);else _fn2.default.getEl(el).appendChild(child);\n\n            return this;\n        }\n\n        //取消冒泡\n\n    }, {\n        key: 'preventDefault',\n        value: function preventDefault(event) {\n\n            var ev = event || window.event;\n\n            ev.stopPropagation();\n\n            ev.cancelBubble = true;\n        }\n\n        //offset\n\n    }, {\n        key: 'offset',\n        value: function offset(el) {\n\n            var box = el.getBoundingClientRect(),\n                docElem = document.documentElement,\n                body = document.body,\n                win = window,\n                clientTop = docElem.clientTop || body.clientTop || 0,\n                clientLeft = docElem.clientLeft || body.clientLeft || 0,\n                scrollTop = win.pageYOffset || docElem.scrollTop,\n                scrollLeft = win.pageXOffset || docElem.scrollLeft;\n\n            return {\n                top: box.top + scrollTop - clientTop,\n                left: box.left + scrollLeft - clientLeft\n            };\n        }\n\n        /*设置滚动条高度*/\n\n    }, {\n        key: 'setScrollTop',\n        value: function setScrollTop(top, animate) {\n\n            document.body.scrollTop = top;\n\n            document.documentElement.scrollTop = top;\n        }\n    }]);\n\n    return Dom;\n}();\n\nexports.default = Dom;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = replaceInclude;\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _fs = __webpack_require__(4);\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _tmplRegexp = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*替换include引入的模板*/\n\n//在node环境中使用需要用到fs获取文件\n//运行环境是否在浏览器\nfunction replaceInclude() {\n    var _this = this;\n\n    var include = function () {\n        if (_in_browser2.default) {\n            //在浏览器环境清空include[file]\n            return _tmplRegexp.INCLUDE_ID;\n        } else {\n            //在node环境清空include[name]\n            return _tmplRegexp.INCLUDE_FILE;\n        }\n    }();\n\n    var includeTmpl = void 0,\n        includeId = void 0;\n\n    //去重\n    includeTmpl = _fn2.default.unique(this.template.match(include));\n    includeId = includeTmpl.toString().replace(include, \"$2\").split(',');\n\n    //找不到include//查找的id和include匹配的数量必须相同\n    if (includeTmpl.length === 0 || _fn2.default.trimArr(includeId).length === 0 || !(includeTmpl.length > 0 && includeId.length > 0 && includeId.length === includeTmpl.length)) return;\n\n    _fn2.default.each(includeId, function (id, index) {\n        var replaceIncludeRegExp = new RegExp(_fn2.default.initRegExp(includeTmpl[index]), 'g');\n        /*浏览器环境下执行*/\n        if (_in_browser2.default) {\n            var el = _this.getEl(id);\n            if (el) _this.template = _this.template.replace(replaceIncludeRegExp, _this.html(el));\n            //找不到就清空原来的内容\n            else _this.template = _this.template.replace(replaceIncludeRegExp, '');\n        } else {\n            /*node环境下执行*/\n            try {\n                var tmpl = _fs2.default.readFileSync(id, {\n                    encoding: 'UTF8'\n                });\n\n                _this.template = _this.template.replace(replaceIncludeRegExp, tmpl);\n            } catch (e) {\n                //找不到就清空原来的内容\n                _this.template = _this.template.replace(replaceIncludeRegExp, '');\n            }\n        }\n    });\n\n    /*去掉重复的include*/\n    includeTmpl = _fn2.default.unique(this.template.match(include));\n\n    /*查找是否还有include的引入*/\n    if (includeTmpl.length > 0) replaceInclude.call(this);\n\n    /*清空错误的include*/\n    this.template = this.template.replace(_tmplRegexp.INCLUDE_ERROR, '');\n}\n\n//模板正则配置\n\n//常用的方法\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = init;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _tmplRender = __webpack_require__(6);\n\nvar _tmplRender2 = _interopRequireDefault(_tmplRender);\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _set = __webpack_require__(5);\n\nvar _router = __webpack_require__(17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//初始化设置\n\n//运行环境是否在浏览器\n//常用的方法\nfunction init() {\n\t//构建开始的钩子\n\t_fn2.default.run(this.config.create, this);\n\t//初始配置信息\n\tthis.template = _set.setEl.call(this);\n\t//初始化方法\n\t_set.setInstance.call(this, 'methods');\n\t//初始化数据\n\t_set.setInstance.call(this, 'data');\n\t//构建开始后的钩子\n\t_fn2.default.run(this.config.created, this);\n\t//初始化路由\n\t_router.setRouter.call(this);\n\t//查找模板\n\tif (this.template) {\n\n\t\t_tmplRender.setRegExp.call(this);\n\t\t//转化为js执行\n\t\t_tmplRender.setDom.call(this);\n\t}\n\t//初始化事件\n\t_set.setEvent.call(this);\n\t//设置事件\n\t_fn2.default.run(this.config.events, this);\n\t//所有完毕后的钩子\n\t_fn2.default.run(this.config.mounted, this);\n\t//检查是否存在路由的状态\n\t_router.checkRouterStatus.call(this);\n}\n\n//router相关\n\n//tmpl的render解析\n\n//解析方法\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\r\nender代理实例,针对tmpl中的数据流\r\nn\n//运行环境是否在浏览器\n\n//常用的方法\n\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Render = function () {\n        function Render(opts) {\n                _classCallCheck(this, Render);\n\n                this.init(opts);\n        }\n        //初始render类\n\n\n        _createClass(Render, [{\n                key: 'init',\n                value: function init(opts) {\n\n                        this.tmpl = opts.tmpl;\n\n                        this.data = opts.data;\n\n                        //      console.log(this.tmpl.dom);\n\n                        this.dom = new Function('data', this.tmpl.dom).apply(this.tmpl, [this.data]);\n\n                        _in_browser2.default ? this.fragment = this.tmpl.create(this.dom) : null;\n                }\n                //在父节点中插入解析后的模板\n\n        }, {\n                key: 'appendTo',\n                value: function appendTo(el, cb) {\n\n                        var tmpl = this.tmpl,\n                            fn = tmpl.fn;\n\n                        if (el.nodeType === 1) el.appendChild(this.fragment);else tmpl.getEl(el).appendChild(this.fragment);\n\n                        fn.cb(cb, this.tmpl);\n\n                        return tmpl;\n                }\n                //在el子节点ex中插入解析后的模板\t\n\n        }, {\n                key: 'insertBefore',\n                value: function insertBefore(el, ex, cb) {\n\n                        var tmpl = this.tmpl,\n                            fn = tmpl.fn;\n\n                        tmpl.getEl(el).insertBefore(this.fragment, ex);\n\n                        fn.cb(cb, tmpl);\n\n                        return tmpl;\n                }\n        }]);\n\n        return Render;\n}();\n\nexports.default = Render;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.setRouter = setRouter;\nexports.checkRouterStatus = checkRouterStatus;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//把路由实例挂靠到模板中\nfunction setRouter() {\n\tif (_fn2.default.isObj(this.config.router)) {\n\t\tthis.constructor.router = this.config.router;\n\t}\n}\n\n//检查路由状态\n/*路由相关*/\n\n//常用的方法\nfunction checkRouterStatus() {\n\t//获取路由\n\tvar router = this.constructor.router,\n\t    status = this.config.async;\n\tif (!(status === false) && router) {\n\t\trouter.changeRoutereStatus(true);\n\t}\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// js/tmpl.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap d66178313b09f6c583a4","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n/*常用的方法*/\r\nclass Fn {\r\n    isArr(array) {\r\n        return array instanceof Array || !!(array && array.length);\r\n    }\r\n\r\n    isObj(obj) {\r\n        return obj instanceof Object && !(obj instanceof Array) && obj !== null;\r\n    }\r\n\r\n    isFn(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n    isStr(string) {\r\n        return typeof string === 'string';\r\n    }\r\n\r\n    isNum(num) {\r\n        return typeof num === 'number' || !isNaN(num);\r\n    }\r\n\r\n    isEl(el) {\r\n        return !!(el && el.nodeType);\r\n    }\r\n\r\n    each(obj, cb) { //遍历\r\n        let i = 0,\r\n            len = obj.length;\r\n        if(this.isArr(obj)) {\r\n            for(; i < len; i++) {\r\n                cb(obj[i], i);\r\n            }\r\n        } else {\r\n            for(i in obj) {\r\n                if(obj.hasOwnProperty(i)) cb(obj[i], i);\r\n            }\r\n        }\r\n    }\r\n    \r\n    extend(obj, options) { //合并\r\n        this.each(options, (option, key) => {\r\n            obj[key] = option;\r\n        });\r\n        return obj;\r\n    }\r\n\r\n    cb(cb, context, args) { //回调\r\n        args = args ? args : [];\r\n        this.isFn(cb) ? (cb.apply(context, args)) : null;\r\n    }\r\n\r\n    run(cb, context, args) { //执行函数\r\n        this.cb(cb, context, args);\r\n    }\r\n\r\n    unique(arr) { /*去重*/\r\n        if(!this.isArr(arr)) return [];\r\n        let newArray = [];\r\n        this.each(arr, (item, index) => {\r\n            if(newArray.indexOf(item) === -1) {\r\n                newArray.push(item);\r\n            }\r\n        });\r\n        return newArray;\r\n    }\r\n\r\n    trimArr(arr) { /*清空数组中空的值*/\r\n        let newArr = [];\r\n        this.each(arr, (item, index) => {\r\n            if(item !== '') {\r\n                newArr.push(item);\r\n            }\r\n        });\r\n        return newArr;\r\n    }\r\n\r\n    copy(obj) { /*深拷贝*/\r\n        if(this.isObj(obj) || this.isArr(obj))\r\n            return JSON.parse(JSON.stringify(obj));\r\n        return null;\r\n    }\r\n\r\n    ajax(options) {\r\n        //创建xhr\r\n        const xhr = new XMLHttpRequest();\r\n        //连接类型\r\n        options.type = (options.type ? options.type.toUpperCase() : 'GET');\r\n        //超时\r\n        xhr.timeout = options.timeout && options.async !== false ? options.timeout : 0;\r\n\r\n        if(options.type === \"GET\") {\r\n\r\n            xhr.open(options.type, (() => {\r\n\r\n                return options.url.indexOf('?') ?\r\n                    options.url + this.serialize(options.data) :\r\n                    options.url + '?' + this.serialize(options.data);\r\n\r\n            })(), options.async);\r\n\r\n        } else if(options.type === \"POST\") {\r\n\r\n            xhr.open(options.type, options.url, options.async);\r\n\r\n        }\r\n        xhr.setRequestHeader('Content-Type', options.contentType ?\r\n            options.contentType :\r\n            'application/x-www-form-urlencoded; charset=UTF-8');\r\n        //响应事件\r\n        xhr.addEventListener('readystatechange', () => {\r\n            let data;\r\n\r\n            try {\r\n                data = JSON.parse(xhr.responseText);\r\n            } catch(e) {\r\n                data = xhr.responseText;\r\n            }\r\n\r\n            if(xhr.readyState == 4) {\r\n                if(xhr.status == 200) {\r\n                    this.cb(options.success, this, [data]);\r\n                } else if(xhr.status >= 400) {\r\n                    this.cb(options.error, this, [data]);\r\n                }\r\n            }\r\n        }, false);\r\n\r\n        //send指令\r\n        if(options.type === \"GET\") {\r\n\r\n            xhr.send();\r\n\r\n        } else if(options.type === \"POST\") {\r\n\r\n            xhr.send(this.serialize(options.data));\r\n\r\n        }\r\n    }\r\n\r\n    serialize(data) { //初始化form数据\r\n        let result = '';\r\n\r\n        if(!this.isObj(data) || !this.isArr(data)) return '';\r\n\r\n        this.each(data, (val, key) => {\r\n\r\n            result = result + key + '=' + encodeURIComponent(val) + '&';\r\n\r\n        });\r\n\r\n        return result.substring(0, result.length - 1);\r\n    }\r\n    \r\n    initRegExp(expr) {\r\n        const tm = '\\\\/*.?+$^[](){}|\\'\\\"';\r\n        this.each(tm, (tmItem, index) => {\r\n            expr = expr.replace(new RegExp('\\\\' + tmItem, 'g'), '\\\\' + tmItem);\r\n        });\r\n        return expr;\r\n    }\r\n}\r\n\r\n//设置事件\r\nFn.prototype.on = (function() {\r\n    if(!inBrowser) return;\r\n    if(typeof document.addEventListener === 'function') {\r\n        return function on(el, type, cb) {\r\n            el.addEventListener(type, cb, false);\r\n        }\r\n    } else {\r\n        return function on(el, type, cb) {\r\n            el.attachEvent('on' + type, cb);\r\n        };\r\n    }\r\n})();\r\n\r\n//移除事件\r\nFn.prototype.off = (function() {\r\n    if(!inBrowser) return;\r\n    if(typeof document.removeEventListener === 'function') {\r\n        return function off(el, type, cb) {\r\n            el.addEventListener(type, cb, false);\r\n        }\r\n    } else {\r\n        return function off(el, type, cb) {\r\n            el.detachEvent('on' + type, cb);\r\n        };\r\n    }\r\n})();\r\n\r\nexport default new Fn();\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/fn.js","/*\r\n *  检测是否在浏览器的环境中 \r\n * */\r\n\r\nconst inBrowser = typeof window !== 'undefined';\r\n\r\nexport default inBrowser;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/in_browser.js","const FILTER_TRANFORM = /[\\b\\t\\f\\n\\r\\v]/g, //过滤转义字符\r\n    //script输出节点信息\r\n    FILTER_SCRIPT = /[\\b\\f\\r\\v]/g,    \r\n    //script的表达是\r\n    SCRIPT_TAG = /<script.*?>([\\s\\S]*?)<\\/script>/g,\r\n    //转义双引号\r\n    QUEST = /\"/g,\r\n    //引入模板\r\n    INCLUDE_ID = /<tmpl-include .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\r\n    //引入模板\r\n    INCLUDE_FILE = /<tmpl-include .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\r\n    //错误的模板\r\n    INCLUDE_ERROR = /<tmpl-include.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\r\n    //嵌入block块\r\n    BLOCK = /<tmpl-block .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-block>/g,\r\n    //append_block\r\n    BLOCK_APPEND = /^append:/,\r\n    //inser_block\r\n    BLOCK_INSETR = /^insert:/,\r\n    //base路径解析\r\n    EXTEND = /<tmpl-extend .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?\\/>/g;\r\n\r\nexport {\r\n    FILTER_TRANFORM,\r\n    FILTER_SCRIPT,\r\n    SCRIPT_TAG,\r\n    QUEST,\r\n    INCLUDE_ID,\r\n    INCLUDE_FILE,\r\n    INCLUDE_ERROR,\r\n    BLOCK,\r\n    BLOCK_APPEND,\r\n    BLOCK_INSETR,\r\n    EXTEND\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/tmpl-regexp.js","// html转义\r\nconst escapeCode = {\r\n    \"&\": \"&amp;\",\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#x27;\",\r\n    \"`\": \"&#x60;\"\r\n}\r\n\r\nexport default escapeCode;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/escapeCode.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n\r\n//在node环境中使用需要用到fs获取文件\r\nlet fs;\r\n\r\nif(!inBrowser) {\r\n    fs = __non_webpack_require__('fs');\r\n}\r\n\r\nexport default fs;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/fs.js","//常用的方法\r\nimport fn from './fn';\r\n//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n\r\n//初始化时间中的参数\r\nexport function setEvent() {\r\n\tif(this.constructor._event) return;\r\n\tthis.constructor._event = {\r\n\t    events :{},\r\n\t    eventType:[],\r\n\t    eventEl:[]\r\n\t}\r\n}\r\n\r\n//设置实例\r\nexport function setInstance(type) {\r\n\r\n\tconst get = this.config[type];\r\n\r\n\tif(!fn.isObj(get)) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tfn.each(get, (_get, key) => {\r\n\t\tthis[key] = _get;\r\n\t});\r\n}\r\n\r\n//设置this.template\r\nexport function setEl(){\r\n\tif(inBrowser) {\r\n\t\ttry{\t\t\t\r\n\t\t\treturn this.getEl(this.config.template).innerHTML; \r\n\t\t}catch(e){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t} else {\r\n\t\treturn this.config.template;\r\n\t}\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/set.js","/*\r\n * 一堆解析模板的方法,tmpl的核心算法\r\n * */\r\n//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n//include\r\nimport replaceInclude from './include';\r\n//extend\r\nimport replaceBlock from './block';\r\n//模板正则配置\r\nimport {\r\n    FILTER_TRANFORM,\r\n    FILTER_SCRIPT,\r\n    SCRIPT_TAG,\r\n    QUEST,\r\n    BLOCK,\r\n    EXTEND\r\n} from './tmpl-regexp';\r\n\r\n//html中的转义\r\nimport escapeCode from './escapeCode';\r\n\r\n//由于模块接口中都是只读的，不能放在配置中；\r\nlet SCRIPT_REGEXP,\r\n    /*原生script*/\r\n    NATIVE_SCRIPT,\r\n    /*输出script*/\r\n    ECHO_SCRIPT_REGEXP,\r\n    //转义输出\r\n    ECHO_ESCAPE_REGEXP,\r\n    /*替换输出script*/\r\n    REPLACE_ECHO_SCRIPT_OPEN_TAG,\r\n    //转义的开头表达式\r\n    ECHO_ESCAPE_REGEXP_OPEN_TAG,\r\n    /*起始*/\r\n    OPEN_TAG_REGEXP,\r\n    /*闭合*/\r\n    CLOSE_TAG_REGEXP;\r\n\r\n//设置正则\r\nexport function setRegExp() {\r\n\r\n    const open_tag = fn.initRegExp(this.config.open_tag),\r\n        close_tag = fn.initRegExp(this.config.close_tag);\r\n    //解析所有的表达式\r\n    SCRIPT_REGEXP = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '=[\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '-[\\\\\\s\\\\\\S]*?' + close_tag, 'g');\r\n    //原生的script\r\n    NATIVE_SCRIPT = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag, 'g');\r\n    //解析输出的表达式\r\n    ECHO_SCRIPT_REGEXP = new RegExp(open_tag + '=([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\r\n    //转义输出\r\n    ECHO_ESCAPE_REGEXP = new RegExp(open_tag + '-([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\r\n    //替换输出的开头表达式\r\n    REPLACE_ECHO_SCRIPT_OPEN_TAG = new RegExp(open_tag + '=', 'g');\r\n    //转义的开头表达式\r\n    ECHO_ESCAPE_REGEXP_OPEN_TAG = new RegExp(open_tag + '-', 'g');\r\n    //替换输出的开始表达式\r\n    OPEN_TAG_REGEXP = new RegExp(open_tag, 'g');\r\n    //替换输出的结束表达式\r\n    CLOSE_TAG_REGEXP = new RegExp(close_tag, 'g');\r\n}\r\n\r\n//初始化dom生成\r\nexport function setDom() {\r\n    //node中使用block\r\n    if(!inBrowser) {\r\n        replaceBlock.call(this);\r\n        /*清除遗留的block块*/\r\n        clearBlock.call(this);\r\n    }\r\n    /*重新检查依赖里面有没有引入的数据*/\r\n    replaceAlias.call(this);\r\n    /*替换include中的内容*/\r\n    replaceInclude.call(this);\r\n    /*解析script*/\r\n    let script = this.template.match(SCRIPT_REGEXP) || [];\r\n    //设置占位\r\n    const replaceScript = setSeize.call(this),\r\n        echoString = replaceScript.split(/___SCRIPT___|___ECHO_SCRIPT___/), //拆分占位\r\n        domString = [],\r\n        longString = echoString.length > script.length ? echoString : script;\r\n\r\n    //排除了运算和赋值表达式，处理直接输出的字符串\r\n    fn.each(echoString, (_echoString, index) => {\r\n        echoString[index] = \"___.push(\\\"\" + filterTransferredMeaning(_echoString) + \"\\\");\";\r\n    });\r\n\r\n    //这里是处理所有表达式内容\r\n    fn.each(script, (_string, index) => {\r\n        //恢复正则的索引位置\r\n        ECHO_SCRIPT_REGEXP.lastIndex = 0;\r\n        NATIVE_SCRIPT.lastIndex = 0;\r\n        ECHO_ESCAPE_REGEXP.lastIndex = 0;\r\n        //处理对应表达式\r\n        if(ECHO_SCRIPT_REGEXP.test(_string)) {\r\n            script[index] = _string\r\n                .replace(REPLACE_ECHO_SCRIPT_OPEN_TAG, \"___.push(\")\r\n                .replace(CLOSE_TAG_REGEXP, \");\");\r\n        } else if(NATIVE_SCRIPT.test(_string)) {\r\n            script[index] = _string\r\n                .replace(OPEN_TAG_REGEXP, '')\r\n                .replace(CLOSE_TAG_REGEXP, '');\r\n        } else if(ECHO_ESCAPE_REGEXP.test(_string)) {\r\n            script[index] = _string\r\n                .replace(ECHO_ESCAPE_REGEXP_OPEN_TAG, \"___.push(_this_.escape(\")\r\n                .replace(CLOSE_TAG_REGEXP, \"));\");\r\n        }\r\n    });\r\n\r\n    fn.each(longString, (_longString, index) => {\r\n        //直接输出的dom结构\r\n        if(fn.isStr(echoString[index])) {\r\n            domString.push(echoString[index]);\r\n        }\r\n        //js的源码\r\n        if(fn.isStr(script[index])) {\r\n            domString.push(script[index].replace(FILTER_TRANFORM, \"\"));\r\n        }\r\n    });\r\n\r\n    this.dom = 'var _this_ = this,___ = [];' + domString.join('') + 'return ___.join(\"\");';\r\n\r\n};\r\n\r\n/*替换别名的常量*/\r\nexport function replaceAlias() {\r\n    const constructor = this.constructor;\r\n    fn.each(constructor.alias, (replaceAlias, alias) => {\r\n        this.template = this.template.replace(new RegExp(fn.initRegExp(alias), 'g'), replaceAlias);\r\n    });\r\n}\r\n\r\n/*清除多余的block块*/\r\nfunction clearBlock() {\r\n    this.template = this.template\r\n        .replace(EXTEND, '')\r\n        .replace(BLOCK, '');\r\n}\r\n\r\n//设置占位\r\nfunction setSeize() {\r\n    const replaceScript = this.template\r\n        .replace(ECHO_SCRIPT_REGEXP, '___ECHO_SCRIPT___')\r\n        .replace(SCRIPT_REGEXP, '___SCRIPT___');\r\n    return replaceScript;\r\n}\r\n\r\n//过滤string中的引号\r\nfunction filterTransferredMeaning(string) {\r\n    //检查script的标签\r\n    const scriptTags = string.match(SCRIPT_TAG),\r\n        _string = string\r\n        .replace(SCRIPT_TAG, '___SCRIPT_TAG___')\r\n        .replace(FILTER_TRANFORM, \"\")\r\n        .replace(QUEST, '\\\\\\\"');\r\n\r\n    return !scriptTags ? _string : (filterScriptTag(_string, scriptTags));\r\n}\r\n\r\n//过滤script标签\r\nfunction filterScriptTag(string, scriptTags) {\r\n    const splitScriptTag = string.split('___SCRIPT_TAG___'),\r\n        dom = [];\r\n    fn.each(splitScriptTag, (script, index) => {\r\n        dom.push(script);\r\n        if(scriptTags[index]) {\r\n            dom.push(scriptTags[index]\r\n                .replace(QUEST, '\\\\\\\"')\r\n                .replace(FILTER_SCRIPT, '')\r\n                .replace(/\\n/g, '\\\\n')\r\n            );\r\n        }\r\n    });\r\n    return dom.join(\"\");\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/tmpl-render.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n\r\n//兼容性IE8\r\n(() => {\r\n\t//兼容IE8中 的indexOf\r\n\tif(!Array.prototype.indexOf) {\r\n\t\tArray.prototype.indexOf = (val) => {\r\n\t\t\tfor(let index = 0, len = this.length; index < len; index++) {\r\n\t\t\t\tif(this[index] === val) {\r\n\t\t\t\t\treturn index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\t/*只在浏览器环境使用*/\r\n\tif(inBrowser && !document.getElementsByClassName) {\r\n\t\tdocument.getElementsByClassName = (className, el) => {\r\n\t\t\tconst children = (el || document).getElementsByTagName('*'),\r\n\t\t\t\telements = new Array();\r\n\t\t\tfor(let i = 0; i < children.length; i++) {\r\n\t\t\t    \r\n\t\t\t\tconst child = children[i],\r\n\t\t\t\t\tclassNames = child.className.split(' ');\r\n\t\t\t\t\t\r\n\t\t\t\tfor(let j = 0; j < classNames.length; j++) {\r\n\t\t\t\t\tif(classNames[j] == className) {\r\n\t\t\t\t\t\telements.push(child);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn elements;\r\n\t\t};\r\n\t}\r\n})();\r\n\r\nexport default true;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/compatibility.js","//tmpl的初始化\r\nimport init from './init';\r\n//处理模板数据的Render类\r\nimport Render from './render';\r\n//常用的类方法\r\nimport fn from './fn';\r\n//Dom的操作\r\nimport Dom from './dom';\r\n//config配置\r\nimport config from './config';\r\n//转义html\r\nimport escapeCode from './escapeCode';\r\n//set\r\nimport { setEl } from './set';\r\n\r\nexport default class Tmpl extends Dom {\r\n    //Tmpl构造\r\n    constructor(opts) {\r\n        super();\r\n        this.config = fn.extend(fn.copy(config), opts);\r\n        this.init();\r\n    }\r\n\r\n    //安装插件\r\n    static install(constructor) {\r\n        constructor.install(this);\r\n    }\r\n\r\n    //初始化对象\r\n    init() {\r\n        init.call(this);\r\n    }\r\n\r\n    //解析模板和数据\r\n    render(data) {\r\n        var tmpl = this;\r\n        return new Render({\r\n            tmpl: tmpl,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    //添加数据更新模板\r\n    update() {\r\n        this.template = setEl.call(this);\r\n        setDom.call(this);\r\n    }\r\n\r\n    /*回调*/\r\n    cb(cb) {\r\n        fn.cb(cb, this);\r\n        return this;\r\n    }\r\n\r\n    /*转义*/\r\n    escape(escapeVal) {\r\n        fn.each(escapeCode, (item, key) => {\r\n            escapeVal = escapeVal.replace(new RegExp(key, 'g'), item);\r\n        });\r\n        return escapeVal;\r\n    }\r\n}\r\n\r\n//常用的方法给tmpl的fn属性中\r\nTmpl.prototype.fn = fn;\r\n\r\n//设置路径别名常量\r\nTmpl.alias = {};\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/tmpl.js","//兼容性处理\r\nimport compatibility from './tmpl/compatibility';\r\n//Tmpl 文件入口\r\nimport Tmpl from './tmpl/tmpl';\r\n\r\n(function(global, factory) {\r\n    if(typeof demand === 'function' && typeof demand.define === 'function')\r\n        demand.define('tmpl', factory);\r\n    else if(typeof exports === 'object' && typeof module === 'object')\r\n        module.exports = factory();\r\n    else\r\n        (global ? (global.Tmpl = factory()) : {});\r\n})(typeof window !== 'undefined' ? window : this, function() {\r\n    Tmpl.version = \"v1.0.5\";\r\n    return Tmpl;\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//常用的方法\r\nimport fn from './fn';\r\n\r\nimport {\r\n    replaceAlias\r\n} from './tmpl-render';\r\n\r\n//在node环境中使用需要用到fs获取文件\r\nimport fs from './fs';\r\n\r\n//模板正则配置\r\nimport {\r\n    BLOCK,\r\n    BLOCK_APPEND,\r\n    BLOCK_INSETR,\r\n    EXTEND\r\n} from './tmpl-regexp';\r\n\r\n/*替换Block块内容*/\r\nexport default function replaceBlock() {\r\n    //先设置获取include的引入模板\r\n    replaceAlias.call(this);\r\n\r\n    const baseFile = fn.unique(this.template.match(EXTEND)),\r\n        /*只获取第一个base的名字*/\r\n        baseFileName = baseFile.toString()\r\n        .replace(EXTEND, \"$2\")\r\n        .split(',')[0];\r\n\r\n    /*如果不存在block的内容，直接跳出*/\r\n    if(baseFileName === '') return;\r\n\r\n    //获取入口模板\r\n    const blockTmpl = fn.unique(this.template.match(BLOCK));\r\n\r\n    //获取继承的模板\r\n    let layoutTmpl = fs.readFileSync(baseFileName, {\r\n        encoding: 'UTF8'\r\n    });\r\n\r\n    //从继承模板中筛选出block\r\n    const layoutTmplFindBlock = layoutTmpl.match(BLOCK) || [],\r\n        layoutTmplFindBlockStr = layoutTmplFindBlock.toString(),\r\n        baseBlockName = fn.unique(layoutTmplFindBlockStr !== '' ? (layoutTmplFindBlockStr.replace(BLOCK, \"$2\")\r\n            .split(',')) : []);\r\n\r\n    fn.each(baseBlockName, (name, index) => {\r\n\r\n        const block = layoutTmplFindBlock[index],\r\n            replaceBlock = new RegExp(fn.initRegExp(block), 'g');\r\n\r\n        let hasBlock = false;\r\n\r\n        fn.each(blockTmpl, (blocktmpl, _index) => {\r\n\r\n            BLOCK.test(blocktmpl);\r\n\r\n            const _name = RegExp.$2,\r\n                blockContent = RegExp.$3;\r\n\r\n            //匹配到name的\r\n            if(name === _name) {\r\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent);\r\n                hasBlock = true;\r\n            } else if(BLOCK_APPEND.test(_name) && name === _name.replace(BLOCK_APPEND, '')) {\r\n                layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(BLOCK, \"$3\") + blockContent);\r\n                hasBlock = true;\r\n            } else if(BLOCK_INSETR.test(_name) && name === _name.replace(BLOCK_INSETR, '')) {\r\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent + block.replace(BLOCK, \"$3\"));\r\n                hasBlock = true;\r\n            }\r\n\r\n            BLOCK.lastIndex = 0;\r\n\r\n        });\r\n\r\n        /*如果当前的block是在extends的模板中不存在，则显示默认里面的*/\r\n        if(!hasBlock) {\r\n            layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(BLOCK, '$3'));\r\n        }\r\n    });\r\n\r\n    this.template = layoutTmpl;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/block.js","/*配置信息*/\r\nconst config = {\r\n    open_tag: \"<%\", //OPEN_TAG\r\n    close_tag: \"%>\", //CLOSE_TAG,\r\n    template: \"\",\r\n    data: {},\r\n    methods: {}\r\n};\r\n\r\nexport default config;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/config.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n\r\n//绑定相关函数\r\nfunction bindFn(el, className, type) {\r\n\r\n    const _className = el.className.split(' ');\r\n\r\n    //替换\r\n    if(fn.isObj(className) && (type == 'replaceBind' || type == 'replaceClass')) {\r\n        fn.each(className, (__className, key) => {\r\n            var findIndex = _className.indexOf(key);\r\n            if(findIndex != -1) _className[findIndex] = __className;\r\n        });\r\n    } else {\r\n        //获得el中的className{type:string}\r\n        className = className.split(' ');\r\n\r\n        for(var index = 0; index < className.length; index++) {\r\n\r\n            const findIndex = _className.indexOf(className[index]);\r\n\r\n            if(type == 'bind' || type == 'addClass') {\r\n\r\n                if(findIndex == -1) _className.push(className[index]);\r\n\r\n            } else if(type == 'unbind' || type == 'removeClass') {\r\n\r\n                if(findIndex != -1) _className.splice(findIndex, 1);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    el.className = _className.join(' ');\r\n\r\n    return this;\r\n}\r\n\r\n//设置主的委托事件\r\nfunction setEntrust(ele, type, cb) {\r\n    fn.on(ele, type, (event) => {\r\n        const ev = event || window.event,\r\n\r\n            el = ev.target || ev.srcElement,\r\n\r\n            eventType = ele.event.events[type];\r\n\r\n        fn.each(eventType, (_eventType, bind) => {\r\n\r\n            if(!this.hasClass(el, bind)) return;\r\n\r\n            fn.each(_eventType, (cb, index) => {\r\n\r\n                cb.apply(this, [ev, el]);\r\n\r\n            });\r\n        });\r\n\r\n    });\r\n    \r\n}\r\n\r\nclass Dom {\r\n    getEl(exp) { \r\n        \r\n        //获取节点\r\n        if(!exp) return null;\r\n        \r\n        if(!this.fn.isFn(document.querySelector)){            \r\n            return document.getElementById(exp);\r\n        }\r\n        \r\n        const getEl = document.querySelector(exp),\r\n            el = document.getElementById(exp);\r\n            \r\n        return getEl !== null ? getEl : (el ? el : null);\r\n    }\r\n\r\n    getEls(exp) {\r\n        \r\n        //获取多个节点\r\n        if(!exp) return null;\r\n        \r\n        if(!this.fn.isFn(document.querySelectorAll)){            \r\n            return document.getElementsByClassName(exp);\r\n        }\r\n        \r\n        const getEls = document.querySelectorAll(exp),\r\n            el = document.getElementsByClassName(exp);\r\n            \r\n        return getEls.length > 0 ? getEls : (el ? el : []);\r\n    }\r\n    //绑定事件\r\n    on(ele, exp, type, cb) {\r\n        if(arguments.length === 4) {\r\n\r\n            //初始化事件\r\n            if(this.constructor._event.eventEl.indexOf(ele) == -1) {\r\n                \r\n                this.constructor._event.eventEl.push(ele);\r\n                \r\n                ele.event = {\r\n                    eventType:[],\r\n                    events:{}\r\n                };    \r\n            }\r\n            \r\n            if(ele.event.eventType.indexOf(type) == -1) {\r\n                setEntrust.apply(this, [ele, type, cb]);\r\n                //添加委托事件\r\n                ele.event.eventType.push(type);\r\n            }\r\n\r\n            //查找现在的节点是否存在事件\r\n            if(!ele.event.events[type]) {\r\n                ele.event.events[type] = {};\r\n            }\r\n\r\n            //当前的事件是否有设置\r\n            if(!ele.event.events[type][exp]) {\r\n                ele.event.events[type][exp] = [];\r\n            }\r\n\r\n            //添加处理函数到事件列表中\r\n            ele.event.events[type][exp].push(cb);\r\n\r\n        } else if(arguments.length === 3) {\r\n            cb = type;\r\n            type = exp;\r\n            fn.on(ele, type, (event) => {\r\n                cb.call(this, event);\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    //取消绑定事件\r\n    off(ele, exp, type, cb) {\r\n        if(arguments.length === 4) {\r\n            var eventIndex = this.events[type][exp].indexOf(cb);\r\n            if(eventIndex != -1)\r\n                ele.events[type][exp].splice(eventIndex, 1);\r\n        } else if(arguments.length === 3) {\r\n            /*删除事件*/\r\n            fn.off(ele, type, cb);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    //设置事件委托的class\r\n    bind(el, bind) {\r\n        bindFn.apply(this, [el, bind, 'bind']);\r\n        return this;\r\n    }\r\n\r\n    //取消方法绑定\r\n    unbind(el, bind) {\r\n        bindFn.apply(this, [el, bind, 'unbind']);\r\n        return this;\r\n    }\r\n\r\n    //替换绑定\r\n    replaceBind(el, bind) {\r\n        bindFn.apply(this, [el, bind, 'replaceBind']);\r\n        return this;\r\n    }\r\n\r\n    //添加class\r\n    addClass(el, className) {\r\n        bindFn.apply(this, [el, className, 'addClass']);\r\n        return this;\r\n    }\r\n\r\n    //删除class\r\n    removeClass(el, className) {\r\n        bindFn.apply(this, [el, className, 'removeClass']);\r\n        return this;\r\n    }\r\n\r\n    //替换className\r\n    replaceClass(el, className) {\r\n        bindFn.apply(this, [el, className, 'replaceClass']);\r\n        return this;\r\n    }\r\n\r\n    //是否存在class\r\n    hasClass(el, className) {    \r\n        try {\r\n            //节点中存在的className\r\n            const _className = el.className.split(' '),\r\n                //是否存在的className\r\n                hasClassName = className.split(' ');\r\n\r\n            let hasLen = 0;\r\n\r\n            for(var index = 0; index < hasClassName.length; index++) {\r\n                if(_className.indexOf(hasClassName[index]) !== -1) ++hasLen;\r\n            }\r\n\r\n            if(hasLen === hasClassName.length) return true;\r\n\r\n            return false;\r\n\r\n        } catch(e) {\r\n\r\n            return false;\r\n\r\n        }\r\n    }\r\n\r\n    //获取属性\r\n    attr(el, attr) {\r\n        if(fn.isObj(attr)) {\r\n\r\n            fn.each(attr, (_attr, key) => {\r\n\r\n                if(typeof _attr === 'boolean') {\r\n\r\n                    el[key] = _attr;\r\n\r\n                    el.setAttribute(key, _attr);\r\n\r\n                } else if(_attr === '') {\r\n\r\n                    el.removeAttribute(key);\r\n\r\n                } else {\r\n\r\n                    el.setAttribute(key, _attr);\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n\r\n        } else {\r\n\r\n            if(attr instanceof Array) {\r\n\r\n                var attrs = [];\r\n\r\n                fn.each(attr, (_attr, index) => {\r\n\r\n                    attrs.push(this.attr(el, _attr));\r\n\r\n                });\r\n\r\n                return attrs;\r\n\r\n            } else if(/^bind-\\S*/.test(attr)) {\r\n\r\n                return new Function('return ' + el.getAttribute(attr) + ';')\r\n                    .apply(this);\r\n\r\n            } else {\r\n\r\n                return el.getAttribute(attr);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //获取、设置prop属性\r\n    prop(el, prop) {\r\n        //设置节点属性\r\n        if(fn.isObj(prop)) {\r\n            fn.each(prop, (_prop, key) => {\r\n\r\n                el[key] = _prop;\r\n\r\n            });\r\n\r\n            return this;\r\n\r\n        } else if(fn.isStr(prop)) { //获得节点属性\r\n\r\n            if(/^bind-\\S*/.test(prop))\r\n\r\n                return new Function('return ' + el[prop] + ';')\r\n                    .apply(this);\r\n\r\n            return el[prop];\r\n\r\n        }\r\n    }\r\n\r\n    //获取、设置html\r\n    html(el, html) {\r\n        if(html === undefined) return el.innerHTML;\r\n        el.innerHTML = html;\r\n        return this;\r\n    }\r\n\r\n    //获取、设置value\r\n    val(el, val) {\r\n        if(val === undefined) return el.value;\r\n        el.value = val;\r\n        return this;\r\n    }\r\n\r\n    //获取、设置textContent\r\n    text(el, text) {\r\n        if(text === undefined) return el.textContent;\r\n        el.textContent = text;\r\n        return this;\r\n    }\r\n\r\n    //查找符合的一个父级节点\r\n    parent(el, hasClassName) {\r\n\r\n        var parent = el.parentNode;\r\n\r\n        if(parent === document || parent === null) return null;\r\n\r\n        if(!hasClassName) return parent;\r\n\r\n        if(this.hasClass(parent, hasClassName)) return parent;\r\n\r\n        return this.parent(parent, hasClassName);\r\n\r\n    }\r\n\r\n    //超找所有符合的父元素\r\n    parents(el, hasClassName, hasClassParent) {\r\n\r\n        var parent = el.parentNode;\r\n\r\n        hasClassParent = (hasClassParent ? hasClassParent : []);\r\n\r\n        if(parent === document || parent === null) return null;\r\n\r\n        if(this.hasClass(parent, hasClassName)) hasClassParent.push(parent);\r\n\r\n        this.parents(parent, hasClassName, hasClassParent);\r\n\r\n        return hasClassParent;\r\n    }\r\n\r\n    //获取直接的当个子节点\r\n    children(el) {\r\n        const els = [];\r\n        fn.each(el.childNodes, (child) => {\r\n            if(child.nodeType === 1) {\r\n                els.push(child);\r\n            }\r\n        });\r\n        return els;\r\n    };\r\n\r\n    //查找对应的class存在的节点\r\n    childrens(el, className, hasClassChild) {\r\n        var i = 0;\r\n        hasClassChild = (hasClassChild ? hasClassChild : []);\r\n        for(; i < el.children.length; i++) {\r\n            if(this.hasClass(el.children[i], className)) hasClassChild.push(el.children[i]);\r\n            this.childrens(el.children[i], className, hasClassChild);\r\n        }\r\n        return hasClassChild;\r\n    }\r\n\r\n    //下一个节点\r\n    next(el) {\r\n        const nextEl = el.nextSibling;\r\n        if(nextEl === null) return null;\r\n        if(nextEl.nodeType !== 1) return this.next(nextEl);\r\n        return nextEl;\r\n    }\r\n\r\n    //获取当前元素同级前的节点\r\n    nextAll(el) {\r\n        return this.siblings(el, 'nextAll');\r\n    }\r\n\r\n    //获取当前元素同级后的节点\r\n    prevAll(el) {\r\n        return this.siblings(el, 'prevAll');\r\n    }\r\n\r\n    //上一个节点\r\n    prev(el) {\r\n        const prevEl = el.previousSibling;\r\n        if(prevEl === null) return null;\r\n        if(prevEl.nodeType !== 1) return this.prev(prevEl);\r\n        return prevEl;\r\n    }\r\n\r\n    //获取同级的兄弟节点\r\n    siblings(el, type) {\r\n        const parent = this.parent(el);\r\n\r\n        if(parent === null) return null;\r\n\r\n        const child = parent.children;\r\n\r\n        const siblings = [];\r\n\r\n        let i = 0;\r\n\r\n        if(type === 'nextAll')\r\n            i = Array.prototype.indexOf.call(child, el);\r\n\r\n        for(; i < child.length; i++) {\r\n\r\n            if(child[i] !== el) siblings.push(child[i]);\r\n\r\n            if(type === 'prevAll' && child[i] === el) return siblings;\r\n\r\n        }\r\n\r\n        return siblings;\r\n    }\r\n\r\n    //显示\r\n    hide(el, time) {\r\n\r\n        var opacity = this.css(el, 'opacity');\r\n\r\n        el.opacity = opacity ? opacity : 1;\r\n\r\n        fn.isNum(time) ? (this.animate(el, {\r\n            opacity: 0\r\n        }, time, () => {\r\n            el.style.display = 'none';\r\n        })) : el.style.display = 'none';\r\n\r\n        return this;\r\n    }\r\n\r\n    //隐藏\r\n    show(el, time) {\r\n\r\n        var opactiy = el.opactiy ? el.opactiy : 100;\r\n\r\n        if(fn.isNum(time)) {\r\n\r\n            this.css(el, {\r\n                opacity: 0\r\n            });\r\n\r\n            el.style.display = '';\r\n\r\n            this.animate(el, {\r\n                opacity: opactiy\r\n            }, time);\r\n\r\n        } else {\r\n            el.style.display = '';\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*切换显示状态*/\r\n    toggle(el, time) {\r\n        if(el.style.display === '') this.hide(el, time);\r\n        else this.show(el, time);\r\n    }\r\n\r\n    /*动画*/\r\n    animate(el, animate, time, cb) {\r\n\r\n        if(!el) return;\r\n\r\n        el.timer = setInterval(() => {\r\n\r\n            let animateStatus = true;\r\n\r\n            fn.each(animate, (val, type) => {\r\n\r\n                let speed = 0,\r\n                    cssVal = 0;\r\n\r\n                if(type === 'opacity') {\r\n\r\n                    cssVal = Number(this.css(el, 'opacity')) * 100;\r\n\r\n                } else if(type === 'scrollTop') {\r\n\r\n                    cssVal = Math.ceil(document.documentElement.scrollTop || document.body.scrollTop);\r\n\r\n                    let maxScrollTop = Math.ceil(document.body.scrollHeight - window.innerHeight);\r\n\r\n                    if(val > maxScrollTop) {\r\n                        val = maxScrollTop;\r\n                        animate['scrollTop'] = maxScrollTop;\r\n                    }\r\n\r\n                } else {\r\n                    cssVal = parseInt(this.css(el, type));\r\n                }\r\n\r\n                speed = (val - cssVal) / 8;\r\n\r\n                speed = speed > 0 ? Math.ceil(speed) : Math.floor(speed);\r\n\r\n                const setVal = {};\r\n\r\n                if(type === 'opacity') {\r\n                    setVal['opacity'] = (cssVal + speed) / 100;\r\n                    this.css(el, setVal);\r\n                } else if(type === 'scrollTop') {\r\n                    this.setScrollTop(cssVal + speed);\r\n                } else {\r\n                    setVal[type] = cssVal + speed + 'px';\r\n                    this.css(el, setVal);\r\n                }\r\n\r\n                if(parseInt(val) !== cssVal) {\r\n                    animateStatus = false;\r\n                }\r\n            });\r\n\r\n            if(animateStatus) {\r\n                clearInterval(el.timer);\r\n                fn.cb(cb, this);\r\n            }\r\n\r\n        }, time / 60);\r\n    }\r\n\r\n    /*操作css*/\r\n    css(el, css) {\r\n        //获取css\r\n        if(fn.isStr(css)) {\r\n            return this.curCss(el, css);\r\n        } else if(fn.isObj(css)) {\r\n            //设置style\r\n            this.setStyle(el, css);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*处理驼峰和非驼峰*/\r\n    camelCase(text, isCameCase) {\r\n        let camelCases;\r\n\r\n        const AZ = /[A-Z]/g,\r\n            _AZ = /-[a-z]/g;\r\n\r\n        if(!fn.isStr(text)) return text;\r\n\r\n        camelCases = isCameCase ? text.match(_AZ) : text.match(AZ);\r\n\r\n        camelCases = camelCases ? camelCases : [];\r\n\r\n        fn.each(camelCases, (str, index) => {\r\n            if(isCameCase) text = text.replace(str, str.replace(/-/g, '')\r\n                .toUpperCase());\r\n            else text = text.replace(str, '-' + str.toLowerCase());\r\n        });\r\n\r\n        return text;\r\n    }\r\n\r\n    /*获取计算好的值*/\r\n    curCss(el, css) {\r\n\r\n        let _css;\r\n\r\n        if(window.getComputedStyle) {\r\n\r\n            _css = this.camelCase(css, true);\r\n\r\n            return window.getComputedStyle(el, null)[_css];\r\n\r\n        } else if(document.documentElement.currentStyle) {\r\n\r\n            _css = this.camelCase(css, false);\r\n\r\n            return document.documentElement.currentStyle[_css];\r\n\r\n        }\r\n    }\r\n\r\n    /*设置css*/\r\n    setStyle(el, css) {\r\n\r\n        fn.each(css, (style, cssName) => {\r\n\r\n            el.style[cssName] = style;\r\n\r\n        });\r\n    }\r\n\r\n    /*删除节点*/\r\n    remove(el) {\r\n        try {\r\n            el.remove();\r\n        } catch(e) {\r\n            const parent = this.parent(el);\r\n            parent !== null ? parent.removeChild(el) : (console.warn('element remove error!'));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*创建元素*/\r\n    create(dom) {\r\n\r\n        const fragment = document.createDocumentFragment();\r\n\r\n        const tempEl = document.createElement('div');\r\n\r\n        tempEl.innerHTML = dom;\r\n\r\n        while(tempEl.childNodes.length !== 0) {\r\n\r\n            let child = tempEl.childNodes[0];\r\n\r\n            const childHtml = child.innerHTML;\r\n\r\n            if(child.tagName === 'SCRIPT') {\r\n\r\n                const newScript = document.createElement('script');\r\n\r\n                newScript.innerHTML = childHtml;\r\n\r\n                fn.each(child.attributes, (attr) => {\r\n\r\n                    if(!attr) true;\r\n\r\n                    newScript.setAttribute(attr.name, attr.value);\r\n\r\n                });\r\n\r\n                this.remove(child);\r\n\r\n                child = newScript;\r\n\r\n            }\r\n\r\n            fragment.appendChild(child);\r\n\r\n        }\r\n\r\n        return fragment;\r\n    }\r\n\r\n    /*插入节点*/\r\n    append(el, child) {\r\n\r\n        if(el.nodeType === 1) el.appendChild(child);\r\n\r\n        else fn.getEl(el)\r\n            .appendChild(child);\r\n\r\n        return this;\r\n    }\r\n\r\n    //取消冒泡\r\n    preventDefault(event) {\r\n\r\n        const ev = event || window.event;\r\n\r\n        ev.stopPropagation();\r\n\r\n        ev.cancelBubble = true;\r\n\r\n    }\r\n\r\n    //offset\r\n    offset(el) {\r\n\r\n        const box = el.getBoundingClientRect(),\r\n\r\n            docElem = document.documentElement,\r\n\r\n            body = document.body,\r\n\r\n            win = window,\r\n\r\n            clientTop = docElem.clientTop || body.clientTop || 0,\r\n\r\n            clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n\r\n            scrollTop = win.pageYOffset || docElem.scrollTop,\r\n\r\n            scrollLeft = win.pageXOffset || docElem.scrollLeft;\r\n\r\n        return {\r\n            top: box.top + scrollTop - clientTop,\r\n            left: box.left + scrollLeft - clientLeft\r\n        };\r\n    }\r\n\r\n    /*设置滚动条高度*/\r\n    setScrollTop(top, animate) {\r\n\r\n        document.body.scrollTop = top;\r\n\r\n        document.documentElement.scrollTop = top;\r\n\r\n    }\r\n}\r\n\r\nexport default Dom;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/dom.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n//在node环境中使用需要用到fs获取文件\r\nimport fs from './fs';\r\n\r\n//模板正则配置\r\nimport {\r\n    INCLUDE_ID,\r\n    INCLUDE_FILE,\r\n    INCLUDE_ERROR,\r\n} from './tmpl-regexp';\r\n\r\n/*替换include引入的模板*/\r\nexport default function replaceInclude() {\r\n    const include = (() => {\r\n        if(inBrowser) {\r\n            //在浏览器环境清空include[file]\r\n            return INCLUDE_ID;\r\n        } else {\r\n            //在node环境清空include[name]\r\n            return INCLUDE_FILE;\r\n        }\r\n    })();\r\n\r\n    let includeTmpl, includeId;\r\n\r\n    //去重\r\n    includeTmpl = fn.unique(this.template.match(include));\r\n    includeId = includeTmpl.toString().replace(include, \"$2\").split(',');\r\n\r\n    //找不到include//查找的id和include匹配的数量必须相同\r\n    if(includeTmpl.length === 0 || fn.trimArr(includeId)\r\n        .length === 0 ||\r\n        !(includeTmpl.length > 0 &&\r\n            includeId.length > 0 &&\r\n            includeId.length === includeTmpl.length\r\n        )) return;\r\n\r\n    fn.each(includeId, (id, index) => {\r\n        const replaceIncludeRegExp = new RegExp(fn.initRegExp(includeTmpl[index]), 'g');\r\n        /*浏览器环境下执行*/\r\n        if(inBrowser) {\r\n            const el = this.getEl(id);\r\n            if(el) this.template = this.template.replace(replaceIncludeRegExp, this.html(el));\r\n            //找不到就清空原来的内容\r\n            else this.template = this.template.replace(replaceIncludeRegExp, '');\r\n        } else {\r\n            /*node环境下执行*/\r\n            try {\r\n                const tmpl = fs.readFileSync(id, {\r\n                    encoding: 'UTF8'\r\n                });\r\n\r\n                this.template = this.template.replace(replaceIncludeRegExp, tmpl);\r\n\r\n            } catch(e) {\r\n                //找不到就清空原来的内容\r\n                this.template = this.template.replace(replaceIncludeRegExp, '');\r\n            }\r\n        }\r\n    });\r\n\r\n    /*去掉重复的include*/\r\n    includeTmpl = fn.unique(this.template.match(include));\r\n\r\n    /*查找是否还有include的引入*/\r\n    if(includeTmpl.length > 0) replaceInclude.call(this);\r\n\r\n    /*清空错误的include*/\r\n    this.template = this.template.replace(INCLUDE_ERROR, '');\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/include.js","//常用的方法\r\nimport fn from './fn';\r\n//解析方法\r\nimport tmplRender from './tmpl-render';\r\n//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//tmpl的render解析\r\nimport {\r\n\tsetRegExp,\r\n\tsetDom\r\n} from './tmpl-render';\r\n//初始化设置\r\nimport {\r\n\tsetInstance,\r\n\tsetEvent,\r\n\tsetEl,\r\n\tsetTemplate\r\n} from './set';\r\n\r\n//router相关\r\nimport {\r\n\tsetRouter,\r\n\tcheckRouterStatus\r\n} from './router';\r\n\r\nexport default function init() {\r\n    //构建开始的钩子\r\n    fn.run(this.config.create, this);\r\n\t//初始配置信息\r\n\tthis.template = setEl.call(this);\r\n\t//初始化方法\r\n\tsetInstance.call(this, 'methods');\r\n\t//初始化数据\r\n\tsetInstance.call(this, 'data');\r\n\t//构建开始后的钩子\r\n    fn.run(this.config.created, this);\r\n\t//初始化路由\r\n\tsetRouter.call(this);\r\n\t//查找模板\r\n\tif(this.template) {\r\n\r\n\t\tsetRegExp.call(this);\r\n\t\t//转化为js执行\r\n\t\tsetDom.call(this);\r\n\t}\r\n\t//初始化事件\r\n\tsetEvent.call(this);\r\n\t//设置事件\r\n\tfn.run(this.config.events, this);\r\n\t//所有完毕后的钩子\r\n\tfn.run(this.config.mounted, this);\r\n\t//检查是否存在路由的状态\r\n\tcheckRouterStatus.call(this);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/init.js","/*\r\n *  Render代理实例,针对tmpl中的数据流\r\n * */\r\n\r\n//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n\r\nclass Render {\r\n    constructor(opts) {\r\n\r\n        this.init(opts);\r\n\r\n    }\r\n    //初始render类\r\n    init(opts) {\r\n\r\n        this.tmpl = opts.tmpl;\r\n\r\n        this.data = opts.data;\r\n        \r\n//      console.log(this.tmpl.dom);\r\n\r\n        this.dom = new Function('data', this.tmpl.dom).apply(this.tmpl, [this.data]);\r\n\r\n        inBrowser ? (this.fragment = this.tmpl.create(this.dom)) : null;\r\n\r\n    }\r\n    //在父节点中插入解析后的模板\r\n    appendTo(el, cb) {\r\n\r\n        const tmpl = this.tmpl,\r\n            fn = tmpl.fn;\r\n\r\n        if(el.nodeType === 1) el.appendChild(this.fragment);\r\n\r\n        else tmpl.getEl(el).appendChild(this.fragment);\r\n\r\n        fn.cb(cb, this.tmpl);\r\n\r\n        return tmpl;\r\n    }\r\n    //在el子节点ex中插入解析后的模板\t\r\n    insertBefore(el, ex, cb) {\r\n\r\n        const tmpl = this.tmpl,\r\n            fn = tmpl.fn;\r\n\r\n        tmpl.getEl(el).insertBefore(this.fragment, ex);\r\n\r\n        fn.cb(cb, tmpl);\r\n\r\n        return tmpl;\r\n    }\r\n\r\n}\r\n\r\nexport default Render;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/render.js","/*路由相关*/\r\n\r\n//常用的方法\r\nimport fn from './fn';\r\n\r\n//把路由实例挂靠到模板中\r\nexport function setRouter() {\r\n\tif(fn.isObj(this.config.router)) {\r\n\t\tthis.constructor.router = this.config.router;\r\n\t}\r\n}\r\n\r\n//检查路由状态\r\nexport function checkRouterStatus() {\r\n\t//获取路由\r\n\tconst router = this.constructor.router,\r\n\t\tstatus = this.config.async;\r\n\tif(!(status === false) && router) {\r\n\t\trouter.changeRoutereStatus(true);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/router.js"],"sourceRoot":""}