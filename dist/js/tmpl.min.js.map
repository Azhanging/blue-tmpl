{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///js/tmpl.min.js","webpack:///webpack/bootstrap 88f0ab6557ce558d0ded?c75a","webpack:///./src/tmpl/fn.js?b572","webpack:///./src/tmpl/in_browser.js?f4f9","webpack:///./src/tmpl/tmpl-regexp.js?dc0d","webpack:///./src/tmpl/tmpl-render.js?e5fb","webpack:///./src/tmpl/escapeCode.js?6bec","webpack:///./src/tmpl/fs.js?063c","webpack:///./src/tmpl/set.js?b5db","webpack:///(webpack)/buildin/module.js?c3c2","webpack:///./src/tmpl/compatibility.js?9b57","webpack:///./src/tmpl/tmpl.js?0f12","webpack:///./src/index.js?9552","webpack:///./src/tmpl/block.js?76bd","webpack:///./src/tmpl/config.js?486b","webpack:///./src/tmpl/dom.js?200e","webpack:///./src/tmpl/include.js?1b38","webpack:///./src/tmpl/init.js?a910","webpack:///./src/tmpl/render.js?8efc","webpack:///./src/tmpl/router.js?b89d"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","_interopRequireDefault","obj","default","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","length","descriptor","writable","key","protoProps","staticProps","_in_browser","_in_browser2","Fn","array","Array","fn","string","num","isNaN","el","nodeType","cb","len","isArr","options","each","option","context","args","isFn","apply","arr","newArray","item","index","indexOf","push","newArr","isObj","JSON","parse","stringify","_this","xhr","XMLHttpRequest","type","toUpperCase","timeout","async","open","url","serialize","data","setRequestHeader","contentType","addEventListener","responseText","e","readyState","status","success","error","send","result","val","encodeURIComponent","substring","expr","tmItem","replace","RegExp","on","document","attachEvent","off","removeEventListener","detachEvent","inBrowser","window","FILTER_TRANFORM","FILTER_SCRIPT","SCRIPT_TAG","QUEST","INCLUDE_ID","INCLUDE_FILE","INCLUDE_ERROR","BLOCK","BLOCK_APPEND","BLOCK_INSETR","EXTEND","setRegExp","open_tag","_fn2","initRegExp","config","close_tag","SCRIPT_REGEXP","NATIVE_SCRIPT","ECHO_SCRIPT_REGEXP","ECHO_ESCAPE_REGEXP","REPLACE_ECHO_SCRIPT_OPEN_TAG","ECHO_ESCAPE_REGEXP_OPEN_TAG","OPEN_TAG_REGEXP","CLOSE_TAG_REGEXP","render","_block2","clearBlock","replaceAlias","_include2","script","template","match","replaceScript","setSeize","echoString","split","domString","longString","_echoString","filterTransferredMeaning","_string","lastIndex","test","_longString","isStr","_tmplRegexp","dom","join","constructor","alias","scriptTags","filterScriptTag","splitScriptTag","_fn","_include","_block","_escapeCode","escapeCode","&","<",">","\"","'","`","fs","require","setEvent","_event_","eventEl","setInstance","_get","setEl","getEl","innerHTML","webpackPolyfill","deprecate","paths","children","undefined","getElementsByClassName","className","getElementsByTagName","elements","child","classNames","j","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","_init2","_init3","_render","_render2","_dom","_dom2","_config","_config2","_escapeCode2","_set","_tmplRender","Tmpl","_Dom","opts","getPrototypeOf","extend","copy","init","tmpl","escapeVal","install","domStr","console","log","_typeof","Symbol","iterator","_compatibility","_tmpl","_tmpl2","global","demand","version","replaceBlock","baseFile","unique","baseFileName","toString","blockTmpl","layoutTmpl","_fs2","readFileSync","encoding","layoutTmplFindBlock","layoutTmplFindBlockStr","baseBlockName","block","hasBlock","blocktmpl","_index","_name","$2","blockContent","$3","_fs","methods","bindFn","_className","findIndex","splice","__className","setEntrust","ele","event","ev","srcElement","eventType","events","_eventType","bind","hasClass","Dom","exp","querySelector","getElementById","querySelectorAll","getEls","_this2","arguments","eventIndex","hasClassName","hasLen","attr","_this3","_attr","setAttribute","removeAttribute","attrs","Function","getAttribute","prop","_prop","html","text","textContent","parent","parentNode","hasClassParent","parents","els","childNodes","hasClassChild","childrens","nextEl","nextSibling","next","siblings","prevEl","previousSibling","prev","time","opacity","css","isNum","animate","style","display","opactiy","hide","show","_this4","timer","setInterval","animateStatus","speed","cssVal","Number","Math","ceil","documentElement","scrollTop","body","maxScrollTop","scrollHeight","innerHeight","parseInt","floor","setVal","setScrollTop","clearInterval","curCss","setStyle","isCameCase","camelCases","AZ","_AZ","str","toLowerCase","_css","getComputedStyle","camelCase","currentStyle","cssName","remove","removeChild","warn","_this5","fragment","createDocumentFragment","tempEl","createElement","childHtml","tagName","newScript","attributes","appendChild","stopPropagation","cancelBubble","box","getBoundingClientRect","docElem","win","clientTop","clientLeft","pageYOffset","scrollLeft","pageXOffset","top","left","replaceInclude","include","includeTmpl","includeId","trimArr","id","replaceIncludeRegExp","run","created","_router","setRouter","mounted","checkRouterStatus","Render","ex","insertBefore","router","changeRoutereStatus"],"mappings":"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","file":"js/tmpl.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tmpl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tmpl\"] = factory();\n\telse\n\t\troot[\"Tmpl\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * \n * \t\t\ttmpl.js v1.0.5\n * \t\t\t(c) 2016-2017 Blue\n * \t\t\tReleased under the MIT License.\n * \t\t\thttps://github.com/azhanging/tmpl\n * \t\t\ttime:Wed Nov 08 2017 09:59:18 GMT+0800 (中国标准时间)\n * \t\t\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Tmpl\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Tmpl\"] = factory();\n\telse\n\t\troot[\"Tmpl\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //运行环境是否在浏览器\n\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*常用的方法*/\nvar Fn = function () {\n    function Fn() {\n        _classCallCheck(this, Fn);\n    }\n\n    _createClass(Fn, [{\n        key: 'isArr',\n        value: function isArr(array) {\n            return array instanceof Array || !!(array && array.length);\n        }\n    }, {\n        key: 'isObj',\n        value: function isObj(obj) {\n            return obj instanceof Object && !(obj instanceof Array) && obj !== null;\n        }\n    }, {\n        key: 'isFn',\n        value: function isFn(fn) {\n            return typeof fn === 'function';\n        }\n    }, {\n        key: 'isStr',\n        value: function isStr(string) {\n            return typeof string === 'string';\n        }\n    }, {\n        key: 'isNum',\n        value: function isNum(num) {\n            return typeof num === 'number' || !isNaN(num);\n        }\n    }, {\n        key: 'isEl',\n        value: function isEl(el) {\n            return !!(el && el.nodeType);\n        }\n    }, {\n        key: 'each',\n        value: function each(obj, cb) {\n            //遍历\n            var i = 0,\n                len = obj.length;\n            if (this.isArr(obj)) {\n                for (; i < len; i++) {\n                    cb(obj[i], i);\n                }\n            } else {\n                for (i in obj) {\n                    if (obj.hasOwnProperty(i)) cb(obj[i], i);\n                }\n            }\n        }\n    }, {\n        key: 'extend',\n        value: function extend(obj, options) {\n            //合并\n            this.each(options, function (option, key) {\n                obj[key] = option;\n            });\n            return obj;\n        }\n    }, {\n        key: 'cb',\n        value: function cb(_cb, context, args) {\n            //回调\n            args = args ? args : [];\n            this.isFn(_cb) ? _cb.apply(context, args) : null;\n        }\n    }, {\n        key: 'run',\n        value: function run(cb, context, args) {\n            //执行函数\n            this.cb(cb, context, args);\n        }\n    }, {\n        key: 'unique',\n        value: function unique(arr) {\n            /*去重*/\n            if (!this.isArr(arr)) return [];\n            var newArray = [];\n            this.each(arr, function (item, index) {\n                if (newArray.indexOf(item) === -1) {\n                    newArray.push(item);\n                }\n            });\n            return newArray;\n        }\n    }, {\n        key: 'trimArr',\n        value: function trimArr(arr) {\n            /*清空数组中空的值*/\n            var newArr = [];\n            this.each(arr, function (item, index) {\n                if (item !== '') {\n                    newArr.push(item);\n                }\n            });\n            return newArr;\n        }\n    }, {\n        key: 'copy',\n        value: function copy(obj) {\n            /*深拷贝*/\n            if (this.isObj(obj) || this.isArr(obj)) return JSON.parse(JSON.stringify(obj));\n            return null;\n        }\n    }, {\n        key: 'ajax',\n        value: function ajax(options) {\n            var _this = this;\n\n            //创建xhr\n            var xhr = new XMLHttpRequest();\n            //连接类型\n            options.type = options.type ? options.type.toUpperCase() : 'GET';\n            //超时\n            xhr.timeout = options.timeout && options.async !== false ? options.timeout : 0;\n\n            if (options.type === \"GET\") {\n\n                xhr.open(options.type, function () {\n\n                    return options.url.indexOf('?') ? options.url + _this.serialize(options.data) : options.url + '?' + _this.serialize(options.data);\n                }(), options.async);\n            } else if (options.type === \"POST\") {\n\n                xhr.open(options.type, options.url, options.async);\n            }\n            xhr.setRequestHeader('Content-Type', options.contentType ? options.contentType : 'application/x-www-form-urlencoded; charset=UTF-8');\n            //响应事件\n            xhr.addEventListener('readystatechange', function () {\n                var data = void 0;\n\n                try {\n                    data = JSON.parse(xhr.responseText);\n                } catch (e) {\n                    data = xhr.responseText;\n                }\n\n                if (xhr.readyState == 4) {\n                    if (xhr.status == 200) {\n                        _this.cb(options.success, _this, [data]);\n                    } else if (xhr.status >= 400) {\n                        _this.cb(options.error, _this, [data]);\n                    }\n                }\n            }, false);\n\n            //send指令\n            if (options.type === \"GET\") {\n\n                xhr.send();\n            } else if (options.type === \"POST\") {\n\n                xhr.send(this.serialize(options.data));\n            }\n        }\n    }, {\n        key: 'serialize',\n        value: function serialize(data) {\n            //初始化form数据\n            var result = '';\n\n            if (!this.isObj(data) || !this.isArr(data)) return '';\n\n            this.each(data, function (val, key) {\n\n                result = result + key + '=' + encodeURIComponent(val) + '&';\n            });\n\n            return result.substring(0, result.length - 1);\n        }\n    }, {\n        key: 'initRegExp',\n        value: function initRegExp(expr) {\n            var tm = '\\\\/*.?+$^[](){}|\\'\\\"';\n            this.each(tm, function (tmItem, index) {\n                expr = expr.replace(new RegExp('\\\\' + tmItem, 'g'), '\\\\' + tmItem);\n            });\n            return expr;\n        }\n    }]);\n\n    return Fn;\n}();\n\n//设置事件\n\n\nFn.prototype.on = function () {\n    if (!_in_browser2.default) return;\n    if (typeof document.addEventListener === 'function') {\n        return function on(el, type, cb) {\n            el.addEventListener(type, cb, false);\n        };\n    } else {\n        return function on(el, type, cb) {\n            el.attachEvent('on' + type, cb);\n        };\n    }\n}();\n\n//移除事件\nFn.prototype.off = function () {\n    if (!_in_browser2.default) return;\n    if (typeof document.removeEventListener === 'function') {\n        return function off(el, type, cb) {\n            el.addEventListener(type, cb, false);\n        };\n    } else {\n        return function off(el, type, cb) {\n            el.detachEvent('on' + type, cb);\n        };\n    }\n}();\n\nexports.default = new Fn();\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\r\n *  检测是否在浏览器的环境中 \r\n * */\n\nvar inBrowser = typeof window !== 'undefined';\n\nexports.default = inBrowser;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar FILTER_TRANFORM = /[\\b\\t\\f\\n\\r\\v]/g,\n    //过滤转义字符\n//script输出节点信息\nFILTER_SCRIPT = /[\\b\\f\\r\\v]/g,\n\n//script的表达是\nSCRIPT_TAG = /<script.*?>([\\s\\S]*?)<\\/script>/g,\n\n//转义双引号\nQUEST = /\"/g,\n\n//引入模板\nINCLUDE_ID = /<tmpl-include .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\n\n//引入模板\nINCLUDE_FILE = /<tmpl-include .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\n\n//错误的模板\nINCLUDE_ERROR = /<tmpl-include.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\n\n//嵌入block块\nBLOCK = /<tmpl-block .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-block>/g,\n\n//append_block\nBLOCK_APPEND = /^append:/,\n\n//inser_block\nBLOCK_INSETR = /^insert:/,\n\n//base路径解析\nEXTEND = /<tmpl-extend .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?\\/>/g;\n\nexports.FILTER_TRANFORM = FILTER_TRANFORM;\nexports.FILTER_SCRIPT = FILTER_SCRIPT;\nexports.SCRIPT_TAG = SCRIPT_TAG;\nexports.QUEST = QUEST;\nexports.INCLUDE_ID = INCLUDE_ID;\nexports.INCLUDE_FILE = INCLUDE_FILE;\nexports.INCLUDE_ERROR = INCLUDE_ERROR;\nexports.BLOCK = BLOCK;\nexports.BLOCK_APPEND = BLOCK_APPEND;\nexports.BLOCK_INSETR = BLOCK_INSETR;\nexports.EXTEND = EXTEND;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.setRegExp = setRegExp;\nexports.render = render;\nexports.replaceAlias = replaceAlias;\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _include = __webpack_require__(14);\n\nvar _include2 = _interopRequireDefault(_include);\n\nvar _block = __webpack_require__(11);\n\nvar _block2 = _interopRequireDefault(_block);\n\nvar _escapeCode = __webpack_require__(4);\n\nvar _escapeCode2 = _interopRequireDefault(_escapeCode);\n\nvar _tmplRegexp = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//由于模块接口中都是只读的，不能放在配置中；\n\n//html中的转义\n\n//include\n/*\r\n * 一堆解析模板的方法,tmpl的核心算法\r\n * */\n//运行环境是否在浏览器\nvar SCRIPT_REGEXP = void 0,\n\n/*原生script*/\nNATIVE_SCRIPT = void 0,\n\n/*输出script*/\nECHO_SCRIPT_REGEXP = void 0,\n\n//转义输出\nECHO_ESCAPE_REGEXP = void 0,\n\n/*替换输出script*/\nREPLACE_ECHO_SCRIPT_OPEN_TAG = void 0,\n\n//转义的开头表达式\nECHO_ESCAPE_REGEXP_OPEN_TAG = void 0,\n\n/*起始*/\nOPEN_TAG_REGEXP = void 0,\n\n/*闭合*/\nCLOSE_TAG_REGEXP = void 0;\n\n//设置正则\n\n//模板正则配置\n\n//extend\n\n//常用的方法\nfunction setRegExp() {\n\n    var open_tag = _fn2.default.initRegExp(this.config.open_tag),\n        close_tag = _fn2.default.initRegExp(this.config.close_tag);\n    //解析所有的表达式\n    SCRIPT_REGEXP = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '=[\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '-[\\\\\\s\\\\\\S]*?' + close_tag, 'g');\n    //原生的script\n    NATIVE_SCRIPT = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag, 'g');\n    //解析输出的表达式\n    ECHO_SCRIPT_REGEXP = new RegExp(open_tag + '=([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\n    //转义输出\n    ECHO_ESCAPE_REGEXP = new RegExp(open_tag + '-([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\n    //替换输出的开头表达式\n    REPLACE_ECHO_SCRIPT_OPEN_TAG = new RegExp(open_tag + '=', 'g');\n    //转义的开头表达式\n    ECHO_ESCAPE_REGEXP_OPEN_TAG = new RegExp(open_tag + '-', 'g');\n    //替换输出的开始表达式\n    OPEN_TAG_REGEXP = new RegExp(open_tag, 'g');\n    //替换输出的结束表达式\n    CLOSE_TAG_REGEXP = new RegExp(close_tag, 'g');\n}\n\n//初始化dom生成\nfunction render() {\n    //node中使用block\n    if (!_in_browser2.default) {\n        _block2.default.call(this);\n        /*清除遗留的block块*/\n        clearBlock.call(this);\n    }\n    /*重新检查依赖里面有没有引入的数据*/\n    replaceAlias.call(this);\n    /*替换include中的内容*/\n    _include2.default.call(this);\n    /*解析script*/\n    var script = this.template.match(SCRIPT_REGEXP) || [];\n    //设置占位\n    var replaceScript = setSeize.call(this),\n        echoString = replaceScript.split(/___SCRIPT___|___ECHO_SCRIPT___/),\n        //拆分占位\n    domString = [],\n        longString = echoString.length > script.length ? echoString : script;\n\n    //排除了运算和赋值表达式，处理直接输出的字符串\n    _fn2.default.each(echoString, function (_echoString, index) {\n        echoString[index] = \"___.push(\\\"\" + filterTransferredMeaning(_echoString) + \"\\\");\";\n    });\n\n    //这里是处理所有表达式内容\n    _fn2.default.each(script, function (_string, index) {\n        //恢复正则的索引位置\n        ECHO_SCRIPT_REGEXP.lastIndex = 0;\n        NATIVE_SCRIPT.lastIndex = 0;\n        ECHO_ESCAPE_REGEXP.lastIndex = 0;\n        //处理对应表达式\n        if (ECHO_SCRIPT_REGEXP.test(_string)) {\n            script[index] = _string.replace(REPLACE_ECHO_SCRIPT_OPEN_TAG, \"___.push(\").replace(CLOSE_TAG_REGEXP, \");\");\n        } else if (NATIVE_SCRIPT.test(_string)) {\n            script[index] = _string.replace(OPEN_TAG_REGEXP, '').replace(CLOSE_TAG_REGEXP, '');\n        } else if (ECHO_ESCAPE_REGEXP.test(_string)) {\n            script[index] = _string.replace(ECHO_ESCAPE_REGEXP_OPEN_TAG, \"___.push(_this_.escape(\").replace(CLOSE_TAG_REGEXP, \"));\");\n        }\n    });\n\n    _fn2.default.each(longString, function (_longString, index) {\n        //直接输出的dom结构\n        if (_fn2.default.isStr(echoString[index])) {\n            domString.push(echoString[index]);\n        }\n        //js的源码\n        if (_fn2.default.isStr(script[index])) {\n            domString.push(script[index].replace(_tmplRegexp.FILTER_TRANFORM, \"\"));\n        }\n    });\n\n    this.dom = 'var _this_ = this,___ = [];' + domString.join('') + 'return ___.join(\"\");';\n};\n\n/*替换别名的常量*/\nfunction replaceAlias() {\n    var _this = this;\n\n    var constructor = this.constructor;\n    _fn2.default.each(constructor.alias, function (replaceAlias, alias) {\n        _this.template = _this.template.replace(new RegExp(_fn2.default.initRegExp(alias), 'g'), replaceAlias);\n    });\n}\n\n/*清除多余的block块*/\nfunction clearBlock() {\n    this.template = this.template.replace(_tmplRegexp.EXTEND, '').replace(_tmplRegexp.BLOCK, '');\n}\n\n//设置占位\nfunction setSeize() {\n    var replaceScript = this.template.replace(ECHO_SCRIPT_REGEXP, '___ECHO_SCRIPT___').replace(SCRIPT_REGEXP, '___SCRIPT___');\n    return replaceScript;\n}\n\n//过滤string中的引号\nfunction filterTransferredMeaning(string) {\n    //检查script的标签\n    var scriptTags = string.match(_tmplRegexp.SCRIPT_TAG),\n        _string = string.replace(_tmplRegexp.SCRIPT_TAG, '___SCRIPT_TAG___').replace(_tmplRegexp.FILTER_TRANFORM, \"\").replace(_tmplRegexp.QUEST, '\\\\\\\"');\n\n    return !scriptTags ? _string : filterScriptTag(_string, scriptTags);\n}\n\n//过滤script标签\nfunction filterScriptTag(string, scriptTags) {\n    var splitScriptTag = string.split('___SCRIPT_TAG___'),\n        dom = [];\n    _fn2.default.each(splitScriptTag, function (script, index) {\n        dom.push(script);\n        if (scriptTags[index]) {\n            dom.push(scriptTags[index].replace(_tmplRegexp.QUEST, '\\\\\\\"').replace(_tmplRegexp.FILTER_SCRIPT, '').replace(/\\n/g, '\\\\n'));\n        }\n    });\n    return dom.join(\"\");\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n// html转义\nvar escapeCode = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#x27;\",\n    \"`\": \"&#x60;\"\n};\n\nexports.default = escapeCode;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//在node环境中使用需要用到fs获取文件\nvar fs = void 0; //运行环境是否在浏览器\n\n\nif (!_in_browser2.default) {\n    fs = require('fs');\n}\n\nexports.default = fs;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.setEvent = setEvent;\nexports.setInstance = setInstance;\nexports.setEl = setEl;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//初始化时间中的参数\n//常用的方法\nfunction setEvent() {\n\tif (this.constructor._event_) return;\n\tthis.constructor._event_ = {\n\t\teventEl: []\n\t};\n}\n\n//设置实例属性\n\n//运行环境是否在浏览器\nfunction setInstance(type) {\n\tvar _this = this;\n\n\tvar get = this.config[type];\n\tif (!_fn2.default.isObj(get)) {\n\t\treturn;\n\t}\n\t_fn2.default.each(get, function (_get, key) {\n\t\t_this[key] = _get;\n\t});\n}\n\n//设置this.template\nfunction setEl() {\n\tif (_in_browser2.default) {\n\t\ttry {\n\t\t\treturn this.getEl(this.config.template).innerHTML;\n\t\t} catch (e) {\n\t\t\treturn this.config.template;\n\t\t}\n\t} else {\n\t\treturn this.config.template;\n\t}\n}\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function () {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function get() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//兼容性IE8\n(function () {\n\t//兼容IE8中 的indexOf\n\tif (!Array.prototype.indexOf) {\n\t\tArray.prototype.indexOf = function (val) {\n\t\t\tfor (var index = 0, len = undefined.length; index < len; index++) {\n\t\t\t\tif (undefined[index] === val) {\n\t\t\t\t\treturn index;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn -1;\n\t\t};\n\t}\n\n\t/*只在浏览器环境使用*/\n\tif (_in_browser2.default && !document.getElementsByClassName) {\n\t\tdocument.getElementsByClassName = function (className, el) {\n\t\t\tvar children = (el || document).getElementsByTagName('*'),\n\t\t\t    elements = new Array();\n\t\t\tfor (var i = 0; i < children.length; i++) {\n\n\t\t\t\tvar child = children[i],\n\t\t\t\t    classNames = child.className.split(' ');\n\n\t\t\t\tfor (var j = 0; j < classNames.length; j++) {\n\t\t\t\t\tif (classNames[j] == className) {\n\t\t\t\t\t\telements.push(child);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn elements;\n\t\t};\n\t}\n})(); //运行环境是否在浏览器\nexports.default = true;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _init2 = __webpack_require__(15);\n\nvar _init3 = _interopRequireDefault(_init2);\n\nvar _render = __webpack_require__(16);\n\nvar _render2 = _interopRequireDefault(_render);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _dom = __webpack_require__(13);\n\nvar _dom2 = _interopRequireDefault(_dom);\n\nvar _config = __webpack_require__(12);\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _escapeCode = __webpack_require__(4);\n\nvar _escapeCode2 = _interopRequireDefault(_escapeCode);\n\nvar _set = __webpack_require__(6);\n\nvar _tmplRender = __webpack_require__(3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } //tmpl的初始化\n\n//处理模板数据的Render类\n\n//常用的类方法\n\n//Dom的操作\n\n//config配置\n\n//转义html\n\n//set\n\n//tmpl的render解析\n\n\nvar Tmpl = function (_Dom) {\n    _inherits(Tmpl, _Dom);\n\n    //Tmpl构造\n    function Tmpl(opts) {\n        _classCallCheck(this, Tmpl);\n\n        var _this = _possibleConstructorReturn(this, (Tmpl.__proto__ || Object.getPrototypeOf(Tmpl)).call(this));\n\n        _this.config = _fn2.default.extend(_fn2.default.copy(_config2.default), opts);\n        _this.init();\n        return _this;\n    }\n\n    //安装插件\n\n\n    _createClass(Tmpl, [{\n        key: 'init',\n\n\n        //初始化对象\n        value: function init() {\n            _init3.default.call(this);\n        }\n\n        //解析模板和数据\n\n    }, {\n        key: 'render',\n        value: function render(data) {\n            return new _render2.default({\n                tmpl: this,\n                data: data\n            });\n        }\n\n        //添加数据更新模板\n\n    }, {\n        key: 'update',\n        value: function update() {\n            this.template = _set.setEl.call(this);\n            _tmplRender.render.call(this);\n            return this;\n        }\n\n        /*回调*/\n\n    }, {\n        key: 'cb',\n        value: function cb(_cb) {\n            _fn2.default.cb(_cb, this);\n            return this;\n        }\n\n        /*转义*/\n\n    }, {\n        key: 'escape',\n        value: function escape(escapeVal) {\n            _fn2.default.each(_escapeCode2.default, function (item, key) {\n                escapeVal = escapeVal.replace(new RegExp(key, 'g'), item);\n            });\n            return escapeVal;\n        }\n    }], [{\n        key: 'install',\n        value: function install(constructor) {\n            constructor.install(this);\n        }\n\n        //直接解析\n\n    }, {\n        key: 'render',\n        value: function render(domStr, data) {\n            var tmpl = new this({\n                template: domStr\n            });\n\n            console.log(tmpl);\n\n            return tmpl.render(data).dom;\n        }\n    }]);\n\n    return Tmpl;\n}(_dom2.default);\n\n//常用的方法给tmpl的fn属性中\n\n\nexports.default = Tmpl;\nTmpl.prototype.fn = _fn2.default;\n\n//设置路径别名常量\nTmpl.alias = {};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(module) {\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; //兼容性处理\n\n//Tmpl 文件入口\n\n\nvar _compatibility = __webpack_require__(8);\n\nvar _compatibility2 = _interopRequireDefault(_compatibility);\n\nvar _tmpl = __webpack_require__(9);\n\nvar _tmpl2 = _interopRequireDefault(_tmpl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n(function (global, factory) {\n    if (typeof demand === 'function' && typeof demand.define === 'function') demand.define('tmpl', factory);else if (( false ? 'undefined' : _typeof(exports)) === 'object' && ( false ? 'undefined' : _typeof(module)) === 'object') module.exports = factory();else global ? global.Tmpl = factory() : {};\n})(typeof window !== 'undefined' ? window : undefined, function () {\n    _tmpl2.default.version = \"v1.0.5\";\n    return _tmpl2.default;\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module)))\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = replaceBlock;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _tmplRender = __webpack_require__(3);\n\nvar _fs = __webpack_require__(5);\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _tmplRegexp = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*替换Block块内容*/\n\n\n//在node环境中使用需要用到fs获取文件\n//常用的方法\nfunction replaceBlock() {\n    //先设置获取include的引入模板\n    _tmplRender.replaceAlias.call(this);\n\n    var baseFile = _fn2.default.unique(this.template.match(_tmplRegexp.EXTEND)),\n\n    /*只获取第一个base的名字*/\n    baseFileName = baseFile.toString().replace(_tmplRegexp.EXTEND, \"$2\").split(',')[0];\n\n    /*如果不存在block的内容，直接跳出*/\n    if (baseFileName === '') return;\n\n    //获取入口模板\n    var blockTmpl = _fn2.default.unique(this.template.match(_tmplRegexp.BLOCK));\n\n    //获取继承的模板\n    var layoutTmpl = _fs2.default.readFileSync(baseFileName, {\n        encoding: 'UTF8'\n    });\n\n    //从继承模板中筛选出block\n    var layoutTmplFindBlock = layoutTmpl.match(_tmplRegexp.BLOCK) || [],\n        layoutTmplFindBlockStr = layoutTmplFindBlock.toString(),\n        baseBlockName = _fn2.default.unique(layoutTmplFindBlockStr !== '' ? layoutTmplFindBlockStr.replace(_tmplRegexp.BLOCK, \"$2\").split(',') : []);\n\n    _fn2.default.each(baseBlockName, function (name, index) {\n\n        var block = layoutTmplFindBlock[index],\n            replaceBlock = new RegExp(_fn2.default.initRegExp(block), 'g');\n\n        var hasBlock = false;\n\n        _fn2.default.each(blockTmpl, function (blocktmpl, _index) {\n\n            _tmplRegexp.BLOCK.test(blocktmpl);\n\n            var _name = RegExp.$2,\n                blockContent = RegExp.$3;\n\n            //匹配到name的\n            if (name === _name) {\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent);\n                hasBlock = true;\n            } else if (_tmplRegexp.BLOCK_APPEND.test(_name) && name === _name.replace(_tmplRegexp.BLOCK_APPEND, '')) {\n                layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(_tmplRegexp.BLOCK, \"$3\") + blockContent);\n                hasBlock = true;\n            } else if (_tmplRegexp.BLOCK_INSETR.test(_name) && name === _name.replace(_tmplRegexp.BLOCK_INSETR, '')) {\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent + block.replace(_tmplRegexp.BLOCK, \"$3\"));\n                hasBlock = true;\n            }\n\n            _tmplRegexp.BLOCK.lastIndex = 0;\n        });\n\n        /*如果当前的block是在extends的模板中不存在，则显示默认里面的*/\n        if (!hasBlock) {\n            layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(_tmplRegexp.BLOCK, '$3'));\n        }\n    });\n\n    this.template = layoutTmpl;\n}\n\n//模板正则配置\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*配置信息*/\nvar config = {\n    open_tag: \"<%\", //OPEN_TAG\n    close_tag: \"%>\", //CLOSE_TAG,\n    template: \"\",\n    data: {},\n    methods: {}\n};\n\nexports.default = config;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); //运行环境是否在浏览器\n\n//常用的方法\n\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//绑定相关函数\nfunction bindFn(el, className, type) {\n\n    var _className = el.className.split(' ');\n\n    //替换\n    if (_fn2.default.isObj(className) && (type == 'replaceBind' || type == 'replaceClass')) {\n        _fn2.default.each(className, function (__className, key) {\n            var findIndex = _className.indexOf(key);\n            if (findIndex != -1) _className[findIndex] = __className;\n        });\n    } else {\n        //获得el中的className{type:string}\n        className = className.split(' ');\n\n        for (var index = 0; index < className.length; index++) {\n\n            var findIndex = _className.indexOf(className[index]);\n\n            if (type == 'bind' || type == 'addClass') {\n\n                if (findIndex == -1) _className.push(className[index]);\n            } else if (type == 'unbind' || type == 'removeClass') {\n\n                if (findIndex != -1) _className.splice(findIndex, 1);\n            }\n        }\n    }\n\n    el.className = _className.join(' ');\n\n    return this;\n}\n\n//设置主的委托事件\nfunction setEntrust(ele, type, cb) {\n    var _this = this;\n\n    _fn2.default.on(ele, type, function (event) {\n        var ev = event || window.event,\n            el = ev.target || ev.srcElement,\n            eventType = ele.event.events[type];\n\n        _fn2.default.each(eventType, function (_eventType, bind) {\n\n            if (!_this.hasClass(el, bind)) return;\n\n            _fn2.default.each(_eventType, function (cb, index) {\n\n                cb.apply(_this, [ev, el]);\n            });\n        });\n    });\n}\n\nvar Dom = function () {\n    function Dom() {\n        _classCallCheck(this, Dom);\n    }\n\n    _createClass(Dom, [{\n        key: 'getEl',\n        value: function getEl(exp) {\n\n            //获取节点\n            if (!exp) return null;\n\n            if (!this.fn.isFn(document.querySelector)) {\n                return document.getElementById(exp);\n            }\n\n            var getEl = document.querySelector(exp),\n                el = document.getElementById(exp);\n\n            return getEl !== null ? getEl : el ? el : null;\n        }\n    }, {\n        key: 'getEls',\n        value: function getEls(exp) {\n\n            //获取多个节点\n            if (!exp) return null;\n\n            if (!this.fn.isFn(document.querySelectorAll)) {\n                return document.getElementsByClassName(exp);\n            }\n\n            var getEls = document.querySelectorAll(exp),\n                el = document.getElementsByClassName(exp);\n\n            return getEls.length > 0 ? getEls : el ? el : [];\n        }\n        //绑定事件\n\n    }, {\n        key: 'on',\n        value: function on(ele, exp, type, cb) {\n            var _this2 = this;\n\n            if (arguments.length === 4) {\n\n                //初始化事件\n                if (this.constructor._event_.eventEl.indexOf(ele) == -1) {\n\n                    this.constructor._event_.eventEl.push(ele);\n\n                    ele.event = {\n                        eventType: [],\n                        events: {}\n                    };\n                }\n\n                if (ele.event.eventType.indexOf(type) == -1) {\n                    setEntrust.apply(this, [ele, type, cb]);\n                    //添加委托事件\n                    ele.event.eventType.push(type);\n                }\n\n                //查找现在的节点是否存在事件\n                if (!ele.event.events[type]) {\n                    ele.event.events[type] = {};\n                }\n\n                //当前的事件是否有设置\n                if (!ele.event.events[type][exp]) {\n                    ele.event.events[type][exp] = [];\n                }\n\n                //添加处理函数到事件列表中\n                ele.event.events[type][exp].push(cb);\n            } else if (arguments.length === 3) {\n                cb = type;\n                type = exp;\n                _fn2.default.on(ele, type, function (event) {\n                    cb.call(_this2, event);\n                });\n            }\n\n            return this;\n        }\n\n        //取消绑定事件\n\n    }, {\n        key: 'off',\n        value: function off(ele, exp, type, cb) {\n            if (arguments.length === 4) {\n                var eventIndex = this.events[type][exp].indexOf(cb);\n                if (eventIndex != -1) ele.events[type][exp].splice(eventIndex, 1);\n            } else if (arguments.length === 3) {\n                /*删除事件*/\n                _fn2.default.off(ele, type, cb);\n            }\n            return this;\n        }\n\n        //设置事件委托的class\n\n    }, {\n        key: 'bind',\n        value: function bind(el, _bind) {\n            bindFn.apply(this, [el, _bind, 'bind']);\n            return this;\n        }\n\n        //取消方法绑定\n\n    }, {\n        key: 'unbind',\n        value: function unbind(el, bind) {\n            bindFn.apply(this, [el, bind, 'unbind']);\n            return this;\n        }\n\n        //替换绑定\n\n    }, {\n        key: 'replaceBind',\n        value: function replaceBind(el, bind) {\n            bindFn.apply(this, [el, bind, 'replaceBind']);\n            return this;\n        }\n\n        //添加class\n\n    }, {\n        key: 'addClass',\n        value: function addClass(el, className) {\n            bindFn.apply(this, [el, className, 'addClass']);\n            return this;\n        }\n\n        //删除class\n\n    }, {\n        key: 'removeClass',\n        value: function removeClass(el, className) {\n            bindFn.apply(this, [el, className, 'removeClass']);\n            return this;\n        }\n\n        //替换className\n\n    }, {\n        key: 'replaceClass',\n        value: function replaceClass(el, className) {\n            bindFn.apply(this, [el, className, 'replaceClass']);\n            return this;\n        }\n\n        //是否存在class\n\n    }, {\n        key: 'hasClass',\n        value: function hasClass(el, className) {\n            try {\n                //节点中存在的className\n                var _className = el.className.split(' '),\n\n                //是否存在的className\n                hasClassName = className.split(' ');\n\n                var hasLen = 0;\n\n                for (var index = 0; index < hasClassName.length; index++) {\n                    if (_className.indexOf(hasClassName[index]) !== -1) ++hasLen;\n                }\n\n                if (hasLen === hasClassName.length) return true;\n\n                return false;\n            } catch (e) {\n\n                return false;\n            }\n        }\n\n        //获取属性\n\n    }, {\n        key: 'attr',\n        value: function attr(el, _attr2) {\n            var _this3 = this;\n\n            if (_fn2.default.isObj(_attr2)) {\n\n                _fn2.default.each(_attr2, function (_attr, key) {\n\n                    if (typeof _attr === 'boolean') {\n\n                        el[key] = _attr;\n\n                        el.setAttribute(key, _attr);\n                    } else if (_attr === '') {\n\n                        el.removeAttribute(key);\n                    } else {\n\n                        el.setAttribute(key, _attr);\n                    }\n                });\n\n                return this;\n            } else {\n\n                if (_attr2 instanceof Array) {\n\n                    var attrs = [];\n\n                    _fn2.default.each(_attr2, function (_attr, index) {\n\n                        attrs.push(_this3.attr(el, _attr));\n                    });\n\n                    return attrs;\n                } else if (/^bind-\\S*/.test(_attr2)) {\n\n                    return new Function('return ' + el.getAttribute(_attr2) + ';').apply(this);\n                } else {\n\n                    return el.getAttribute(_attr2);\n                }\n            }\n        }\n\n        //获取、设置prop属性\n\n    }, {\n        key: 'prop',\n        value: function prop(el, _prop2) {\n            //设置节点属性\n            if (_fn2.default.isObj(_prop2)) {\n                _fn2.default.each(_prop2, function (_prop, key) {\n\n                    el[key] = _prop;\n                });\n\n                return this;\n            } else if (_fn2.default.isStr(_prop2)) {\n                //获得节点属性\n\n                if (/^bind-\\S*/.test(_prop2)) return new Function('return ' + el[_prop2] + ';').apply(this);\n\n                return el[_prop2];\n            }\n        }\n\n        //获取、设置html\n\n    }, {\n        key: 'html',\n        value: function html(el, _html) {\n            if (_html === undefined) return el.innerHTML;\n            el.innerHTML = _html;\n            return this;\n        }\n\n        //获取、设置value\n\n    }, {\n        key: 'val',\n        value: function val(el, _val) {\n            if (_val === undefined) return el.value;\n            el.value = _val;\n            return this;\n        }\n\n        //获取、设置textContent\n\n    }, {\n        key: 'text',\n        value: function text(el, _text) {\n            if (_text === undefined) return el.textContent;\n            el.textContent = _text;\n            return this;\n        }\n\n        //查找符合的一个父级节点\n\n    }, {\n        key: 'parent',\n        value: function parent(el, hasClassName) {\n\n            var parent = el.parentNode;\n\n            if (parent === document || parent === null) return null;\n\n            if (!hasClassName) return parent;\n\n            if (this.hasClass(parent, hasClassName)) return parent;\n\n            return this.parent(parent, hasClassName);\n        }\n\n        //超找所有符合的父元素\n\n    }, {\n        key: 'parents',\n        value: function parents(el, hasClassName, hasClassParent) {\n\n            var parent = el.parentNode;\n\n            hasClassParent = hasClassParent ? hasClassParent : [];\n\n            if (parent === document || parent === null) return null;\n\n            if (this.hasClass(parent, hasClassName)) hasClassParent.push(parent);\n\n            this.parents(parent, hasClassName, hasClassParent);\n\n            return hasClassParent;\n        }\n\n        //获取直接的当个子节点\n\n    }, {\n        key: 'children',\n        value: function children(el) {\n            var els = [];\n            _fn2.default.each(el.childNodes, function (child) {\n                if (child.nodeType === 1) {\n                    els.push(child);\n                }\n            });\n            return els;\n        }\n    }, {\n        key: 'childrens',\n\n\n        //查找对应的class存在的节点\n        value: function childrens(el, className, hasClassChild) {\n            var i = 0;\n            hasClassChild = hasClassChild ? hasClassChild : [];\n            for (; i < el.children.length; i++) {\n                if (this.hasClass(el.children[i], className)) hasClassChild.push(el.children[i]);\n                this.childrens(el.children[i], className, hasClassChild);\n            }\n            return hasClassChild;\n        }\n\n        //下一个节点\n\n    }, {\n        key: 'next',\n        value: function next(el) {\n            var nextEl = el.nextSibling;\n            if (nextEl === null) return null;\n            if (nextEl.nodeType !== 1) return this.next(nextEl);\n            return nextEl;\n        }\n\n        //获取当前元素同级前的节点\n\n    }, {\n        key: 'nextAll',\n        value: function nextAll(el) {\n            return this.siblings(el, 'nextAll');\n        }\n\n        //获取当前元素同级后的节点\n\n    }, {\n        key: 'prevAll',\n        value: function prevAll(el) {\n            return this.siblings(el, 'prevAll');\n        }\n\n        //上一个节点\n\n    }, {\n        key: 'prev',\n        value: function prev(el) {\n            var prevEl = el.previousSibling;\n            if (prevEl === null) return null;\n            if (prevEl.nodeType !== 1) return this.prev(prevEl);\n            return prevEl;\n        }\n\n        //获取同级的兄弟节点\n\n    }, {\n        key: 'siblings',\n        value: function siblings(el, type) {\n            var parent = this.parent(el);\n\n            if (parent === null) return null;\n\n            var child = parent.children;\n\n            var siblings = [];\n\n            var i = 0;\n\n            if (type === 'nextAll') i = Array.prototype.indexOf.call(child, el);\n\n            for (; i < child.length; i++) {\n\n                if (child[i] !== el) siblings.push(child[i]);\n\n                if (type === 'prevAll' && child[i] === el) return siblings;\n            }\n\n            return siblings;\n        }\n\n        //显示\n\n    }, {\n        key: 'hide',\n        value: function hide(el, time) {\n\n            var opacity = this.css(el, 'opacity');\n\n            el.opacity = opacity ? opacity : 1;\n\n            _fn2.default.isNum(time) ? this.animate(el, {\n                opacity: 0\n            }, time, function () {\n                el.style.display = 'none';\n            }) : el.style.display = 'none';\n\n            return this;\n        }\n\n        //隐藏\n\n    }, {\n        key: 'show',\n        value: function show(el, time) {\n\n            var opactiy = el.opactiy ? el.opactiy : 100;\n\n            if (_fn2.default.isNum(time)) {\n\n                this.css(el, {\n                    opacity: 0\n                });\n\n                el.style.display = '';\n\n                this.animate(el, {\n                    opacity: opactiy\n                }, time);\n            } else {\n                el.style.display = '';\n            }\n            return this;\n        }\n\n        /*切换显示状态*/\n\n    }, {\n        key: 'toggle',\n        value: function toggle(el, time) {\n            if (el.style.display === '') this.hide(el, time);else this.show(el, time);\n        }\n\n        /*动画*/\n\n    }, {\n        key: 'animate',\n        value: function animate(el, _animate, time, cb) {\n            var _this4 = this;\n\n            if (!el) return;\n\n            el.timer = setInterval(function () {\n\n                var animateStatus = true;\n\n                _fn2.default.each(_animate, function (val, type) {\n\n                    var speed = 0,\n                        cssVal = 0;\n\n                    if (type === 'opacity') {\n\n                        cssVal = Number(_this4.css(el, 'opacity')) * 100;\n                    } else if (type === 'scrollTop') {\n\n                        cssVal = Math.ceil(document.documentElement.scrollTop || document.body.scrollTop);\n\n                        var maxScrollTop = Math.ceil(document.body.scrollHeight - window.innerHeight);\n\n                        if (val > maxScrollTop) {\n                            val = maxScrollTop;\n                            _animate['scrollTop'] = maxScrollTop;\n                        }\n                    } else {\n                        cssVal = parseInt(_this4.css(el, type));\n                    }\n\n                    speed = (val - cssVal) / 8;\n\n                    speed = speed > 0 ? Math.ceil(speed) : Math.floor(speed);\n\n                    var setVal = {};\n\n                    if (type === 'opacity') {\n                        setVal['opacity'] = (cssVal + speed) / 100;\n                        _this4.css(el, setVal);\n                    } else if (type === 'scrollTop') {\n                        _this4.setScrollTop(cssVal + speed);\n                    } else {\n                        setVal[type] = cssVal + speed + 'px';\n                        _this4.css(el, setVal);\n                    }\n\n                    if (parseInt(val) !== cssVal) {\n                        animateStatus = false;\n                    }\n                });\n\n                if (animateStatus) {\n                    clearInterval(el.timer);\n                    _fn2.default.cb(cb, _this4);\n                }\n            }, time / 60);\n        }\n\n        /*操作css*/\n\n    }, {\n        key: 'css',\n        value: function css(el, _css2) {\n            //获取css\n            if (_fn2.default.isStr(_css2)) {\n                return this.curCss(el, _css2);\n            } else if (_fn2.default.isObj(_css2)) {\n                //设置style\n                this.setStyle(el, _css2);\n                return this;\n            }\n        }\n\n        /*处理驼峰和非驼峰*/\n\n    }, {\n        key: 'camelCase',\n        value: function camelCase(text, isCameCase) {\n            var camelCases = void 0;\n\n            var AZ = /[A-Z]/g,\n                _AZ = /-[a-z]/g;\n\n            if (!_fn2.default.isStr(text)) return text;\n\n            camelCases = isCameCase ? text.match(_AZ) : text.match(AZ);\n\n            camelCases = camelCases ? camelCases : [];\n\n            _fn2.default.each(camelCases, function (str, index) {\n                if (isCameCase) text = text.replace(str, str.replace(/-/g, '').toUpperCase());else text = text.replace(str, '-' + str.toLowerCase());\n            });\n\n            return text;\n        }\n\n        /*获取计算好的值*/\n\n    }, {\n        key: 'curCss',\n        value: function curCss(el, css) {\n\n            var _css = void 0;\n\n            if (window.getComputedStyle) {\n\n                _css = this.camelCase(css, true);\n\n                return window.getComputedStyle(el, null)[_css];\n            } else if (document.documentElement.currentStyle) {\n\n                _css = this.camelCase(css, false);\n\n                return document.documentElement.currentStyle[_css];\n            }\n        }\n\n        /*设置css*/\n\n    }, {\n        key: 'setStyle',\n        value: function setStyle(el, css) {\n\n            _fn2.default.each(css, function (style, cssName) {\n\n                el.style[cssName] = style;\n            });\n        }\n\n        /*删除节点*/\n\n    }, {\n        key: 'remove',\n        value: function remove(el) {\n            try {\n                el.remove();\n            } catch (e) {\n                var parent = this.parent(el);\n                parent !== null ? parent.removeChild(el) : console.warn('element remove error!');\n            }\n            return this;\n        }\n\n        /*创建元素*/\n\n    }, {\n        key: 'create',\n        value: function create(dom) {\n            var _this5 = this;\n\n            var fragment = document.createDocumentFragment();\n\n            var tempEl = document.createElement('div');\n\n            tempEl.innerHTML = dom;\n\n            while (tempEl.childNodes.length !== 0) {\n\n                var child = tempEl.childNodes[0];\n\n                var childHtml = child.innerHTML;\n\n                if (child.tagName === 'SCRIPT') {\n                    (function () {\n\n                        var newScript = document.createElement('script');\n\n                        newScript.innerHTML = childHtml;\n\n                        _fn2.default.each(child.attributes, function (attr) {\n\n                            if (!attr) true;\n\n                            newScript.setAttribute(attr.name, attr.value);\n                        });\n\n                        _this5.remove(child);\n\n                        child = newScript;\n                    })();\n                }\n\n                fragment.appendChild(child);\n            }\n\n            return fragment;\n        }\n\n        /*插入节点*/\n\n    }, {\n        key: 'append',\n        value: function append(el, child) {\n\n            if (el.nodeType === 1) el.appendChild(child);else _fn2.default.getEl(el).appendChild(child);\n\n            return this;\n        }\n\n        //取消冒泡\n\n    }, {\n        key: 'preventDefault',\n        value: function preventDefault(event) {\n\n            var ev = event || window.event;\n\n            ev.stopPropagation();\n\n            ev.cancelBubble = true;\n        }\n\n        //offset\n\n    }, {\n        key: 'offset',\n        value: function offset(el) {\n\n            var box = el.getBoundingClientRect(),\n                docElem = document.documentElement,\n                body = document.body,\n                win = window,\n                clientTop = docElem.clientTop || body.clientTop || 0,\n                clientLeft = docElem.clientLeft || body.clientLeft || 0,\n                scrollTop = win.pageYOffset || docElem.scrollTop,\n                scrollLeft = win.pageXOffset || docElem.scrollLeft;\n\n            return {\n                top: box.top + scrollTop - clientTop,\n                left: box.left + scrollLeft - clientLeft\n            };\n        }\n\n        /*设置滚动条高度*/\n\n    }, {\n        key: 'setScrollTop',\n        value: function setScrollTop(top, animate) {\n\n            document.body.scrollTop = top;\n\n            document.documentElement.scrollTop = top;\n        }\n    }]);\n\n    return Dom;\n}();\n\nexports.default = Dom;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = replaceInclude;\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _fs = __webpack_require__(5);\n\nvar _fs2 = _interopRequireDefault(_fs);\n\nvar _tmplRegexp = __webpack_require__(2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/*替换include引入的模板*/\n\n//在node环境中使用需要用到fs获取文件\n//运行环境是否在浏览器\nfunction replaceInclude() {\n    var _this = this;\n\n    var include = function () {\n        if (_in_browser2.default) {\n            //在浏览器环境清空include[file]\n            return _tmplRegexp.INCLUDE_ID;\n        } else {\n            //在node环境清空include[name]\n            return _tmplRegexp.INCLUDE_FILE;\n        }\n    }();\n\n    var includeTmpl = void 0,\n        includeId = void 0;\n\n    //去重\n    includeTmpl = _fn2.default.unique(this.template.match(include));\n    includeId = includeTmpl.toString().replace(include, \"$2\").split(',');\n\n    //找不到include//查找的id和include匹配的数量必须相同\n    if (includeTmpl.length === 0 || _fn2.default.trimArr(includeId).length === 0 || !(includeTmpl.length > 0 && includeId.length > 0 && includeId.length === includeTmpl.length)) return;\n\n    _fn2.default.each(includeId, function (id, index) {\n        var replaceIncludeRegExp = new RegExp(_fn2.default.initRegExp(includeTmpl[index]), 'g');\n        /*浏览器环境下执行*/\n        if (_in_browser2.default) {\n            var el = _this.getEl(id);\n            if (el) _this.template = _this.template.replace(replaceIncludeRegExp, _this.html(el));\n            //找不到就清空原来的内容\n            else _this.template = _this.template.replace(replaceIncludeRegExp, '');\n        } else {\n            /*node环境下执行*/\n            try {\n                var tmpl = _fs2.default.readFileSync(id, {\n                    encoding: 'UTF8'\n                });\n\n                _this.template = _this.template.replace(replaceIncludeRegExp, tmpl);\n            } catch (e) {\n                //找不到就清空原来的内容\n                _this.template = _this.template.replace(replaceIncludeRegExp, '');\n            }\n        }\n    });\n\n    /*去掉重复的include*/\n    includeTmpl = _fn2.default.unique(this.template.match(include));\n\n    /*查找是否还有include的引入*/\n    if (includeTmpl.length > 0) replaceInclude.call(this);\n\n    /*清空错误的include*/\n    this.template = this.template.replace(_tmplRegexp.INCLUDE_ERROR, '');\n}\n\n//模板正则配置\n\n//常用的方法\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.default = init;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nvar _tmplRender = __webpack_require__(3);\n\nvar _set = __webpack_require__(6);\n\nvar _router = __webpack_require__(17);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//初始化设置\n//常用的方法\nfunction init() {\n\t//构建开始的钩子\n\t_fn2.default.run(this.config.create, this);\n\t//初始配置信息\n\tthis.template = _set.setEl.call(this);\n\t//初始化方法\n\t_set.setInstance.call(this, 'methods');\n\t//初始化数据\n\t_set.setInstance.call(this, 'data');\n\t//构建开始后的钩子\n\t_fn2.default.run(this.config.created, this);\n\t//初始化路由\n\t_router.setRouter.call(this);\n\t//查找模板\n\tif (this.template) {\n\t\t//创建配置的解析正则\n\t\t_tmplRender.setRegExp.call(this);\n\t\t//转化为js执行\n\t\t_tmplRender.render.call(this);\n\t}\n\t//初始化事件\n\t_set.setEvent.call(this);\n\t//设置事件\n\t_fn2.default.run(this.config.events, this);\n\t//所有完毕后的钩子\n\t_fn2.default.run(this.config.mounted, this);\n\t//检查是否存在路由的状态\n\t_router.checkRouterStatus.call(this);\n}\n\n//router相关\n\n//tmpl的render解析\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n        value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\r\nender代理实例,针对tmpl中的数据流\r\nn\n//运行环境是否在浏览器\n\n//常用的方法\n\n\nvar _in_browser = __webpack_require__(1);\n\nvar _in_browser2 = _interopRequireDefault(_in_browser);\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Render = function () {\n        function Render(opts) {\n                _classCallCheck(this, Render);\n\n                this.init(opts);\n        }\n        //初始render类\n\n\n        _createClass(Render, [{\n                key: 'init',\n                value: function init(opts) {\n\n                        this.tmpl = opts.tmpl;\n\n                        this.data = opts.data;\n\n                        //      console.log(this.tmpl.dom);\n\n                        this.dom = new Function('data', this.tmpl.dom).apply(this.tmpl, [this.data]);\n\n                        _in_browser2.default ? this.fragment = this.tmpl.create(this.dom) : null;\n                }\n                //在父节点中插入解析后的模板\n\n        }, {\n                key: 'appendTo',\n                value: function appendTo(el, cb) {\n\n                        var tmpl = this.tmpl,\n                            fn = tmpl.fn;\n\n                        if (el.nodeType === 1) el.appendChild(this.fragment);else tmpl.getEl(el).appendChild(this.fragment);\n\n                        fn.cb(cb, this.tmpl);\n\n                        return tmpl;\n                }\n                //在el子节点ex中插入解析后的模板\t\n\n        }, {\n                key: 'insertBefore',\n                value: function insertBefore(el, ex, cb) {\n\n                        var tmpl = this.tmpl,\n                            fn = tmpl.fn;\n\n                        tmpl.getEl(el).insertBefore(this.fragment, ex);\n\n                        fn.cb(cb, tmpl);\n\n                        return tmpl;\n                }\n        }]);\n\n        return Render;\n}();\n\nexports.default = Render;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.setRouter = setRouter;\nexports.checkRouterStatus = checkRouterStatus;\n\nvar _fn = __webpack_require__(0);\n\nvar _fn2 = _interopRequireDefault(_fn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//把路由实例挂靠到模板中\nfunction setRouter() {\n\tif (_fn2.default.isObj(this.config.router)) {\n\t\tthis.constructor.router = this.config.router;\n\t}\n}\n\n//检查路由状态\n/*路由相关*/\n\n//常用的方法\nfunction checkRouterStatus() {\n\t//获取路由\n\tvar router = this.constructor.router,\n\t    status = this.config.async;\n\tif (!(status === false) && router) {\n\t\trouter.changeRoutereStatus(true);\n\t}\n}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// js/tmpl.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 88f0ab6557ce558d0ded","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n/*常用的方法*/\r\nclass Fn {\r\n    isArr(array) {\r\n        return array instanceof Array || !!(array && array.length);\r\n    }\r\n\r\n    isObj(obj) {\r\n        return obj instanceof Object && !(obj instanceof Array) && obj !== null;\r\n    }\r\n\r\n    isFn(fn) {\r\n        return typeof fn === 'function';\r\n    }\r\n    isStr(string) {\r\n        return typeof string === 'string';\r\n    }\r\n\r\n    isNum(num) {\r\n        return typeof num === 'number' || !isNaN(num);\r\n    }\r\n\r\n    isEl(el) {\r\n        return !!(el && el.nodeType);\r\n    }\r\n\r\n    each(obj, cb) { //遍历\r\n        let i = 0,\r\n            len = obj.length;\r\n        if(this.isArr(obj)) {\r\n            for(; i < len; i++) {\r\n                cb(obj[i], i);\r\n            }\r\n        } else {\r\n            for(i in obj) {\r\n                if(obj.hasOwnProperty(i)) cb(obj[i], i);\r\n            }\r\n        }\r\n    }\r\n    \r\n    extend(obj, options) { //合并\r\n        this.each(options, (option, key) => {\r\n            obj[key] = option;\r\n        });\r\n        return obj;\r\n    }\r\n\r\n    cb(cb, context, args) { //回调\r\n        args = args ? args : [];\r\n        this.isFn(cb) ? (cb.apply(context, args)) : null;\r\n    }\r\n\r\n    run(cb, context, args) { //执行函数\r\n        this.cb(cb, context, args);\r\n    }\r\n\r\n    unique(arr) { /*去重*/\r\n        if(!this.isArr(arr)) return [];\r\n        let newArray = [];\r\n        this.each(arr, (item, index) => {\r\n            if(newArray.indexOf(item) === -1) {\r\n                newArray.push(item);\r\n            }\r\n        });\r\n        return newArray;\r\n    }\r\n\r\n    trimArr(arr) { /*清空数组中空的值*/\r\n        let newArr = [];\r\n        this.each(arr, (item, index) => {\r\n            if(item !== '') {\r\n                newArr.push(item);\r\n            }\r\n        });\r\n        return newArr;\r\n    }\r\n\r\n    copy(obj) { /*深拷贝*/\r\n        if(this.isObj(obj) || this.isArr(obj))\r\n            return JSON.parse(JSON.stringify(obj));\r\n        return null;\r\n    }\r\n\r\n    ajax(options) {\r\n        //创建xhr\r\n        const xhr = new XMLHttpRequest();\r\n        //连接类型\r\n        options.type = (options.type ? options.type.toUpperCase() : 'GET');\r\n        //超时\r\n        xhr.timeout = options.timeout && options.async !== false ? options.timeout : 0;\r\n\r\n        if(options.type === \"GET\") {\r\n\r\n            xhr.open(options.type, (() => {\r\n\r\n                return options.url.indexOf('?') ?\r\n                    options.url + this.serialize(options.data) :\r\n                    options.url + '?' + this.serialize(options.data);\r\n\r\n            })(), options.async);\r\n\r\n        } else if(options.type === \"POST\") {\r\n\r\n            xhr.open(options.type, options.url, options.async);\r\n\r\n        }\r\n        xhr.setRequestHeader('Content-Type', options.contentType ?\r\n            options.contentType :\r\n            'application/x-www-form-urlencoded; charset=UTF-8');\r\n        //响应事件\r\n        xhr.addEventListener('readystatechange', () => {\r\n            let data;\r\n\r\n            try {\r\n                data = JSON.parse(xhr.responseText);\r\n            } catch(e) {\r\n                data = xhr.responseText;\r\n            }\r\n\r\n            if(xhr.readyState == 4) {\r\n                if(xhr.status == 200) {\r\n                    this.cb(options.success, this, [data]);\r\n                } else if(xhr.status >= 400) {\r\n                    this.cb(options.error, this, [data]);\r\n                }\r\n            }\r\n        }, false);\r\n\r\n        //send指令\r\n        if(options.type === \"GET\") {\r\n\r\n            xhr.send();\r\n\r\n        } else if(options.type === \"POST\") {\r\n\r\n            xhr.send(this.serialize(options.data));\r\n\r\n        }\r\n    }\r\n\r\n    serialize(data) { //初始化form数据\r\n        let result = '';\r\n\r\n        if(!this.isObj(data) || !this.isArr(data)) return '';\r\n\r\n        this.each(data, (val, key) => {\r\n\r\n            result = result + key + '=' + encodeURIComponent(val) + '&';\r\n\r\n        });\r\n\r\n        return result.substring(0, result.length - 1);\r\n    }\r\n    \r\n    initRegExp(expr) {\r\n        const tm = '\\\\/*.?+$^[](){}|\\'\\\"';\r\n        this.each(tm, (tmItem, index) => {\r\n            expr = expr.replace(new RegExp('\\\\' + tmItem, 'g'), '\\\\' + tmItem);\r\n        });\r\n        return expr;\r\n    }\r\n}\r\n\r\n//设置事件\r\nFn.prototype.on = (function() {\r\n    if(!inBrowser) return;\r\n    if(typeof document.addEventListener === 'function') {\r\n        return function on(el, type, cb) {\r\n            el.addEventListener(type, cb, false);\r\n        }\r\n    } else {\r\n        return function on(el, type, cb) {\r\n            el.attachEvent('on' + type, cb);\r\n        };\r\n    }\r\n})();\r\n\r\n//移除事件\r\nFn.prototype.off = (function() {\r\n    if(!inBrowser) return;\r\n    if(typeof document.removeEventListener === 'function') {\r\n        return function off(el, type, cb) {\r\n            el.addEventListener(type, cb, false);\r\n        }\r\n    } else {\r\n        return function off(el, type, cb) {\r\n            el.detachEvent('on' + type, cb);\r\n        };\r\n    }\r\n})();\r\n\r\nexport default new Fn();\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/fn.js","/*\r\n *  检测是否在浏览器的环境中 \r\n * */\r\n\r\nconst inBrowser = typeof window !== 'undefined';\r\n\r\nexport default inBrowser;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/in_browser.js","const FILTER_TRANFORM = /[\\b\\t\\f\\n\\r\\v]/g, //过滤转义字符\r\n    //script输出节点信息\r\n    FILTER_SCRIPT = /[\\b\\f\\r\\v]/g,    \r\n    //script的表达是\r\n    SCRIPT_TAG = /<script.*?>([\\s\\S]*?)<\\/script>/g,\r\n    //转义双引号\r\n    QUEST = /\"/g,\r\n    //引入模板\r\n    INCLUDE_ID = /<tmpl-include .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\r\n    //引入模板\r\n    INCLUDE_FILE = /<tmpl-include .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\r\n    //错误的模板\r\n    INCLUDE_ERROR = /<tmpl-include.*?>([\\s\\S]*?)<\\/tmpl-include>/g,\r\n    //嵌入block块\r\n    BLOCK = /<tmpl-block .*?name=(\\'|\\\")([\\s\\S]*?)\\1.*?>([\\s\\S]*?)<\\/tmpl-block>/g,\r\n    //append_block\r\n    BLOCK_APPEND = /^append:/,\r\n    //inser_block\r\n    BLOCK_INSETR = /^insert:/,\r\n    //base路径解析\r\n    EXTEND = /<tmpl-extend .*?file=(\\'|\\\")([\\s\\S]*?)\\1.*?\\/>/g;\r\n\r\nexport {\r\n    FILTER_TRANFORM,\r\n    FILTER_SCRIPT,\r\n    SCRIPT_TAG,\r\n    QUEST,\r\n    INCLUDE_ID,\r\n    INCLUDE_FILE,\r\n    INCLUDE_ERROR,\r\n    BLOCK,\r\n    BLOCK_APPEND,\r\n    BLOCK_INSETR,\r\n    EXTEND\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/tmpl-regexp.js","/*\r\n * 一堆解析模板的方法,tmpl的核心算法\r\n * */\r\n//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n//include\r\nimport replaceInclude from './include';\r\n//extend\r\nimport replaceBlock from './block';\r\n//html中的转义\r\nimport escapeCode from './escapeCode';\r\n//模板正则配置\r\nimport {\r\n    FILTER_TRANFORM,\r\n    FILTER_SCRIPT,\r\n    SCRIPT_TAG,\r\n    QUEST,\r\n    BLOCK,\r\n    EXTEND\r\n} from './tmpl-regexp';\r\n\r\n\r\n//由于模块接口中都是只读的，不能放在配置中；\r\nlet SCRIPT_REGEXP,\r\n    /*原生script*/\r\n    NATIVE_SCRIPT,\r\n    /*输出script*/\r\n    ECHO_SCRIPT_REGEXP,\r\n    //转义输出\r\n    ECHO_ESCAPE_REGEXP,\r\n    /*替换输出script*/\r\n    REPLACE_ECHO_SCRIPT_OPEN_TAG,\r\n    //转义的开头表达式\r\n    ECHO_ESCAPE_REGEXP_OPEN_TAG,\r\n    /*起始*/\r\n    OPEN_TAG_REGEXP,\r\n    /*闭合*/\r\n    CLOSE_TAG_REGEXP;\r\n\r\n//设置正则\r\nexport function setRegExp() {\r\n\r\n    const open_tag = fn.initRegExp(this.config.open_tag),\r\n        close_tag = fn.initRegExp(this.config.close_tag);\r\n    //解析所有的表达式\r\n    SCRIPT_REGEXP = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '=[\\\\\\s\\\\\\S]*?' + close_tag + '|' + open_tag + '-[\\\\\\s\\\\\\S]*?' + close_tag, 'g');\r\n    //原生的script\r\n    NATIVE_SCRIPT = new RegExp(open_tag + '[^=-][\\\\\\s\\\\\\S]*?' + close_tag, 'g');\r\n    //解析输出的表达式\r\n    ECHO_SCRIPT_REGEXP = new RegExp(open_tag + '=([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\r\n    //转义输出\r\n    ECHO_ESCAPE_REGEXP = new RegExp(open_tag + '-([\\\\\\s\\\\\\S]*?)' + close_tag, 'g');\r\n    //替换输出的开头表达式\r\n    REPLACE_ECHO_SCRIPT_OPEN_TAG = new RegExp(open_tag + '=', 'g');\r\n    //转义的开头表达式\r\n    ECHO_ESCAPE_REGEXP_OPEN_TAG = new RegExp(open_tag + '-', 'g');\r\n    //替换输出的开始表达式\r\n    OPEN_TAG_REGEXP = new RegExp(open_tag, 'g');\r\n    //替换输出的结束表达式\r\n    CLOSE_TAG_REGEXP = new RegExp(close_tag, 'g');\r\n}\r\n\r\n//初始化dom生成\r\nexport function render() {\r\n    //node中使用block\r\n    if(!inBrowser) {\r\n        replaceBlock.call(this);\r\n        /*清除遗留的block块*/\r\n        clearBlock.call(this);\r\n    }\r\n    /*重新检查依赖里面有没有引入的数据*/\r\n    replaceAlias.call(this);\r\n    /*替换include中的内容*/\r\n    replaceInclude.call(this);\r\n    /*解析script*/\r\n    let script = this.template.match(SCRIPT_REGEXP) || [];\r\n    //设置占位\r\n    const replaceScript = setSeize.call(this),\r\n        echoString = replaceScript.split(/___SCRIPT___|___ECHO_SCRIPT___/), //拆分占位\r\n        domString = [],\r\n        longString = echoString.length > script.length ? echoString : script;\r\n\r\n    //排除了运算和赋值表达式，处理直接输出的字符串\r\n    fn.each(echoString, (_echoString, index) => {\r\n        echoString[index] = \"___.push(\\\"\" + filterTransferredMeaning(_echoString) + \"\\\");\";\r\n    });\r\n\r\n    //这里是处理所有表达式内容\r\n    fn.each(script, (_string, index) => {\r\n        //恢复正则的索引位置\r\n        ECHO_SCRIPT_REGEXP.lastIndex = 0;\r\n        NATIVE_SCRIPT.lastIndex = 0;\r\n        ECHO_ESCAPE_REGEXP.lastIndex = 0;\r\n        //处理对应表达式\r\n        if(ECHO_SCRIPT_REGEXP.test(_string)) {\r\n            script[index] = _string\r\n                .replace(REPLACE_ECHO_SCRIPT_OPEN_TAG, \"___.push(\")\r\n                .replace(CLOSE_TAG_REGEXP, \");\");\r\n        } else if(NATIVE_SCRIPT.test(_string)) {\r\n            script[index] = _string\r\n                .replace(OPEN_TAG_REGEXP, '')\r\n                .replace(CLOSE_TAG_REGEXP, '');\r\n        } else if(ECHO_ESCAPE_REGEXP.test(_string)) {\r\n            script[index] = _string\r\n                .replace(ECHO_ESCAPE_REGEXP_OPEN_TAG, \"___.push(_this_.escape(\")\r\n                .replace(CLOSE_TAG_REGEXP, \"));\");\r\n        }\r\n    });\r\n\r\n    fn.each(longString, (_longString, index) => {\r\n        //直接输出的dom结构\r\n        if(fn.isStr(echoString[index])) {\r\n            domString.push(echoString[index]);\r\n        }\r\n        //js的源码\r\n        if(fn.isStr(script[index])) {\r\n            domString.push(script[index].replace(FILTER_TRANFORM, \"\"));\r\n        }\r\n    });\r\n\r\n    this.dom = 'var _this_ = this,___ = [];' + domString.join('') + 'return ___.join(\"\");';\r\n\r\n};\r\n\r\n/*替换别名的常量*/\r\nexport function replaceAlias() {\r\n    const constructor = this.constructor;\r\n    fn.each(constructor.alias, (replaceAlias, alias) => {\r\n        this.template = this.template.replace(new RegExp(fn.initRegExp(alias), 'g'), replaceAlias);\r\n    });\r\n}\r\n\r\n/*清除多余的block块*/\r\nfunction clearBlock() {\r\n    this.template = this.template\r\n        .replace(EXTEND, '')\r\n        .replace(BLOCK, '');\r\n}\r\n\r\n//设置占位\r\nfunction setSeize() {\r\n    const replaceScript = this.template\r\n        .replace(ECHO_SCRIPT_REGEXP, '___ECHO_SCRIPT___')\r\n        .replace(SCRIPT_REGEXP, '___SCRIPT___');\r\n    return replaceScript;\r\n}\r\n\r\n//过滤string中的引号\r\nfunction filterTransferredMeaning(string) {\r\n    //检查script的标签\r\n    const scriptTags = string.match(SCRIPT_TAG),\r\n        _string = string\r\n        .replace(SCRIPT_TAG, '___SCRIPT_TAG___')\r\n        .replace(FILTER_TRANFORM, \"\")\r\n        .replace(QUEST, '\\\\\\\"');\r\n\r\n    return !scriptTags ? _string : (filterScriptTag(_string, scriptTags));\r\n}\r\n\r\n//过滤script标签\r\nfunction filterScriptTag(string, scriptTags) {\r\n    const splitScriptTag = string.split('___SCRIPT_TAG___'),\r\n        dom = [];\r\n    fn.each(splitScriptTag, (script, index) => {\r\n        dom.push(script);\r\n        if(scriptTags[index]) {\r\n            dom.push(scriptTags[index]\r\n                .replace(QUEST, '\\\\\\\"')\r\n                .replace(FILTER_SCRIPT, '')\r\n                .replace(/\\n/g, '\\\\n')\r\n            );\r\n        }\r\n    });\r\n    return dom.join(\"\");\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/tmpl-render.js","// html转义\r\nconst escapeCode = {\r\n    \"&\": \"&amp;\",\r\n    \"<\": \"&lt;\",\r\n    \">\": \"&gt;\",\r\n    '\"': \"&quot;\",\r\n    \"'\": \"&#x27;\",\r\n    \"`\": \"&#x60;\"\r\n}\r\n\r\nexport default escapeCode;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/escapeCode.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n\r\n//在node环境中使用需要用到fs获取文件\r\nlet fs;\r\n\r\nif(!inBrowser) {\r\n    fs = __non_webpack_require__('fs');\r\n}\r\n\r\nexport default fs;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/fs.js","//常用的方法\r\nimport fn from './fn';\r\n//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n\r\n//初始化时间中的参数\r\nexport function setEvent() {\r\n\tif(this.constructor._event_) return;\r\n\tthis.constructor._event_ = {\r\n\t    eventEl:[]\r\n\t}\r\n}\r\n\r\n//设置实例属性\r\nexport function setInstance(type) {\r\n\tconst get = this.config[type];\r\n\tif(!fn.isObj(get)) {\r\n\t\treturn;\r\n\t}\r\n\tfn.each(get, (_get, key) => {\r\n\t\tthis[key] = _get;\r\n\t});\r\n}\r\n\r\n//设置this.template\r\nexport function setEl(){\r\n\tif(inBrowser) {\r\n\t\ttry{\t\t\t\r\n\t\t\treturn this.getEl(this.config.template).innerHTML; \r\n\t\t}catch(e){\r\n\t\t\treturn this.config.template;\r\n\t\t}\r\n\t} else {\r\n\t\treturn this.config.template;\r\n\t}\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/set.js","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tif(!module.children) module.children = [];\r\n\t\tObject.defineProperty(module, \"loaded\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.l;\r\n\t\t\t}\r\n\t\t});\r\n\t\tObject.defineProperty(module, \"id\", {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function() {\r\n\t\t\t\treturn module.i;\r\n\t\t\t}\r\n\t\t});\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// (webpack)/buildin/module.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n\r\n//兼容性IE8\r\n(() => {\r\n\t//兼容IE8中 的indexOf\r\n\tif(!Array.prototype.indexOf) {\r\n\t\tArray.prototype.indexOf = (val) => {\r\n\t\t\tfor(let index = 0, len = this.length; index < len; index++) {\r\n\t\t\t\tif(this[index] === val) {\r\n\t\t\t\t\treturn index;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t}\r\n\r\n\t/*只在浏览器环境使用*/\r\n\tif(inBrowser && !document.getElementsByClassName) {\r\n\t\tdocument.getElementsByClassName = (className, el) => {\r\n\t\t\tconst children = (el || document).getElementsByTagName('*'),\r\n\t\t\t\telements = new Array();\r\n\t\t\tfor(let i = 0; i < children.length; i++) {\r\n\t\t\t    \r\n\t\t\t\tconst child = children[i],\r\n\t\t\t\t\tclassNames = child.className.split(' ');\r\n\t\t\t\t\t\r\n\t\t\t\tfor(let j = 0; j < classNames.length; j++) {\r\n\t\t\t\t\tif(classNames[j] == className) {\r\n\t\t\t\t\t\telements.push(child);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\treturn elements;\r\n\t\t};\r\n\t}\r\n})();\r\n\r\nexport default true;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/compatibility.js","//tmpl的初始化\r\nimport init from './init';\r\n//处理模板数据的Render类\r\nimport Render from './render';\r\n//常用的类方法\r\nimport fn from './fn';\r\n//Dom的操作\r\nimport Dom from './dom';\r\n//config配置\r\nimport config from './config';\r\n//转义html\r\nimport escapeCode from './escapeCode';\r\n//set\r\nimport { setEl } from './set';\r\n//tmpl的render解析\r\nimport {\r\n\trender\r\n} from './tmpl-render';\r\n\r\nexport default class Tmpl extends Dom {\r\n    //Tmpl构造\r\n    constructor(opts) {\r\n        super();\r\n        this.config = fn.extend(fn.copy(config), opts);\r\n        this.init();\r\n    }\r\n\r\n    //安装插件\r\n    static install(constructor) {\r\n        constructor.install(this);\r\n    }\r\n    \r\n    //直接解析\r\n    static render(domStr,data){\r\n    \tconst tmpl = new this({\r\n    \t\ttemplate:domStr\r\n    \t});\r\n    \t\r\n    \tconsole.log(tmpl);\r\n    \t\r\n    \treturn tmpl.render(data).dom;\r\n    }\r\n\r\n    //初始化对象\r\n    init() {\r\n        init.call(this);\r\n    }\r\n\r\n    //解析模板和数据\r\n    render(data) {\r\n        return new Render({\r\n            tmpl: this,\r\n            data: data\r\n        });\r\n    }\r\n\r\n    //添加数据更新模板\r\n    update() {\r\n        this.template = setEl.call(this);\r\n        render.call(this);\r\n        return this;\r\n    }\r\n\r\n    /*回调*/\r\n    cb(cb) {\r\n        fn.cb(cb, this);\r\n        return this;\r\n    }\r\n\r\n    /*转义*/\r\n    escape(escapeVal) {\r\n        fn.each(escapeCode, (item, key) => {\r\n            escapeVal = escapeVal.replace(new RegExp(key, 'g'), item);\r\n        });\r\n        return escapeVal;\r\n    }\r\n}\r\n\r\n//常用的方法给tmpl的fn属性中\r\nTmpl.prototype.fn = fn;\r\n\r\n//设置路径别名常量\r\nTmpl.alias = {};\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/tmpl.js","//兼容性处理\r\nimport compatibility from './tmpl/compatibility';\r\n//Tmpl 文件入口\r\nimport Tmpl from './tmpl/tmpl';\r\n\r\n(function(global, factory) {\r\n    if(typeof demand === 'function' && typeof demand.define === 'function')\r\n        demand.define('tmpl', factory);\r\n    else if(typeof exports === 'object' && typeof module === 'object')\r\n        module.exports = factory();\r\n    else\r\n        (global ? (global.Tmpl = factory()) : {});\r\n})(typeof window !== 'undefined' ? window : this, function() {\r\n    Tmpl.version = \"v1.0.5\";\r\n    return Tmpl;\r\n});\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","//常用的方法\r\nimport fn from './fn';\r\n\r\nimport {\r\n    replaceAlias\r\n} from './tmpl-render';\r\n\r\n//在node环境中使用需要用到fs获取文件\r\nimport fs from './fs';\r\n\r\n//模板正则配置\r\nimport {\r\n    BLOCK,\r\n    BLOCK_APPEND,\r\n    BLOCK_INSETR,\r\n    EXTEND\r\n} from './tmpl-regexp';\r\n\r\n/*替换Block块内容*/\r\nexport default function replaceBlock() {\r\n    //先设置获取include的引入模板\r\n    replaceAlias.call(this);\r\n\r\n    const baseFile = fn.unique(this.template.match(EXTEND)),\r\n        /*只获取第一个base的名字*/\r\n        baseFileName = baseFile.toString()\r\n        .replace(EXTEND, \"$2\")\r\n        .split(',')[0];\r\n\r\n    /*如果不存在block的内容，直接跳出*/\r\n    if(baseFileName === '') return;\r\n\r\n    //获取入口模板\r\n    const blockTmpl = fn.unique(this.template.match(BLOCK));\r\n\r\n    //获取继承的模板\r\n    let layoutTmpl = fs.readFileSync(baseFileName, {\r\n        encoding: 'UTF8'\r\n    });\r\n\r\n    //从继承模板中筛选出block\r\n    const layoutTmplFindBlock = layoutTmpl.match(BLOCK) || [],\r\n        layoutTmplFindBlockStr = layoutTmplFindBlock.toString(),\r\n        baseBlockName = fn.unique(layoutTmplFindBlockStr !== '' ? (layoutTmplFindBlockStr.replace(BLOCK, \"$2\")\r\n            .split(',')) : []);\r\n\r\n    fn.each(baseBlockName, (name, index) => {\r\n\r\n        const block = layoutTmplFindBlock[index],\r\n            replaceBlock = new RegExp(fn.initRegExp(block), 'g');\r\n\r\n        let hasBlock = false;\r\n\r\n        fn.each(blockTmpl, (blocktmpl, _index) => {\r\n\r\n            BLOCK.test(blocktmpl);\r\n\r\n            const _name = RegExp.$2,\r\n                blockContent = RegExp.$3;\r\n\r\n            //匹配到name的\r\n            if(name === _name) {\r\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent);\r\n                hasBlock = true;\r\n            } else if(BLOCK_APPEND.test(_name) && name === _name.replace(BLOCK_APPEND, '')) {\r\n                layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(BLOCK, \"$3\") + blockContent);\r\n                hasBlock = true;\r\n            } else if(BLOCK_INSETR.test(_name) && name === _name.replace(BLOCK_INSETR, '')) {\r\n                layoutTmpl = layoutTmpl.replace(replaceBlock, blockContent + block.replace(BLOCK, \"$3\"));\r\n                hasBlock = true;\r\n            }\r\n\r\n            BLOCK.lastIndex = 0;\r\n\r\n        });\r\n\r\n        /*如果当前的block是在extends的模板中不存在，则显示默认里面的*/\r\n        if(!hasBlock) {\r\n            layoutTmpl = layoutTmpl.replace(replaceBlock, block.replace(BLOCK, '$3'));\r\n        }\r\n    });\r\n\r\n    this.template = layoutTmpl;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/block.js","/*配置信息*/\r\nconst config = {\r\n    open_tag: \"<%\", //OPEN_TAG\r\n    close_tag: \"%>\", //CLOSE_TAG,\r\n    template: \"\",\r\n    data: {},\r\n    methods: {}\r\n};\r\n\r\nexport default config;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/config.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n\r\n//绑定相关函数\r\nfunction bindFn(el, className, type) {\r\n\r\n    const _className = el.className.split(' ');\r\n\r\n    //替换\r\n    if(fn.isObj(className) && (type == 'replaceBind' || type == 'replaceClass')) {\r\n        fn.each(className, (__className, key) => {\r\n            var findIndex = _className.indexOf(key);\r\n            if(findIndex != -1) _className[findIndex] = __className;\r\n        });\r\n    } else {\r\n        //获得el中的className{type:string}\r\n        className = className.split(' ');\r\n\r\n        for(var index = 0; index < className.length; index++) {\r\n\r\n            const findIndex = _className.indexOf(className[index]);\r\n\r\n            if(type == 'bind' || type == 'addClass') {\r\n\r\n                if(findIndex == -1) _className.push(className[index]);\r\n\r\n            } else if(type == 'unbind' || type == 'removeClass') {\r\n\r\n                if(findIndex != -1) _className.splice(findIndex, 1);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    el.className = _className.join(' ');\r\n\r\n    return this;\r\n}\r\n\r\n//设置主的委托事件\r\nfunction setEntrust(ele, type, cb) {\r\n    fn.on(ele, type, (event) => {\r\n        const ev = event || window.event,\r\n\r\n            el = ev.target || ev.srcElement,\r\n\r\n            eventType = ele.event.events[type];\r\n\r\n        fn.each(eventType, (_eventType, bind) => {\r\n\r\n            if(!this.hasClass(el, bind)) return;\r\n\r\n            fn.each(_eventType, (cb, index) => {\r\n\r\n                cb.apply(this, [ev, el]);\r\n\r\n            });\r\n        });\r\n\r\n    });\r\n    \r\n}\r\n\r\nclass Dom {\r\n    getEl(exp) { \r\n        \r\n        //获取节点\r\n        if(!exp) return null;\r\n        \r\n        if(!this.fn.isFn(document.querySelector)){            \r\n            return document.getElementById(exp);\r\n        }\r\n        \r\n        const getEl = document.querySelector(exp),\r\n            el = document.getElementById(exp);\r\n            \r\n        return getEl !== null ? getEl : (el ? el : null);\r\n    }\r\n\r\n    getEls(exp) {\r\n        \r\n        //获取多个节点\r\n        if(!exp) return null;\r\n        \r\n        if(!this.fn.isFn(document.querySelectorAll)){            \r\n            return document.getElementsByClassName(exp);\r\n        }\r\n        \r\n        const getEls = document.querySelectorAll(exp),\r\n            el = document.getElementsByClassName(exp);\r\n            \r\n        return getEls.length > 0 ? getEls : (el ? el : []);\r\n    }\r\n    //绑定事件\r\n    on(ele, exp, type, cb) {\r\n        if(arguments.length === 4) {\r\n\r\n            //初始化事件\r\n            if(this.constructor._event_.eventEl.indexOf(ele) == -1) {\r\n                \r\n                this.constructor._event_.eventEl.push(ele);\r\n                \r\n                ele.event = {\r\n                    eventType:[],\r\n                    events:{}\r\n                };    \r\n            }\r\n            \r\n            if(ele.event.eventType.indexOf(type) == -1) {\r\n                setEntrust.apply(this, [ele, type, cb]);\r\n                //添加委托事件\r\n                ele.event.eventType.push(type);\r\n            }\r\n\r\n            //查找现在的节点是否存在事件\r\n            if(!ele.event.events[type]) {\r\n                ele.event.events[type] = {};\r\n            }\r\n\r\n            //当前的事件是否有设置\r\n            if(!ele.event.events[type][exp]) {\r\n                ele.event.events[type][exp] = [];\r\n            }\r\n\r\n            //添加处理函数到事件列表中\r\n            ele.event.events[type][exp].push(cb);\r\n\r\n        } else if(arguments.length === 3) {\r\n            cb = type;\r\n            type = exp;\r\n            fn.on(ele, type, (event) => {\r\n                cb.call(this, event);\r\n            });\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    //取消绑定事件\r\n    off(ele, exp, type, cb) {\r\n        if(arguments.length === 4) {\r\n            var eventIndex = this.events[type][exp].indexOf(cb);\r\n            if(eventIndex != -1)\r\n                ele.events[type][exp].splice(eventIndex, 1);\r\n        } else if(arguments.length === 3) {\r\n            /*删除事件*/\r\n            fn.off(ele, type, cb);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    //设置事件委托的class\r\n    bind(el, bind) {\r\n        bindFn.apply(this, [el, bind, 'bind']);\r\n        return this;\r\n    }\r\n\r\n    //取消方法绑定\r\n    unbind(el, bind) {\r\n        bindFn.apply(this, [el, bind, 'unbind']);\r\n        return this;\r\n    }\r\n\r\n    //替换绑定\r\n    replaceBind(el, bind) {\r\n        bindFn.apply(this, [el, bind, 'replaceBind']);\r\n        return this;\r\n    }\r\n\r\n    //添加class\r\n    addClass(el, className) {\r\n        bindFn.apply(this, [el, className, 'addClass']);\r\n        return this;\r\n    }\r\n\r\n    //删除class\r\n    removeClass(el, className) {\r\n        bindFn.apply(this, [el, className, 'removeClass']);\r\n        return this;\r\n    }\r\n\r\n    //替换className\r\n    replaceClass(el, className) {\r\n        bindFn.apply(this, [el, className, 'replaceClass']);\r\n        return this;\r\n    }\r\n\r\n    //是否存在class\r\n    hasClass(el, className) {    \r\n        try {\r\n            //节点中存在的className\r\n            const _className = el.className.split(' '),\r\n                //是否存在的className\r\n                hasClassName = className.split(' ');\r\n\r\n            let hasLen = 0;\r\n\r\n            for(var index = 0; index < hasClassName.length; index++) {\r\n                if(_className.indexOf(hasClassName[index]) !== -1) ++hasLen;\r\n            }\r\n\r\n            if(hasLen === hasClassName.length) return true;\r\n\r\n            return false;\r\n\r\n        } catch(e) {\r\n\r\n            return false;\r\n\r\n        }\r\n    }\r\n\r\n    //获取属性\r\n    attr(el, attr) {\r\n        if(fn.isObj(attr)) {\r\n\r\n            fn.each(attr, (_attr, key) => {\r\n\r\n                if(typeof _attr === 'boolean') {\r\n\r\n                    el[key] = _attr;\r\n\r\n                    el.setAttribute(key, _attr);\r\n\r\n                } else if(_attr === '') {\r\n\r\n                    el.removeAttribute(key);\r\n\r\n                } else {\r\n\r\n                    el.setAttribute(key, _attr);\r\n\r\n                }\r\n            });\r\n\r\n            return this;\r\n\r\n        } else {\r\n\r\n            if(attr instanceof Array) {\r\n\r\n                var attrs = [];\r\n\r\n                fn.each(attr, (_attr, index) => {\r\n\r\n                    attrs.push(this.attr(el, _attr));\r\n\r\n                });\r\n\r\n                return attrs;\r\n\r\n            } else if(/^bind-\\S*/.test(attr)) {\r\n\r\n                return new Function('return ' + el.getAttribute(attr) + ';')\r\n                    .apply(this);\r\n\r\n            } else {\r\n\r\n                return el.getAttribute(attr);\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    //获取、设置prop属性\r\n    prop(el, prop) {\r\n        //设置节点属性\r\n        if(fn.isObj(prop)) {\r\n            fn.each(prop, (_prop, key) => {\r\n\r\n                el[key] = _prop;\r\n\r\n            });\r\n\r\n            return this;\r\n\r\n        } else if(fn.isStr(prop)) { //获得节点属性\r\n\r\n            if(/^bind-\\S*/.test(prop))\r\n\r\n                return new Function('return ' + el[prop] + ';')\r\n                    .apply(this);\r\n\r\n            return el[prop];\r\n\r\n        }\r\n    }\r\n\r\n    //获取、设置html\r\n    html(el, html) {\r\n        if(html === undefined) return el.innerHTML;\r\n        el.innerHTML = html;\r\n        return this;\r\n    }\r\n\r\n    //获取、设置value\r\n    val(el, val) {\r\n        if(val === undefined) return el.value;\r\n        el.value = val;\r\n        return this;\r\n    }\r\n\r\n    //获取、设置textContent\r\n    text(el, text) {\r\n        if(text === undefined) return el.textContent;\r\n        el.textContent = text;\r\n        return this;\r\n    }\r\n\r\n    //查找符合的一个父级节点\r\n    parent(el, hasClassName) {\r\n\r\n        var parent = el.parentNode;\r\n\r\n        if(parent === document || parent === null) return null;\r\n\r\n        if(!hasClassName) return parent;\r\n\r\n        if(this.hasClass(parent, hasClassName)) return parent;\r\n\r\n        return this.parent(parent, hasClassName);\r\n\r\n    }\r\n\r\n    //超找所有符合的父元素\r\n    parents(el, hasClassName, hasClassParent) {\r\n\r\n        var parent = el.parentNode;\r\n\r\n        hasClassParent = (hasClassParent ? hasClassParent : []);\r\n\r\n        if(parent === document || parent === null) return null;\r\n\r\n        if(this.hasClass(parent, hasClassName)) hasClassParent.push(parent);\r\n\r\n        this.parents(parent, hasClassName, hasClassParent);\r\n\r\n        return hasClassParent;\r\n    }\r\n\r\n    //获取直接的当个子节点\r\n    children(el) {\r\n        const els = [];\r\n        fn.each(el.childNodes, (child) => {\r\n            if(child.nodeType === 1) {\r\n                els.push(child);\r\n            }\r\n        });\r\n        return els;\r\n    };\r\n\r\n    //查找对应的class存在的节点\r\n    childrens(el, className, hasClassChild) {\r\n        var i = 0;\r\n        hasClassChild = (hasClassChild ? hasClassChild : []);\r\n        for(; i < el.children.length; i++) {\r\n            if(this.hasClass(el.children[i], className)) hasClassChild.push(el.children[i]);\r\n            this.childrens(el.children[i], className, hasClassChild);\r\n        }\r\n        return hasClassChild;\r\n    }\r\n\r\n    //下一个节点\r\n    next(el) {\r\n        const nextEl = el.nextSibling;\r\n        if(nextEl === null) return null;\r\n        if(nextEl.nodeType !== 1) return this.next(nextEl);\r\n        return nextEl;\r\n    }\r\n\r\n    //获取当前元素同级前的节点\r\n    nextAll(el) {\r\n        return this.siblings(el, 'nextAll');\r\n    }\r\n\r\n    //获取当前元素同级后的节点\r\n    prevAll(el) {\r\n        return this.siblings(el, 'prevAll');\r\n    }\r\n\r\n    //上一个节点\r\n    prev(el) {\r\n        const prevEl = el.previousSibling;\r\n        if(prevEl === null) return null;\r\n        if(prevEl.nodeType !== 1) return this.prev(prevEl);\r\n        return prevEl;\r\n    }\r\n\r\n    //获取同级的兄弟节点\r\n    siblings(el, type) {\r\n        const parent = this.parent(el);\r\n\r\n        if(parent === null) return null;\r\n\r\n        const child = parent.children;\r\n\r\n        const siblings = [];\r\n\r\n        let i = 0;\r\n\r\n        if(type === 'nextAll')\r\n            i = Array.prototype.indexOf.call(child, el);\r\n\r\n        for(; i < child.length; i++) {\r\n\r\n            if(child[i] !== el) siblings.push(child[i]);\r\n\r\n            if(type === 'prevAll' && child[i] === el) return siblings;\r\n\r\n        }\r\n\r\n        return siblings;\r\n    }\r\n\r\n    //显示\r\n    hide(el, time) {\r\n\r\n        var opacity = this.css(el, 'opacity');\r\n\r\n        el.opacity = opacity ? opacity : 1;\r\n\r\n        fn.isNum(time) ? (this.animate(el, {\r\n            opacity: 0\r\n        }, time, () => {\r\n            el.style.display = 'none';\r\n        })) : el.style.display = 'none';\r\n\r\n        return this;\r\n    }\r\n\r\n    //隐藏\r\n    show(el, time) {\r\n\r\n        var opactiy = el.opactiy ? el.opactiy : 100;\r\n\r\n        if(fn.isNum(time)) {\r\n\r\n            this.css(el, {\r\n                opacity: 0\r\n            });\r\n\r\n            el.style.display = '';\r\n\r\n            this.animate(el, {\r\n                opacity: opactiy\r\n            }, time);\r\n\r\n        } else {\r\n            el.style.display = '';\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*切换显示状态*/\r\n    toggle(el, time) {\r\n        if(el.style.display === '') this.hide(el, time);\r\n        else this.show(el, time);\r\n    }\r\n\r\n    /*动画*/\r\n    animate(el, animate, time, cb) {\r\n\r\n        if(!el) return;\r\n\r\n        el.timer = setInterval(() => {\r\n\r\n            let animateStatus = true;\r\n\r\n            fn.each(animate, (val, type) => {\r\n\r\n                let speed = 0,\r\n                    cssVal = 0;\r\n\r\n                if(type === 'opacity') {\r\n\r\n                    cssVal = Number(this.css(el, 'opacity')) * 100;\r\n\r\n                } else if(type === 'scrollTop') {\r\n\r\n                    cssVal = Math.ceil(document.documentElement.scrollTop || document.body.scrollTop);\r\n\r\n                    let maxScrollTop = Math.ceil(document.body.scrollHeight - window.innerHeight);\r\n\r\n                    if(val > maxScrollTop) {\r\n                        val = maxScrollTop;\r\n                        animate['scrollTop'] = maxScrollTop;\r\n                    }\r\n\r\n                } else {\r\n                    cssVal = parseInt(this.css(el, type));\r\n                }\r\n\r\n                speed = (val - cssVal) / 8;\r\n\r\n                speed = speed > 0 ? Math.ceil(speed) : Math.floor(speed);\r\n\r\n                const setVal = {};\r\n\r\n                if(type === 'opacity') {\r\n                    setVal['opacity'] = (cssVal + speed) / 100;\r\n                    this.css(el, setVal);\r\n                } else if(type === 'scrollTop') {\r\n                    this.setScrollTop(cssVal + speed);\r\n                } else {\r\n                    setVal[type] = cssVal + speed + 'px';\r\n                    this.css(el, setVal);\r\n                }\r\n\r\n                if(parseInt(val) !== cssVal) {\r\n                    animateStatus = false;\r\n                }\r\n            });\r\n\r\n            if(animateStatus) {\r\n                clearInterval(el.timer);\r\n                fn.cb(cb, this);\r\n            }\r\n\r\n        }, time / 60);\r\n    }\r\n\r\n    /*操作css*/\r\n    css(el, css) {\r\n        //获取css\r\n        if(fn.isStr(css)) {\r\n            return this.curCss(el, css);\r\n        } else if(fn.isObj(css)) {\r\n            //设置style\r\n            this.setStyle(el, css);\r\n            return this;\r\n        }\r\n    }\r\n\r\n    /*处理驼峰和非驼峰*/\r\n    camelCase(text, isCameCase) {\r\n        let camelCases;\r\n\r\n        const AZ = /[A-Z]/g,\r\n            _AZ = /-[a-z]/g;\r\n\r\n        if(!fn.isStr(text)) return text;\r\n\r\n        camelCases = isCameCase ? text.match(_AZ) : text.match(AZ);\r\n\r\n        camelCases = camelCases ? camelCases : [];\r\n\r\n        fn.each(camelCases, (str, index) => {\r\n            if(isCameCase) text = text.replace(str, str.replace(/-/g, '')\r\n                .toUpperCase());\r\n            else text = text.replace(str, '-' + str.toLowerCase());\r\n        });\r\n\r\n        return text;\r\n    }\r\n\r\n    /*获取计算好的值*/\r\n    curCss(el, css) {\r\n\r\n        let _css;\r\n\r\n        if(window.getComputedStyle) {\r\n\r\n            _css = this.camelCase(css, true);\r\n\r\n            return window.getComputedStyle(el, null)[_css];\r\n\r\n        } else if(document.documentElement.currentStyle) {\r\n\r\n            _css = this.camelCase(css, false);\r\n\r\n            return document.documentElement.currentStyle[_css];\r\n\r\n        }\r\n    }\r\n\r\n    /*设置css*/\r\n    setStyle(el, css) {\r\n\r\n        fn.each(css, (style, cssName) => {\r\n\r\n            el.style[cssName] = style;\r\n\r\n        });\r\n    }\r\n\r\n    /*删除节点*/\r\n    remove(el) {\r\n        try {\r\n            el.remove();\r\n        } catch(e) {\r\n            const parent = this.parent(el);\r\n            parent !== null ? parent.removeChild(el) : (console.warn('element remove error!'));\r\n        }\r\n        return this;\r\n    }\r\n\r\n    /*创建元素*/\r\n    create(dom) {\r\n\r\n        const fragment = document.createDocumentFragment();\r\n\r\n        const tempEl = document.createElement('div');\r\n\r\n        tempEl.innerHTML = dom;\r\n\r\n        while(tempEl.childNodes.length !== 0) {\r\n\r\n            let child = tempEl.childNodes[0];\r\n\r\n            const childHtml = child.innerHTML;\r\n\r\n            if(child.tagName === 'SCRIPT') {\r\n\r\n                const newScript = document.createElement('script');\r\n\r\n                newScript.innerHTML = childHtml;\r\n\r\n                fn.each(child.attributes, (attr) => {\r\n\r\n                    if(!attr) true;\r\n\r\n                    newScript.setAttribute(attr.name, attr.value);\r\n\r\n                });\r\n\r\n                this.remove(child);\r\n\r\n                child = newScript;\r\n\r\n            }\r\n\r\n            fragment.appendChild(child);\r\n\r\n        }\r\n\r\n        return fragment;\r\n    }\r\n\r\n    /*插入节点*/\r\n    append(el, child) {\r\n\r\n        if(el.nodeType === 1) el.appendChild(child);\r\n\r\n        else fn.getEl(el)\r\n            .appendChild(child);\r\n\r\n        return this;\r\n    }\r\n\r\n    //取消冒泡\r\n    preventDefault(event) {\r\n\r\n        const ev = event || window.event;\r\n\r\n        ev.stopPropagation();\r\n\r\n        ev.cancelBubble = true;\r\n\r\n    }\r\n\r\n    //offset\r\n    offset(el) {\r\n\r\n        const box = el.getBoundingClientRect(),\r\n\r\n            docElem = document.documentElement,\r\n\r\n            body = document.body,\r\n\r\n            win = window,\r\n\r\n            clientTop = docElem.clientTop || body.clientTop || 0,\r\n\r\n            clientLeft = docElem.clientLeft || body.clientLeft || 0,\r\n\r\n            scrollTop = win.pageYOffset || docElem.scrollTop,\r\n\r\n            scrollLeft = win.pageXOffset || docElem.scrollLeft;\r\n\r\n        return {\r\n            top: box.top + scrollTop - clientTop,\r\n            left: box.left + scrollLeft - clientLeft\r\n        };\r\n    }\r\n\r\n    /*设置滚动条高度*/\r\n    setScrollTop(top, animate) {\r\n\r\n        document.body.scrollTop = top;\r\n\r\n        document.documentElement.scrollTop = top;\r\n\r\n    }\r\n}\r\n\r\nexport default Dom;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/dom.js","//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n//在node环境中使用需要用到fs获取文件\r\nimport fs from './fs';\r\n\r\n//模板正则配置\r\nimport {\r\n    INCLUDE_ID,\r\n    INCLUDE_FILE,\r\n    INCLUDE_ERROR,\r\n} from './tmpl-regexp';\r\n\r\n/*替换include引入的模板*/\r\nexport default function replaceInclude() {\r\n    const include = (() => {\r\n        if(inBrowser) {\r\n            //在浏览器环境清空include[file]\r\n            return INCLUDE_ID;\r\n        } else {\r\n            //在node环境清空include[name]\r\n            return INCLUDE_FILE;\r\n        }\r\n    })();\r\n\r\n    let includeTmpl, includeId;\r\n\r\n    //去重\r\n    includeTmpl = fn.unique(this.template.match(include));\r\n    includeId = includeTmpl.toString().replace(include, \"$2\").split(',');\r\n\r\n    //找不到include//查找的id和include匹配的数量必须相同\r\n    if(includeTmpl.length === 0 || fn.trimArr(includeId)\r\n        .length === 0 ||\r\n        !(includeTmpl.length > 0 &&\r\n            includeId.length > 0 &&\r\n            includeId.length === includeTmpl.length\r\n        )) return;\r\n\r\n    fn.each(includeId, (id, index) => {\r\n        const replaceIncludeRegExp = new RegExp(fn.initRegExp(includeTmpl[index]), 'g');\r\n        /*浏览器环境下执行*/\r\n        if(inBrowser) {\r\n            const el = this.getEl(id);\r\n            if(el) this.template = this.template.replace(replaceIncludeRegExp, this.html(el));\r\n            //找不到就清空原来的内容\r\n            else this.template = this.template.replace(replaceIncludeRegExp, '');\r\n        } else {\r\n            /*node环境下执行*/\r\n            try {\r\n                const tmpl = fs.readFileSync(id, {\r\n                    encoding: 'UTF8'\r\n                });\r\n\r\n                this.template = this.template.replace(replaceIncludeRegExp, tmpl);\r\n\r\n            } catch(e) {\r\n                //找不到就清空原来的内容\r\n                this.template = this.template.replace(replaceIncludeRegExp, '');\r\n            }\r\n        }\r\n    });\r\n\r\n    /*去掉重复的include*/\r\n    includeTmpl = fn.unique(this.template.match(include));\r\n\r\n    /*查找是否还有include的引入*/\r\n    if(includeTmpl.length > 0) replaceInclude.call(this);\r\n\r\n    /*清空错误的include*/\r\n    this.template = this.template.replace(INCLUDE_ERROR, '');\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/include.js","//常用的方法\r\nimport fn from './fn';\r\n//tmpl的render解析\r\nimport {\r\n\tsetRegExp,\r\n\trender\r\n} from './tmpl-render';\r\n//初始化设置\r\nimport {\r\n\tsetInstance,\r\n\tsetEvent,\r\n\tsetEl\r\n} from './set';\r\n\r\n//router相关\r\nimport {\r\n\tsetRouter,\r\n\tcheckRouterStatus\r\n} from './router';\r\n\r\nexport default function init() {\r\n    //构建开始的钩子\r\n    fn.run(this.config.create, this);\r\n\t//初始配置信息\r\n\tthis.template = setEl.call(this);\r\n\t//初始化方法\r\n\tsetInstance.call(this, 'methods');\r\n\t//初始化数据\r\n\tsetInstance.call(this, 'data');\r\n\t//构建开始后的钩子\r\n    fn.run(this.config.created, this);\r\n\t//初始化路由\r\n\tsetRouter.call(this);\r\n\t//查找模板\r\n\tif(this.template) {\r\n\t\t//创建配置的解析正则\r\n\t\tsetRegExp.call(this);\r\n\t\t//转化为js执行\r\n\t\trender.call(this);\r\n\t}\r\n\t//初始化事件\r\n\tsetEvent.call(this);\r\n\t//设置事件\r\n\tfn.run(this.config.events, this);\r\n\t//所有完毕后的钩子\r\n\tfn.run(this.config.mounted, this);\r\n\t//检查是否存在路由的状态\r\n\tcheckRouterStatus.call(this);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/init.js","/*\r\n *  Render代理实例,针对tmpl中的数据流\r\n * */\r\n\r\n//运行环境是否在浏览器\r\nimport inBrowser from './in_browser';\r\n//常用的方法\r\nimport fn from './fn';\r\n\r\nclass Render {\r\n    constructor(opts) {\r\n\r\n        this.init(opts);\r\n\r\n    }\r\n    //初始render类\r\n    init(opts) {\r\n\r\n        this.tmpl = opts.tmpl;\r\n\r\n        this.data = opts.data;\r\n        \r\n//      console.log(this.tmpl.dom);\r\n\r\n        this.dom = new Function('data', this.tmpl.dom).apply(this.tmpl, [this.data]);\r\n\r\n        inBrowser ? (this.fragment = this.tmpl.create(this.dom)) : null;\r\n\r\n    }\r\n    //在父节点中插入解析后的模板\r\n    appendTo(el, cb) {\r\n\r\n        const tmpl = this.tmpl,\r\n            fn = tmpl.fn;\r\n\r\n        if(el.nodeType === 1) el.appendChild(this.fragment);\r\n\r\n        else tmpl.getEl(el).appendChild(this.fragment);\r\n\r\n        fn.cb(cb, this.tmpl);\r\n\r\n        return tmpl;\r\n    }\r\n    //在el子节点ex中插入解析后的模板\t\r\n    insertBefore(el, ex, cb) {\r\n\r\n        const tmpl = this.tmpl,\r\n            fn = tmpl.fn;\r\n\r\n        tmpl.getEl(el).insertBefore(this.fragment, ex);\r\n\r\n        fn.cb(cb, tmpl);\r\n\r\n        return tmpl;\r\n    }\r\n\r\n}\r\n\r\nexport default Render;\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/render.js","/*路由相关*/\r\n\r\n//常用的方法\r\nimport fn from './fn';\r\n\r\n//把路由实例挂靠到模板中\r\nexport function setRouter() {\r\n\tif(fn.isObj(this.config.router)) {\r\n\t\tthis.constructor.router = this.config.router;\r\n\t}\r\n}\r\n\r\n//检查路由状态\r\nexport function checkRouterStatus() {\r\n\t//获取路由\r\n\tconst router = this.constructor.router,\r\n\t\tstatus = this.config.async;\r\n\tif(!(status === false) && router) {\r\n\t\trouter.changeRoutereStatus(true);\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/tmpl/router.js"],"sourceRoot":""}